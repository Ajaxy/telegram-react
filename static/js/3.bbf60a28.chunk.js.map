{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Stores/PlayerStore.js","Actions/Client.js","Utils/User.js","Stores/SupergroupStore.js","Utils/Media.js","Components/Viewer/FileProgress.js","Components/Message/Media/Sticker.js","Stores/BasicGroupStore.js","Components/Tile/UserTileControl.js","Stores/StickerStore.js","Components/Message/Media/Photo.js","Components/Message/MessageAuthor.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/StickerPreview.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/Message/Reply.js","Components/Tile/ReplyTile.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Notifications.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Dialog/ForwardDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogTitleControl.js","Components/Tile/DialogStatusControl.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/Tile/DialogContentControl.js","Components/Tile/DialogBadgeControl.js","Components/Tile/DialogMetaControl.js","Components/Tile/DialogControl.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Dialog/ChatInfoDialog.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/MessagePlaceholder.js","Components/ColumnMiddle/PinnedMessage.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Dialog/ShareStickerSetButton.js","Components/Dialog/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","FileStore","_this","Object","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","next","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","arguments","onClientUpdate","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","reset","initDB","_x2","handleDownloads","handleUploads","arr","id","idb_key","local","downloads","has","is_downloading_completed","items","get","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","console","error","remote","uploads","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","handleAnimation","audio","handleAudio","photo","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","length","photoSize","source","updatePhotoBlob","chat_id","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","chatId","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","@type","setMaxListeners","Infinity","callbacks","db","WeakMap","Map","callback","log","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","send","file_id","sent","concat","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","undefined","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","keys","loadUsersContent","saveOrDownload","fileName","mime","type","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","_photo9","small","big","getChatUserId","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","profile_photo","ids","all","loadChatContent","loadChatsContent","loadDraftContent","draft_message","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","value","action","getPrivateChatTypingString","firstUser","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","key","getContent","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","__webpack_require__","d","__webpack_exports__","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorMain","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","is_outgoing","last_read_outbox_message_id","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","emoji","isMediaContent","isVideoMessage","isLottieMessage","file_name","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","getOutgoingStatus","getSendingState","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","openChat","highlightMessage","selectMessage","_Controllers_TdLibController__WEBPACK_IMPORTED_MODULE_0__","popup","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","isBlurredThumbnail","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","_toRowColumn","setIndex","stickerIndex","prevRows","ceil","toRowColumn","_toRowColumn2","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","row","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","circleStyle","circle","FileProgress","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","zIndex","completeIcon","_this$getProgressPara","_this$getProgressPara2","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","background","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","preview","isBlurred","fitSize","stickerStyle","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","STICKER_DISPLAY_SIZE","basic_group","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","tileColor","abs","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","pointer","StickerStore","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","foundStickers","onClientUpdatePhotoBlob","thumbnailSize","showProgress","photoStyle","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","MessageAuthor","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","palette","primary","main","borderRadius","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","join","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","STICKER_PREVIEW_DISPLAY_SIZE","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","Reply","onGetMessageResult","handleOpen","onMouseDown","_Tile_ReplyTile__WEBPACK_IMPORTED_MODULE_11__","_Users_zinchuk_Dev_telegram_react_private_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","inherits","createClass","build","maxSnack","MAX_SNACK","displayName","getDisplayName","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","showOnline","BookmarkBorder_default","Components_Tile_ChatStatus","statusRoot","statusIcon","ForwardTargetChat","shortTitle","forward-target-chat-selected","Components_Tile_ChatTileControl","border","markSelected","markUnselected","boxShadow","paper","cyrillicInput","getCyrillicInput","input","output","latinInput","getLatinInput","ForwardDialog","loadContent","promises","getChatsPromise","savedMessagesPromise","chats","savedMessages","getPublicMessageLink","offset_order","offset_chat_id","force","slicedToArray","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","copy","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","can_be_forwarded","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","added_sticker_file_ids","from_chat_id","as_album","handleChangeSelection","div","handleSearchKeyDown","handleSearchKeyUp","searchRef","latinText","cyrillicText","searchResults","hasSearchText","searchText","handleSearchPaste","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","Components_Tile_ForwardTargetChat","foundChats","aria-describedby","searchList","autoFocus","spacing","unit","dialogContent","withSnackbar","NotificationTimer","handleTimer","expire","timeout","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","menuAnchorOrigin","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","MainMenuButton","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","deleteChat","leaveChatTitle","aria-owns","aria-haspopup","menuIconButton","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","UserStatusControl","isAccent","prevUserId","userStatusSubtitle","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","Components_Tile_UserStatusControl","DialogTitleControl","DialogStatusControl","updateSubtitle","find","subtitle","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","Components_Tile_DialogTitleControl","Components_Tile_DialogStatusControl","ChatDetailsHeader","backButton","leftIconButton","ArrowBack_default","rightIconButton","NotificationsListItem","Notifications_default","NotificationsActive_default","noWrap","ListItemSecondaryAction_default","Switch_default","MoreListItem","handleMoreClick","openMore","handleSendMessage","setChatId","handleBlock","isGroup","isBlocked","isMember","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","unmountOnExit","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","hasGroupsInCommon","handleUsernameHint","telegramUrlOption","OptionStore","usernameLink","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleSelectUser","getContentHeight","clientHeight","offsetHeight","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","isMe","member","sort","y","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","whiteSpace","wordWrap","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","nested","GroupsInCommonHeader","backIconButton","GroupsInCommon","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","ChatInfo","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","PureComponent","userStatusRoot","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","subscribersString","listItemSelected","foundPublicChatSubtitle","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderName","senderFullName","tile","accentBackground","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","globalPromises","globalPromise","globalLatinPromise","globalResults","global","splice","recentlyFound","USERNAME_LENGTH_MIN","offset_date","offset_message_id","topPromise","recentlyFoundPromise","_ref4","category","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","loading","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","RadioGroup_default","FormControlLabel_default","control","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","authorizationState","handleMenuOpen","isAuthorizationReady","handleLogOut","onLogOut","handleCheckUpdates","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","icons_Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","searchInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icons_Search_default","openIcon","DialogContentControl","onClientUpdateClearHistory","contentControl","DialogBadgeControl","unreadCount","unreadMentionCount","showUnreadCount","dialogBadge","dialogBadgeMuted","is_pinned","DialogMetaControl","isDialogSelected","Schedule_default","Done_default","DoneAll_default","DialogControl","isSelected","dialogActive","Components_Tile_DialogMetaControl","Components_Tile_DialogContentControl","Components_Tile_DialogBadgeControl","cursor","& $statusRoot","&:hover","& $statusIcon","DialogsList","onClientUpdateLeaveChat","hiddenChats","loadFirstSlice","onLoadNext","onUpdateConnectionState","newConnectionState","connectionState","skippedUpdates","onUpdateChatOrder","reorderChats","newChatIds","minChatOrder","offsetOrder","offsetChatId","_args2","CHAT_SLICE_LIMIT","finally","shift","waitSomeTime","CONTENTS_PRELOAD_DELAY","isDialogsReady","setDialogsReady","replaceChats","appendChats","getConnectionState","orderedChatIds","isDifferentOrder","dialogs","Components_Tile_DialogControl","_","DialogControlPlaceholder","oldChatIds","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","Components_ColumnLeft_DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","HeaderCommand","canBeDeletedForAllUsers","can_be_deleted_for_all_users","openDeleteDialog","handleDeleteContinue","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","showProgressAnimation","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","slice","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","paused","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHint","showDate","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","MessageStatus","handleUpdateMessageSend","payload","newMessageId","handleUpdateChatReadOutbox","unreadSeparator","WebPage","displaySmallSize","site_name","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","handleSelection","mouseDown","handleDateClick","_this$props7","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","_this$props10","sendingState","showUnreadSeparator","_this$props11","webPage","media","unread","senderUserId","messageClassName","message-selected","messageSelected","messageHighlighted","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_Forward","Components_Message_MessageStatus","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","MessagePlaceholder","titleWidth","sin","textWidth","cos","PinnedMessage","onUpdateChatPinnedMessage","pinned_message_id","chatPhotoStyle","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","scrollBehavior","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","replaceMessage","viewMessages","onUpdateNewMessage","completed","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","_message$props","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","insertBefore","basicGroupChat","upgraded_from_basic_group_id","suppressHandleScroll","suppressHandleScrollOnSelectChat","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","prevMessageId","separatorMessageId","firstSliceLoading","throttle","previousChat","last_read_inbox_message_id","MAX_VALUE","placeholdersTimeout","MESSAGES_PLACEHOLDER_DELAY","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","Components_Message_ServiceMessage","Components_Message_Message","showTitle","messages-list-selection-active","Components_Message_MessagePlaceholder","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","dialogTitleRoot","disablePointerEvents","Dialog_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","DialogDetails","onUpdateChatDetailsVisibility","onClientUpdateDialogsReady","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_Dialog_StickerSetDialog","Components_Dialog_ChatInfoDialog","MediaViewerControl","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","getAnimationData","fileReader","FileReader","onload","parse","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","thumbnailBlob","isVideo","isAnimation","isLottie","videoWidth","videoHeight","onVolumeChange","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","extended","children","media-viewer-button-extended","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","delegateYield","saveAnimation","saveDocument","saveVideo","savePhoto","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","cursor-pointer","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","prevPhoto","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","currentIndex","getReadWriteStore","prevFileId","currentFileId","historyPhoto","getHistoryPhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","parseInt","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Dialog_ForwardDialog","withLanguage"],"mappings":"6LAYMA,GAAc,EA44BdC,EAAQ,gBAz4BV,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACVC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAsBJI,SAvBc,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAuBH,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACCL,EAAO,SADRE,EAAAE,KAEE,eAFFF,EAAAG,GAAA,EAUE,6BAVFH,EAAAG,GAAA,yBAGCnB,EAAKoB,IAAIN,EAAOO,MAEhBrB,EAAKsB,aAAaR,GAElBd,EAAKuB,KAAKT,EAAO,SAAUA,GAP5BE,EAAAQ,OAAA,0BAAAR,EAAAE,KAAA,EAWOlB,EAAKyB,2BAA2BX,GAXvC,sBAAAE,EAAAQ,OAAA,qCAAAR,EAAAU,SAAAb,MAvBG,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EA2Cd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,iCAIL,IAAK,wBAIL,IAAK,2BACDd,EAAKuB,KAAKT,EAAO,SAAUA,KAtDzBd,EA8Dd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAhEvC9B,EAmEdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBArE1C9B,EAwEdyB,2BAxEc,eAAAW,EAAAnC,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAwEe,SAAAyB,EAAMvB,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACpBJ,EADoB,CAAAwB,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAEpBV,EAAOyB,oBAFa,CAAAD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAImB,6BAAxCV,EAAOyB,oBAAoB,SAJN,CAAAD,EAAApB,KAAA,QAKrBlB,EAAKwC,QALgBF,EAAApB,KAAA,mBAM0B,0CAAxCJ,EAAOyB,oBAAoB,SANb,CAAAD,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,GAOflB,EAAKyC,SAPU,yBAAAH,EAAAZ,SAAAW,MAxEf,gBAAAK,GAAA,OAAAN,EAAAR,MAAAzB,KAAA0B,YAAA,GAAA7B,EAmFdsB,aAAe,SAAAR,GACX,GAAKA,EAAL,CADqB,IAGbO,EAASP,EAATO,KACHA,IAELrB,EAAK2C,gBAAgBtB,GACrBrB,EAAK4C,cAAcvB,MA1FTrB,EA6Fd2C,gBAAkB,SAAAtB,GAAQ,IACdwB,EAA4BxB,EAA5BwB,IAAKC,EAAuBzB,EAAvByB,GAAIC,EAAmB1B,EAAnB0B,QAASC,EAAU3B,EAAV2B,MAG1B,UAFO3B,EAAKwB,IAEP7C,EAAKiD,UAAUC,IAAIJ,IACnBE,EAAMG,2BACNtD,GAAgBkD,GAAYF,GAAjC,CAEA,IAAMO,EAAQpD,EAAKiD,UAAUI,IAAIP,GACjC,GAAKM,EAAL,CAEApD,EAAKiD,UAAUK,OAAOR,GAEtB,IAAMhD,EAAQE,EAAKuD,WAEnBH,EAAMI,QAAQ,SAAAC,GACV,OAAQA,EAAK,UACT,IAAK,OACDzD,EAAK0D,WAAW5D,EAAO2D,EAAMpC,EAAMwB,GACnC,MAEJ,IAAK,UACD7C,EAAK2D,cAAc7D,EAAO2D,EAAMpC,EAAMwB,GACtC,MAEJ,IAAK,UACD7C,EAAK4D,cAAc9D,EAAO2D,EAAMpC,EAAMwB,EAAK,MAC3C,MAEJ,IAAK,OACD7C,EAAK6D,WAAW/D,EAAO2D,EAAMpC,EAAMwB,GACnC,MAEJ,QACIiB,QAAQC,MAAM,wCAAyCN,SA/HzDzD,EAqId4C,cAAgB,SAAAvB,GAAQ,IACZyB,EAAezB,EAAfyB,GAAIkB,EAAW3C,EAAX2C,cACL3C,EAAKwB,IAEP7C,EAAKiE,QAAQf,IAAIJ,KAClBkB,EAAOE,wBAEXlE,EAAKiE,QAAQX,OAAOR,KA5IV9C,EA+Id0D,WAAa,SAAC5D,EAAOqE,EAAM9C,EAAMwB,GACxBsB,GAELnE,EAAKoE,aACDtE,EACAuB,EACAwB,EACA,kBAAM7C,EAAKqE,oBAAoBF,EAAKrB,GAAIzB,EAAKyB,KAC7C,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAeJ,MAvJ3CnE,EA2Jd6D,WAAa,SAAC/D,EAAO0E,EAAMnD,EAAMwB,GACxB2B,GAELxE,EAAKoE,aACDtE,EACAuB,EACAwB,EACA,kBAAM7C,EAAKyE,oBAAoBD,EAAK1B,GAAIzB,EAAKyB,KAC7C,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAeC,MAnK3CxE,EAuKd2D,cAAgB,SAAC7D,EAAO4E,EAASrD,EAAMwB,GACnC,GAAK6B,EAAL,CAD2C,IAGnCC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAER5E,EAAK6E,gBAAgB/E,EAAO8E,EAAWvD,EAAMwB,EAAK6B,GAClD,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MAER9E,EAAK+E,YAAYjF,EAAOgF,EAAOzD,EAAMwB,EAAK6B,GAC1C,MAEJ,IAAK,yBAA0B,IACnBM,EAAUL,EAAVK,MAERhF,EAAKiF,YAAYnF,EAAOkF,EAAO3D,EAAMwB,EAAK6B,GAC1C,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERlF,EAAKmF,eAAerF,EAAOoF,EAAU7D,EAAMwB,EAAK6B,GAChD,MAEJ,IAAK,cAAe,IACRU,EAAST,EAATS,KAERpF,EAAKqF,WAAWvF,EAAOsF,EAAM/D,EAAMwB,EAAK6B,GACxC,MAEJ,IAAK,kBAAmB,IACZY,EAAaX,EAAbW,SAERtF,EAAKuF,eAAezF,EAAOwF,EAAUjE,EAAMwB,EAAK6B,GAChD,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAERhF,EAAKiF,YAAYnF,EAAOkF,EAAO3D,EAAMwB,EAAK6B,GAC1C,MAEJ,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QAERxF,EAAK4D,cAAc9D,EAAO0F,EAASnE,EAAMwB,EAAK6B,GAC9C,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,MAFC,IAIRb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEhB,GACA5E,EAAK6E,gBAAgB/E,EAAO8E,EAAWvD,EAAMwB,EAAK6B,GAGlDI,GACA9E,EAAK+E,YAAYjF,EAAOgF,EAAOzD,EAAMwB,EAAK6B,GAG1CQ,GACAlF,EAAKmF,eAAerF,EAAOoF,EAAU7D,EAAMwB,EAAK6B,GAGhDM,GACAhF,EAAKiF,YAAYnF,EAAOkF,EAAO3D,EAAMwB,EAAK6B,GAG1Cc,GACAxF,EAAK4D,cAAc9D,EAAO0F,EAASnE,EAAMwB,EAAK6B,GAG9CgB,GACA1F,EAAK6F,YAAY/F,EAAO4F,EAAOrE,EAAMwB,EAAK6B,GAG1CkB,GACA5F,EAAK8F,gBAAgBhG,EAAO8F,EAAYvE,EAAMwB,EAAK6B,GAGnDiB,GACA3F,EAAK+F,gBAAgBjG,EAAO6F,EAAYtE,EAAMwB,EAAK6B,GAGvD,MAEJ,IAAK,eAAgB,IAETY,EADUX,EAAVqB,MACAV,SAERtF,EAAKuF,eAAezF,EAAOwF,EAAUjE,EAAMwB,EAAK6B,GAChD,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAER1F,EAAK6F,YAAY/F,EAAO4F,EAAOrE,EAAMwB,EAAK6B,GAC1C,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WAER3F,EAAK+F,gBAAgBjG,EAAO6F,EAAYtE,EAAMwB,EAAK6B,GACnD,MAEJ,IAAK,mBAAoB,IACbkB,EAAejB,EAAfiB,WAER5F,EAAK8F,gBAAgBhG,EAAO8F,EAAYvE,EAAMwB,EAAK6B,MA5RjD1E,EAoSdqF,WAAa,SAACvF,EAAOsF,EAAM/D,EAAMwB,EAAK6B,GAClC,GAAKU,EAAL,CAD8C,IAGtCR,EAAqBQ,EAArBR,UAAWI,EAAUI,EAAVJ,MACfA,GACAhF,EAAKiF,YAAYnF,EAAOkF,EAAO3D,EAAMwB,EAAK6B,GAG1CE,GACA5E,EAAK6E,gBAAgB/E,EAAO8E,EAAWvD,EAAMwB,EAAK6B,KA7S5C1E,EAiTdiF,YAAc,SAACnF,EAAOkF,EAAO3D,EAAMwB,EAAKoD,GACpC,GAAIjB,EACA,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAMmB,MAAMC,OAAQF,IAAK,CACzC,IAAMG,EAAYrB,EAAMmB,MAAMD,GAC9B,GAAIG,EAAW,CACX,IAAMC,EAASD,EAAUrB,MACzB,GAAIsB,GAAUA,EAAOxD,KAAOzB,EAAKyB,GAAI,CACjC9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAKuG,gBAAgBN,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACrD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,KAErD,UA/TNjG,EAsUd+E,YAAc,SAACjF,EAAOgF,EAAOzD,EAAMwB,EAAKoD,GACpC,GAAInB,EAAM2B,sBAAuB,CAC7B,IAAMH,EAASxB,EAAM2B,sBAAsBzB,MACvCsB,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK0G,yBAAyBT,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KAC9D,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAI6D,KAAoBV,KAKlE,GAAInB,EAAMA,MAAO,CACb,IAAMwB,EAASxB,EAAMA,MACjBwB,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK4G,gBAAgBX,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACrD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,OA5VnDjG,EAkWdmF,eAAiB,SAACrF,EAAOoF,EAAU7D,EAAMwB,EAAKoD,GAC1C,GAAIf,EAAS2B,UAAW,KACLP,EAAWpB,EAAS2B,UAA3B7B,MACJsB,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK8G,4BAA4Bb,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACjE,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAI6D,KAAoBV,KAKlE,GAAIf,EAASA,SAAU,KACDoB,EAAWpB,EAArBA,SACJoB,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK+G,mBAAmBd,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACxD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,OAxXnDjG,EA8XduF,eAAiB,SAACzF,EAAOwF,EAAUjE,EAAMwB,EAAKoD,GAC1C,IAAMe,EAAaC,YAAc3B,GACjC,GAAI0B,EAAY,CACZ,IAAMV,EAAStG,EAAKkH,gBAAgBF,GAChCV,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAKmH,mBAAmBlB,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACxD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAI6D,KAAoBV,OAxYxDjG,EA8Yd4D,cAAgB,SAAC9D,EAAO0F,EAASnE,EAAMwB,EAAKoD,GACxC,GAAIT,EAAQqB,UAAW,CACnB,IAAMP,EAASd,EAAQqB,UAAU7B,MACjC,GAAIsB,GAAUA,EAAOxD,KAAOzB,EAAKyB,GAAI,CACjC,IAAMsE,EAASnB,EAAMA,EAAIO,QAAU,EAC7Ba,EAAYpB,EAAMA,EAAInD,GAAK,EAEjC9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAKsH,2BAA2BF,EAAQC,EAAWhG,EAAKyB,KAC9D,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAI6D,KAAoBV,GAAOT,MAKzE,GAAIA,EAAQA,QAAS,CACjB,IAAMc,EAASd,EAAQA,QACvB,GAAIc,GAAUA,EAAOxD,KAAOzB,EAAKyB,GAAI,CACjC,IAAMsE,EAASnB,EAAMA,EAAIO,QAAU,EAC7Ba,EAAYpB,EAAMA,EAAInD,GAAK,EAEjC9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAKuH,kBAAkBH,EAAQC,EAAWhG,EAAKyB,KACrD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,GAAOT,QA1a1DxF,EAgbd8F,gBAAkB,SAAChG,EAAO0H,EAAWnG,EAAMwB,EAAKoD,GAC5C,GAAIuB,EAAUC,MAAO,CACjB,IAAMnB,EAASkB,EAAUC,MACrBnB,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK0H,oBAAoBzB,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACzD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,OAzbnDjG,EA+bd+F,gBAAkB,SAACjG,EAAO6H,EAAWtG,EAAMwB,EAAKoD,GAC5C,GAAI0B,EAAUd,UAAW,CACrB,IAAMP,EAASqB,EAAUd,UAAU7B,MAC/BsB,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK4H,6BAA6B3B,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KAClE,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAI6D,KAAoBV,KAKlE,GAAI0B,EAAUjC,MAAO,CACjB,IAAMY,EAASqB,EAAUjC,MACrBY,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK6H,oBAAoB5B,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACzD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,OArdnDjG,EA2dd6F,YAAc,SAAC/F,EAAO4F,EAAOrE,EAAMwB,EAAKoD,GACpC,GAAIP,EAAMmB,UAAW,CACjB,IAAMP,EAASZ,EAAMmB,UAAU7B,MAC3BsB,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK8H,yBAAyB7B,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KAC9D,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAI6D,KAAoBV,KAKlE,GAAIP,EAAMA,MAAO,CACb,IAAMY,EAASZ,EAAMA,MACjBY,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAK+H,gBAAgB9B,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACrD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,OAjfnDjG,EAufd6E,gBAAkB,SAAC/E,EAAO8E,EAAWvD,EAAMwB,EAAKoD,GAC5C,GAAIrB,EAAUiC,UAAW,CACrB,IAAMP,EAAS1B,EAAUiC,UAAU7B,MAC/BsB,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAKgI,6BAA6B/B,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KAClE,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAI6D,KAAoBV,KAKlE,GAAIrB,EAAUA,UAAW,CACrB,IAAM0B,EAAS1B,EAAUA,UACrB0B,GAAUA,EAAOxD,KAAOzB,EAAKyB,IAC7B9C,EAAKoE,aACDtE,EACAwG,EACAzD,EACA,kBAAM7C,EAAKiI,oBAAoBhC,EAAIO,QAASP,EAAInD,GAAIzB,EAAKyB,KACzD,kBAAM9C,EAAKsE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,OA7gBnDjG,EAglBdkI,gBAAkB,SAACpI,EAAOuB,KAhlBZrB,EA0sBdqD,IAAM,SAAA8E,GACF,OAAOnI,EAAKoD,MAAMC,IAAI8E,IA3sBZnI,EA8sBdoB,IAAM,SAAAC,GACFrB,EAAKoD,MAAMhC,IAAIC,EAAKyB,GAAIzB,IA/sBdrB,EAktBdoI,QAAU,SAAAD,GACN,OAAOnI,EAAKqI,UAAUhF,IAAI8E,IAntBhBnI,EAstBdsI,QAAU,SAACH,EAAQI,GACfvI,EAAKqI,UAAUjH,IAAI+G,EAAQI,IAvtBjBvI,EA0tBdwI,WAAa,SAAAL,GACTnI,EAAKqI,UAAU/E,OAAO6E,IA3tBZnI,EA8tBdkH,gBAAkB,SAAAF,GACd,IAAMmB,EAASnI,EAAKyI,cAAcpF,IAAI2D,GAEtC,OAAOhH,EAAKqD,IAAI8E,IAjuBNnI,EAouBd0I,gBAAkB,SAAC1B,EAAY3F,GAC3BrB,EAAKyI,cAAcrH,IAAI4F,EAAY3F,EAAKyB,IAExC9C,EAAKoB,IAAIC,IAvuBCrB,EA0uBd2I,WAAa,SAAAJ,GACT,IAAKA,EACD,OAAO,KAGX,GAAIvI,EAAK4I,KAAK1F,IAAIqF,GACd,OAAOvI,EAAK4I,KAAKvF,IAAIkF,GAGzB,IAAMM,EAAMC,IAAIC,gBAAgBR,GAGhC,OAFAvI,EAAK4I,KAAKxH,IAAImH,EAAMM,GAEbA,GAtvBG7I,EAyvBdgJ,cAAgB,SAAAT,GACRvI,EAAK4I,KAAK1F,IAAIqF,IACdvI,EAAK4I,KAAKtF,OAAOiF,IA3vBXvI,EA+vBduG,gBAAkB,SAACa,EAAQC,EAAWc,GAClCnI,EAAKuB,KAAK,wBAAyB,CAC/B6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAnwBFnI,EAuwBd0G,yBAA2B,SAACU,EAAQC,EAAWc,GAC3CnG,IAAgBiH,aAAa,CACzBC,QAAS,iCACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA5wBFnI,EAgxBd4G,gBAAkB,SAACQ,EAAQC,EAAWc,GAClCnG,IAAgBiH,aAAa,CACzBC,QAAS,wBACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KArxBFnI,EAyxBd0H,oBAAsB,SAACN,EAAQC,EAAWc,GACtCnI,EAAKuB,KAAK,4BAA6B,CACnC6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA7xBFnI,EAiyBd4H,6BAA+B,SAACR,EAAQC,EAAWc,GAC/CnI,EAAKuB,KAAK,qCAAsC,CAC5C6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAryBFnI,EAyyBd6H,oBAAsB,SAACT,EAAQC,EAAWc,GACtCnI,EAAKuB,KAAK,4BAA6B,CACnC6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA7yBFnI,EAizBdgI,6BAA+B,SAACZ,EAAQC,EAAWc,GAC/CnI,EAAKuB,KAAK,qCAAsC,CAC5C6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KArzBFnI,EAyzBdiI,oBAAsB,SAACb,EAAQC,EAAWc,GACtCnI,EAAKuB,KAAK,4BAA6B,CACnC6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA7zBFnI,EAi0Bd+G,mBAAqB,SAACK,EAAQC,EAAWc,GACrCnG,IAAgBiH,aAAa,CACzBC,QAAS,2BACT9B,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAt0BFnI,EA00Bd8H,yBAA2B,SAACV,EAAQC,EAAWc,GAC3CnI,EAAKuB,KAAK,iCAAkC,CACxC6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA90BFnI,EAk1Bd+H,gBAAkB,SAACX,EAAQC,EAAWc,GAClCnI,EAAKuB,KAAK,wBAAyB,CAC/B6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAt1BFnI,EA01BdsH,2BAA6B,SAACF,EAAQC,EAAWc,GAC7CnI,EAAKuB,KAAK,mCAAoC,CAC1C6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA91BFnI,EAk2BduH,kBAAoB,SAACH,EAAQC,EAAWc,GACpCnI,EAAKuB,KAAK,0BAA2B,CACjC6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAt2BFnI,EA02BdmH,mBAAqB,SAACC,EAAQC,EAAWc,GACrCnI,EAAKuB,KAAK,2BAA4B,CAClC6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KA92BFnI,EAk3Bd8G,4BAA8B,SAACM,EAAQC,EAAWc,GAC9CnI,EAAKuB,KAAK,oCAAqC,CAC3C6F,OAAQA,EACRC,UAAWA,EACXc,OAAQA,KAn3BZnI,EAAKwC,QAELxC,EAAK+B,mBACL/B,EAAKmJ,gBAAgBC,KANXpJ,uEAUVG,KAAKkJ,UAAY,GAGjBlJ,KAAKmJ,GAAK,KACVnJ,KAAKyI,KAAO,IAAIW,QAChBpJ,KAAKiD,MAAQ,IAAIoG,IACjBrJ,KAAKkI,UAAY,IAAImB,IACrBrJ,KAAKsI,cAAgB,IAAIe,IAEzBrJ,KAAK8C,UAAY,IAAIuG,IACrBrJ,KAAK8D,QAAU,IAAIuF,2EA+fVC,6EAWLtJ,KAAKmJ,0BACLxF,QAAQ4F,IAAI,yBACRD,GAAUA,kCAIdtJ,KAAKwJ,oCACL7F,QAAQ4F,IAAI,4BACRD,GAAUtJ,KAAKkJ,UAAUO,KAAKH,oCAItC3F,QAAQ4F,IAAI,4BACRD,GAAUtJ,KAAKkJ,UAAUO,KAAKH,GAElCtJ,KAAKwJ,cAAe,YACJxJ,KAAK0J,SAASC,MAAM,SAAA/F,GAAK,OAAID,QAAQ4F,IAAI,2BAA4B3F,aAKrF,GALA5D,KAAKmJ,UACLnJ,KAAKwJ,cAAe,EAEpB7F,QAAQ4F,IAAI,2BAERvJ,KAAKkJ,UAAUjD,OAAQ,CAEvB,IADAtC,QAAQ4F,IAAI,sCAAwCvJ,KAAKkJ,UAAUjD,QAC1DF,EAAI,EAAGA,EAAI/F,KAAKkJ,UAAUjD,OAAQF,IACvC/F,KAAKkJ,UAAUnD,KAEnB/F,KAAKkJ,UAAY,wIAKrB,OAAO,IAAIU,QAAQ,SAACC,EAASC,GACzB,IAAMC,EAAUC,OAAOC,UAAUC,KAAK,SACtCH,EAAQI,UAAY,kBAAMN,EAAQE,EAAQK,SAC1CL,EAAQM,QAAU,kBAAMP,EAAOC,EAAQnG,6CAM3C,OAAO5D,KAAKmJ,GAAGmB,YAAY,CAAC,iBAAkB,YAAYC,YAAY,6DAItE,IAAI7K,EAGJ,OAAOM,KAAKmJ,GAAGmB,YAAY,CAAC,iBAAkB,aAAaC,YAAY,sDAK9D5K,EAAOuB,EAAMwB,EAAK4G,EAAUkB,GAAe,IAAAC,EAAAzK,KACpD,GAAIN,EAEA,OADAwB,EAAOlB,KAAKkD,IAAIhC,EAAKyB,KAAOzB,IAChBA,EAAK2B,QAAU3B,EAAK2B,MAAMG,8BAClCwH,SAIJ,eAAAE,EAAA5K,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAAC,SAAAkK,EAAMzJ,GAAN,IAAA0J,EAAA,OAAArK,EAAAC,EAAAI,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,cAAA8J,EAAA9J,KAAA,EAC0Bc,IAAgBiJ,KAAK,CACxC/B,QAAS,WACTgC,QAAS7J,EAAKyB,KAHrB,OACSiI,EADTC,EAAAG,KAMGrH,QAAQ4F,IAAR,2BAAA0B,OAAuC/J,EAAKyB,IAAMzB,EAAM0J,GACxDH,EAAKtC,QAAQjH,EAAKyB,GAAIiI,EAASM,MAPlC,wBAAAL,EAAAtJ,SAAAoJ,MAAD,gBAAAQ,GAAA,OAAAT,EAAAjJ,MAAAzB,KAAA0B,YAAA,GAQGR,GAAMkK,KAAK9B,EAAUkB,GAK5B,IAAI5H,EAAU1B,EAAK0B,QAMnB,GALKA,IAEDA,GADA1B,EAAOlB,KAAKkD,IAAIhC,EAAKyB,KAAOzB,GACb0B,SAGdA,GAAYF,EAAjB,CAKA,GAAIA,EAIA,OAHAxB,EAAKkH,KAAO,IAAIiD,KAAK,CAAC3I,IACtB1C,KAAKmI,QAAQjH,EAAKyB,GAAIzB,EAAKkH,WAC3BkB,IAIJ,IAAIpI,EAAKkH,KAAT,CASA,IAAM2B,EAAUpK,EAAMuD,IAAIN,GAC1BmH,EAAQI,UAAY,SAAAmB,GAChB,IAAMlD,EAAOkD,EAAMC,OAAOnB,OAEtBhC,GACAlH,EAAKkH,KAAOA,EACZqC,EAAKtC,QAAQjH,EAAKyB,GAAIzB,EAAKkH,MAC3BkB,KAEAkB,KAGRT,EAAQM,QAAU,WACdG,WAjCAA,0CAqCMxC,EAAQwD,EAAU1F,GAC5B,IAAM7C,EAAQjD,KAAK8C,UAAUI,IAAI8E,IAAW,GACxC/E,EAAMwI,KAAK,SAAAC,GAAC,OAAIA,IAAM5F,MAE1B7C,EAAMwG,KAAK3D,GACX9F,KAAK8C,UAAU7B,IAAI+G,EAAQ/E,GAE3BpB,IAAgBiJ,KAAK,CACjB/B,QAAS,eACTgC,QAAS/C,EACTwD,SAAUA,iDAIExD,EAAQlC,GACxB,GAAK9F,KAAK8C,UAAUC,IAAIiF,GAAxB,CAEA,GAAKlC,EAEE,CACH,IAAM7C,EAAQjD,KAAK8C,UAAUI,IAAI8E,GAAQ2D,OAAO,SAAAD,GAAC,OAAIA,IAAM5F,IAC3D9F,KAAK8C,UAAU7B,IAAI+G,EAAQ/E,QAH3BjD,KAAK8C,UAAUK,OAAO6E,GAM1BnG,IAAgBiJ,KAAK,CACjB/B,QAAS,qBACTgC,QAAS/C,EACT4D,iBAAiB,wCAId5D,EAAQlC,GACX9F,KAAK8D,QAAQf,IAAIiF,GACLhI,KAAK8D,QAAQZ,IAAI8E,GACvByB,KAAK3D,GAEX9F,KAAK8D,QAAQ7C,IAAI+G,EAAQ,CAAClC,IAG9BnC,QAAQ4F,IAAI,6BAA+BvB,4CAG9BA,EAAQlC,GACjB9F,KAAK8D,QAAQf,IAAIiF,KACjBhI,KAAK8D,QAAQX,OAAO6E,GACpBrE,QAAQ4F,IAAI,4BAA8BzD,EAAInD,IAC9Cd,IAAgBiJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASP,EAAIO,QACbwF,YAAa,CAAC/F,EAAInD,IAClBmJ,QAAQ,iDAqLAC,EAAQ/D,GACxBhI,KAAKoB,KAAK,uBAAwB,CAC9B2K,OAAQA,EACR/D,OAAQA,gDAIIf,EAAQe,GACxBhI,KAAKoB,KAAK,uBAAwB,CAC9B6F,OAAQA,EACRe,OAAQA,WAr4BIgE,iBA24BxBhC,OAAO9I,KAAOvB,EACCA,g7BCx3Bf,SAASsM,EAAcC,GACnB,OAAKA,EAEDA,EAAO,KACP,GAAAjB,OAAUiB,EAAV,MAGAA,EAAO,QACP,GAAAjB,QAAWiB,EAAO,MAAMC,QAAQ,GAAhC,OAGAD,EAAO,WACP,GAAAjB,QAAWiB,EAAO,KAAO,MAAMC,QAAQ,GAAvC,OAGJ,GAAAlB,QAAWiB,EAAO,KAAO,KAAO,MAAMC,QAAQ,GAA9C,OAdW,MAiBf,SAASC,EAAYlL,GACjB,IAAKA,EAAM,OAAO,KAElB,IAAIgL,EAAOhL,EAAKgL,KAChB,OAAKA,EAEED,EAAcC,GAFH,KAyCtB,SAASG,EAASjE,EAAMkE,GACpB,GAA2C,qBAAhCtC,OAAOuC,UAAUC,WAKxBxC,OAAOuC,UAAUC,WAAWpE,EAAMkE,OAC/B,CACH,IAAIG,EAAUzC,OAAOrB,IAAIC,gBAAgBR,GACrCsE,EAAW3H,SAAS4H,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpChI,SAASkI,KAAKC,YAAYR,GAC1BA,EAASS,QACTpI,SAASkI,KAAKG,YAAYV,GAC1B1C,OAAOrB,IAAI0E,gBAAgBZ,aAIpBa,mFAAf,SAAA5M,EAA2Bf,EAAOsH,EAAQsG,GAA1C,IAAAnD,EAAArE,EAAA,OAAAxF,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSkG,EADT,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAESkM,EAFT,CAAA1M,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAGSkM,EAAWtH,OAHpB,CAAApF,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKyBc,IAAgBiJ,KAAK,CACtC/B,QAAS,cACT1C,QAASY,EACT4E,YAAa0B,IARrB,OAwBI,KAnBMnD,EALVvJ,EAAAmK,MAWWwC,SAAWpD,EAAOoD,SAASC,IAAI,SAAClJ,EAASwB,GAC5C,OACIxB,GAAW,CACPwE,QAAS,iBACT1C,QAASY,EACTtE,GAAI4K,EAAWxH,GACfvB,QAAS,QAKrBkJ,IAAaC,SAASvD,EAAOoD,UAEpBzH,EAAIwH,EAAWtH,OAAS,EAAGF,GAAK,EAAGA,IACxC2H,IAAatM,KAAK,mBAAoBsM,IAAaxK,IAAI+D,EAAQsG,EAAWxH,KAK9E6H,EAFQhO,IAAUwD,WAEOgH,EAAOoD,UA9BpC,yBAAA3M,EAAAU,SAAAb,6BAiCA,SAASkN,EAAkBjO,EAAO6N,GAC9B,IAAK,IAAIzH,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMxB,EAAUiJ,EAASzH,GACzB,GAAKxB,EAAL,CAF2C,IAMnCC,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAGDqJ,EAA8BlO,EAFR6E,EAAdC,UAEwCF,GAChD,MAEJ,IAAK,eAGDuJ,EAA0BnO,EAFR6E,EAAVG,MAEgCJ,GACxC,MAEJ,IAAK,yBAGDwJ,EAAiBpO,EAFC6E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,kBAGDyJ,EAA6BrO,EAFR6E,EAAbO,SAEsCR,GAC9C,MAEJ,IAAK,cAGD0J,EAAyBtO,EAFR6E,EAATS,KAE8BV,GACtC,MAEJ,IAAK,eAGDwJ,EAAiBpO,EAFC6E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,iBAGD2J,EAA4BvO,EAFR6E,EAAZa,QAEoCd,GAC5C,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,MAFC,IAIRb,EAAkEa,EAAlEb,UAAWE,EAAuDW,EAAvDX,MAAOI,EAAgDO,EAAhDP,SAAUF,EAAsCS,EAAtCT,MAAOQ,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAE3D,GAAIX,EAAO,CACPkJ,EAAiBpO,EAAOkF,EAAON,GAC/B,MAGJ,GAAIE,EAAW,CACXoJ,EAA8BlO,EAAO8E,EAAWF,GAChD,MAGJ,GAAII,EAAO,CACPmJ,EAA0BnO,EAAOgF,EAAOJ,GACxC,MAGJ,GAAIQ,EAAU,CACViJ,EAA6BrO,EAAOoF,EAAUR,GAC9C,MAGJ,GAAIc,EAAS,CACT6I,EAA4BvO,EAAO0F,EAASd,GAC5C,MAGJ,GAAIgB,EAAO,CACP4I,EAA0BxO,EAAO4F,EAAOhB,GACxC,MAGJ,GAAIiB,EAAY,CACZ4I,EAA8BzO,EAAO6F,EAAYjB,GACjD,MAGJ,MAEJ,IAAK,eAGD4J,EAA0BxO,EAFR6E,EAAVe,MAEgChB,GACxC,MAEJ,IAAK,mBAGD6J,EAA8BzO,EAFP6E,EAAfgB,WAEyCjB,MAQrE,SAAS8J,EAAiB1O,EAAOgF,EAAOJ,GAA6B,IAApB+J,IAAoB5M,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GACjE,GAAKiD,GACAJ,EAAL,CAFiE,IAIpDrD,EAASyD,EAAhBA,MACN,GAAKzD,EAAL,CALiE,IAAAsN,EAOjEtN,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACzByB,EARyD6L,EAQzD7L,GAAIuJ,EARqDsC,EAQrDtC,KAECtM,IAAUqI,QAAQtF,IAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAU6G,gBAAgBlC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,aACS2L,GAAgBpC,GAAQA,EAAOuC,MAChC7O,IAAUuE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASuJ,EAA0BnO,EAAOgF,EAAOJ,GAC7C,IAAKI,EAAO,OAAO,EACnB,IAAKJ,EAAS,OAAO,EAFiC,IAIvB2B,EAAcvB,EAArC2B,sBACR,IAAKJ,EAAW,OAAO,EAL+B,IAOzChF,EAASgF,EAAhBrB,MACN,IAAK3D,EAAM,OAAO,EARoC,IAW9CyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAGR,QADa/C,IAAUqI,QAAQ/G,EAAKyB,MAGpC/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAU2G,yBAAyBhC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACtE,kBAAM/C,IAAUuE,cAAcxB,EAAI6D,KAAoBjC,MAGnD,GAGX,SAASmK,EAAqB/O,EAAO8E,EAAWF,GAA6B,IAApB+J,IAAoB5M,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GACzE,GAAK+C,GACAF,EAAL,CAFyE,IAIxDrD,EAASuD,EAApBA,UACN,GAAKvD,EAAL,CALyE,IAAAyN,EAOzEzN,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACzByB,EARiEgM,EAQjEhM,GAAIuJ,EAR6DyC,EAQ7DzC,KAECtM,IAAUqI,QAAQtF,IAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUkI,oBAAoBvD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO0C,MAChChP,IAAUuE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASsJ,EAA8BlO,EAAO8E,EAAWF,GACrD,IAAKE,EAAW,OAAO,EACvB,IAAKF,EAAS,OAAO,EAFyC,IAI3C2B,EAAczB,EAAzBiC,UACR,IAAKR,EAAW,OAAO,EALuC,IAOjDhF,EAASgF,EAAhBrB,MACN,IAAK3D,EAAM,OAAO,EAR4C,IAWtDyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAGR,QADa/C,IAAUqI,QAAQ/G,EAAKyB,MAGpC/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUiI,6BAA6BtD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC1E,kBAAM/C,IAAUuE,cAAcxB,EAAI6D,KAAoBjC,MAGnD,GAGX,SAASsK,EAAmBlP,EAAOmP,EAASvK,GACxC,GAAKuK,GACAvK,EAAL,CAFiD,IAIzCwK,EAAYD,EAAZC,QACF1K,EAAO2K,IAAU9L,IAAI6L,GACtB1K,GAEL4K,GAAgBtP,EAAO0E,IAG3B,SAAS6K,EAAoBvP,EAAOoF,EAAUR,GAA6B,IAApB+J,IAAoB5M,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GACvE,GAAKqD,GACAR,EAAL,CAFuE,IAIvDrD,EAAS6D,EAAnBA,SACN,GAAK7D,EAAL,CALuE,IAAAiO,EAOvEjO,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACzByB,EAR+DwM,EAQ/DxM,GAAIuJ,EAR2DiD,EAQ3DjD,KAECtM,IAAUqI,QAAQtF,IAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUgH,mBAAmBrC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAChE,aACS2L,GAAgBpC,GAAQA,EAAOkD,MAChCxP,IAAUuE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAASyJ,EAA6BrO,EAAOoF,EAAUR,GACnD,IAAKQ,EAAU,OAAO,EACtB,IAAKR,EAAS,OAAO,EAFuC,IAIzC2B,EAAcnB,EAAzB2B,UACR,IAAKR,EAAW,OAAO,EALqC,IAO/ChF,EAASgF,EAAhBrB,MACN,IAAK3D,EAAM,OAAO,EAR0C,IAWpDyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAGR,QADa/C,IAAUqI,QAAQ/G,EAAKyB,MAGpC/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAU+G,4BAA4BpC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACzE,kBAAM/C,IAAUuE,cAAcxB,EAAI6D,KAAoBjC,MAGnD,GAGX,SAAS8K,EAAgB1P,EAAOsF,EAAMV,GAA6B,IAApB+J,IAAoB5M,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GAC1DuD,IACAV,GAILmK,EAAqB/O,EAFCsF,EAAdR,UAE+BF,EAAS+J,IAGpD,SAASL,EAAyBtO,EAAOsF,EAAMV,GAC3C,IAAKU,EAAM,OAAO,EAClB,IAAKV,EAAS,OAAO,EAF+B,IAI5CM,EAAqBI,EAArBJ,MACR,QAAIgJ,EAA8BlO,EADLsF,EAAdR,UACqCF,KAIpDwJ,EAAiBpO,EAAOkF,EAAON,IACxB,YAGI+K,mFAAf,SAAApN,EAAmCvC,EAAOwF,EAAUZ,GAApD,IAAAsC,EAAA3F,EAAAyB,EAAA,OAAApC,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACSoE,EADT,CAAAhD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAESkD,EAFT,CAAApC,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAIUwF,EAAaC,YAAc3B,GAJrC,CAAAhD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAOQH,EAAOtB,IAAUmH,gBAAgBF,GAPzC,CAAA1E,EAAApB,KAAA,gBAAAoB,EAAApB,KAAA,GASqBc,IAAgBiJ,KAAK,CAC9B/B,QAAS,sBACT5D,SAAUA,EACVoK,KAAMC,IACNC,MAAOC,IACPC,OAAQC,IACRC,MAAOC,IACPzJ,QAAS9B,EAAQ8B,UAhB7B,QASQnF,EATRiB,EAAA6I,KAkBQpL,IAAU2I,gBAAgB1B,EAAY3F,GAEtCvB,EAAQC,IAAUwD,WApB1B,WAuBIlC,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACzByB,EAAOzB,EAAPyB,IAEK/C,IAAUqI,QAAQ/G,EAAKyB,IA1BxC,CAAAR,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,kBA6BIzB,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUoH,mBAAmBzC,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAChE,kBAAM/C,IAAUuE,cAAcxB,EAAIyB,IAAeG,KAlCzD,yBAAApC,EAAAZ,SAAAW,6BAsCA,SAAS6N,EAAoBpQ,EAAOkF,EAAON,GACvC,GAAKM,GACAN,EAAL,CAFgD,IAIxCyB,EAAUnB,EAAVmB,MACR,GAAKA,EAAL,CAEA,IAAME,EAAY8J,YAAQhK,EAAOiK,KACjC,GAAK/J,EAAL,CARgD,IAUnChF,EAASgF,EAAhBrB,MACN,GAAK3D,EAAL,CAXgD,IAcxCyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAEK/C,IAAUqI,QAAQtF,IAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUwG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM/C,IAAUuE,cAAcxB,EAAIyB,IAAeG,SAIzD,SAASwJ,EAAiBpO,EAAOkF,EAAON,GACpC,GAAKM,GACAN,EAAL,CAF6C,IAIrCyB,EAAUnB,EAAVmB,MACR,GAAKA,EAAL,CAEA,IAAME,EAAYgK,YAAalK,GAC/B,GAAKE,EAAL,CAR6C,IAUhChF,EAASgF,EAAhBrB,MACN,GAAK3D,EAAL,CAX6C,IAcrCyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAEK/C,IAAUqI,QAAQtF,IAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUwG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM/C,IAAUuE,cAAcxB,EAAIyB,IAAeG,SAIzD,SAAS4L,EAA0BxQ,EAAOkF,EAAON,GAC7C,IAAKM,EAAO,OAAO,EACnB,IAAKN,EAAS,OAAO,EAErB,IAAM2B,EAAYkK,YAAsBvL,EAAMmB,OAC9C,IAAKE,EAAW,OAAO,EAL+B,IAOzChF,EAASgF,EAAhBrB,MACN,IAAK3D,EAAM,OAAO,EARoC,IAW9CyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAGR,QADa/C,IAAUqI,QAAQtF,KAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUwG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,kBAAM/C,IAAUuE,cAAcxB,EAAI6D,KAAoBjC,MAGnD,GAGX,SAAS8L,EAAmB1Q,EAAO0F,EAASd,GAA6B,IAApB+J,IAAoB5M,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GACrE,GAAK2D,EAAL,CADqE,IAGtDnE,EAASmE,EAAlBA,QACN,GAAKnE,EAAL,CAJqE,IAAAoP,EAMrEpP,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACzByB,EAP6D2N,EAO7D3N,GAAIuJ,EAPyDoE,EAOzDpE,KAGZ,IADatM,IAAUqI,QAAQtF,GAC/B,CAEA,IAAMsE,EAAS1C,EAAUA,EAAQ8B,QAAU,EACrCa,EAAY3C,EAAUA,EAAQ5B,GAAK,EAEzC/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUwH,kBAAkBH,EAAQC,EAAWvE,IACrD,aACS2L,GAAgBpC,GAAQA,EAAOqE,MAChC3Q,IAAUuE,cAAcxB,EAAIyB,IAAeG,GAAWc,QAMtE,SAAS6I,EAA4BvO,EAAO0F,EAASd,GACjD,IAAKc,EAAS,OAAO,EADqC,IAGvCa,EAAcb,EAAzBqB,UACR,IAAKR,EAAW,OAAO,EAJmC,IAM7ChF,EAASgF,EAAhBrB,MACN,IAAK3D,EAAM,OAAO,EAPwC,IAUlDyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAGR,GADa/C,IAAUqI,QAAQtF,GACrB,OAAO,EAEjB,IAAMsE,EAAS1C,EAAUA,EAAQ8B,QAAU,EACrCa,EAAY3C,EAAUA,EAAQ5B,GAAK,EAUzC,OARA/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUuH,2BAA2BF,EAAQC,EAAWvE,IAC9D,kBAAM/C,IAAUuE,cAAcxB,EAAI6D,KAAoBjC,GAAWc,MAG9D,EAGX,SAASmL,EAAiB7Q,EAAO4F,EAAOhB,GAA6B,IAApB+J,IAAoB5M,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GACjE,GAAK6D,GACAhB,EAAL,CAFiE,IAIpDrD,EAASqE,EAAhBA,MACN,GAAKrE,EAAL,CALiE,IAAAuP,EAOjEvP,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACzByB,EARyD8N,EAQzD9N,GAAIuJ,EARqDuE,EAQrDvE,KAECtM,IAAUqI,QAAQtF,IAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAUgI,gBAAgBrD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC7D,aACS2L,GAAgBpC,GAAQA,EAAOwE,MAChC9Q,IAAUuE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS4J,EAA0BxO,EAAO4F,EAAOhB,GAC7C,IAAKgB,EAAO,OAAO,EACnB,IAAKhB,EAAS,OAAO,EAFiC,IAInC2B,EAAcX,EAAzBmB,UACR,IAAKR,EAAW,OAAO,EAL+B,IAOzChF,EAASgF,EAAhBrB,MACN,IAAK3D,EAAM,OAAO,EARoC,IAW9CyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAGR,QADa/C,IAAUqI,QAAQtF,KAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAU+H,yBAAyBpD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACtE,kBAAM/C,IAAUuE,cAAcxB,EAAI6D,KAAoBjC,MAGnD,GAGX,SAASoM,EAAqBhR,EAAO6H,EAAWjD,GAA6B,IAApB+J,IAAoB5M,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GACzE,GAAK8F,GACAjD,EAAL,CAFyE,IAI5DrD,EAASsG,EAAhBjC,MACN,GAAKrE,EAAL,CALyE,IAAA0P,EAOzE1P,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACzByB,EARiEiO,EAQjEjO,GAAIuJ,EAR6D0E,EAQ7D1E,KAECtM,IAAUqI,QAAQtF,IAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAU8H,oBAAoBnD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO2E,MAChCjR,IAAUuE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS6J,EAA8BzO,EAAO6H,EAAWjD,GACrD,IAAKiD,EAAW,OAAO,EACvB,IAAKjD,EAAS,OAAO,EAFyC,IAI3C2B,EAAcsB,EAAzBd,UACR,IAAKR,EAAW,OAAO,EALuC,IAOjDhF,EAASgF,EAAhBrB,MACN,IAAK3D,EAAM,OAAO,EAR4C,IAWtDyB,GADRzB,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GACzByB,GAGR,QADa/C,IAAUqI,QAAQtF,KAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAU6H,6BAA6BlD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IAC1E,kBAAM/C,IAAUuE,cAAcxB,EAAI6D,KAAoBjC,MAGnD,GAGX,SAASuM,EAAqBnR,EAAO0H,EAAW9C,GAA6B,IAApB+J,IAAoB5M,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GACzE,GAAK2F,GACA9C,EAAL,CAFyE,IAI5DrD,EAASmG,EAAhBC,MACN,GAAKpG,EAAL,CALyE,IAAA6P,EAOzE7P,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACzByB,EARiEoO,EAQjEpO,GAAIuJ,EAR6D6E,EAQ7D7E,KAECtM,IAAUqI,QAAQtF,IAG/B/C,IAAUqE,aACNtE,EACAuB,EACA,KACA,kBAAMtB,IAAU2H,oBAAoBhD,EAAQ8B,QAAS9B,EAAQ5B,GAAIA,IACjE,aACS2L,GAAgBpC,GAAQA,EAAO8E,MAChCpR,IAAUuE,cAAcxB,EAAIyB,IAAeG,OAM3D,SAAS0M,EAAoBtR,EAAO6N,GAKhC,IAJA,IAAM0D,EAAQ,IAAI7H,IACdpC,EAAS,EACPkK,EAAU,IAAI9H,IAEXtD,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAMxB,EAAUiJ,EAASzH,GACzB,GAAKxB,EAAL,CAF2C,IAMnC8B,EAA0D9B,EAA1D8B,QAAS7B,EAAiDD,EAAjDC,QAAS4M,EAAwC7M,EAAxC6M,eAAgBC,EAAwB9M,EAAxB8M,oBAW1C,GATID,GACAF,EAAMjQ,IAAImQ,EAAgBA,GAG1BC,IACApK,EAASZ,EACT8K,EAAQlQ,IAAIoQ,EAAqBA,IAGjC7M,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAERiK,EAAqB/O,EAAO8E,EAAWF,GACvCsJ,EAA8BlO,EAAO8E,EAAWF,GAChD,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MAER0J,EAAiB1O,EAAOgF,EAAOJ,GAC/BuJ,EAA0BnO,EAAOgF,EAAOJ,GACxC,MAEJ,IAAK,yBAGDwJ,EAAiBpO,EAFC6E,EAAVK,MAEuBN,GAC/B,MAEJ,IAAK,iBAGDsK,EAAmBlP,EAFC6E,EAAZsK,QAE2BvK,GACnC,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERmK,EAAoBvP,EAAOoF,EAAUR,GACrCyJ,EAA6BrO,EAAOoF,EAAUR,GAC9C,MAEJ,IAAK,cAAe,IACRU,EAAST,EAATS,KAERoK,EAAgB1P,EAAOsF,EAAMV,GAC7B0J,EAAyBtO,EAAOsF,EAAMV,GACtC,MAEJ,IAAK,kBAGD+K,EAAoB3P,EAFC6E,EAAbW,SAE6BZ,GACrC,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EACD,MAHY,IAMRb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WACnE6L,GAAY,EAEZ7M,IACAiK,EAAqB/O,EAAO8E,EAAWF,GACvC+M,GAAazD,EAA8BlO,EAAO8E,EAAWF,IAG7DI,IACA0J,EAAiB1O,EAAOgF,EAAOJ,GAC/B+M,GAAaxD,EAA0BnO,EAAOgF,EAAOJ,IAGrDQ,IACAmK,EAAoBvP,EAAOoF,EAAUR,GACrC+M,GAAatD,EAA6BrO,EAAOoF,EAAUR,IAG3Dc,IACAgL,EAAmB1Q,EAAO0F,EAASd,GACnC+M,GAAapD,EAA4BvO,EAAO0F,EAASd,IAGzDgB,IAEA+L,GAAanD,EAA0BxO,EAAO4F,EAAOhB,IAGrDiB,IACAmL,EAAqBhR,EAAO6F,EAAYjB,GACxC+M,GAAalD,EAA8BzO,EAAO6F,EAAYjB,IAG9DkB,GACAqL,EAAqBnR,EAAO8F,EAAYlB,GAGxC+M,IACAvB,EAAoBpQ,EAAOkF,EAAON,GAClCwJ,EAAiBpO,EAAOkF,EAAON,GAC/B4L,EAA0BxQ,EAAOkF,EAAON,IAE5C,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAERkL,EAAoBpQ,EAAOkF,EAAON,GAClCwJ,EAAiBpO,EAAOkF,EAAON,GAC/B4L,EAA0BxQ,EAAOkF,EAAON,GACxC,MAEJ,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QAERgL,EAAmB1Q,EAAO0F,EAASd,GACnC2J,EAA4BvO,EAAO0F,EAASd,GAC5C,MAEJ,IAAK,eAID+K,EAAoB3P,EAHF6E,EAAVqB,MACAV,SAE6BZ,GACrC,MAEJ,IAAK,eAID4J,EAA0BxO,EAHR6E,EAAVe,MAGgChB,GACxC,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WAERmL,EAAqBhR,EAAO6F,EAAYjB,GACxC6J,EAA8BzO,EAAO6F,EAAYjB,GACjD,MAEJ,IAAK,mBAGDuM,EAAqBnR,EAFE6E,EAAfiB,WAEgClB,KAYxD,OAFA+I,EAAY3N,EAAOsH,EAARnH,OAAAyR,EAAA,EAAAzR,CAAoBqR,EAAQK,SAEhCC,GAAiB9R,EAADG,OAAAyR,EAAA,EAAAzR,CAAYoR,EAAMM,SAG7C,SAASE,EAAexQ,EAAMyQ,EAAU7L,EAAKwD,GACzC,GAAKpI,GACAyQ,EAEL,GAAIzQ,EAAKwB,KAp3Bb,SAAkBwI,EAAMoB,EAAUsF,GAC9B,IAAIxJ,EAAO,IAAIiD,KAAK,CAACH,GAAO,CAAE2G,KAAMD,GAAQ,6BAC5C,GAA2C,qBAAhC5H,OAAOuC,UAAUC,WAKxBxC,OAAOuC,UAAUC,WAAWpE,EAAMkE,OAC/B,CACH,IAAIG,EAAUzC,OAAOrB,IAAIC,gBAAgBR,GACrCsE,EAAW3H,SAAS4H,cAAc,KACtCD,EAASE,MAAMC,QAAU,OACzBH,EAASI,KAAOL,EAChBC,EAASK,aAAa,WAAYT,GAMD,qBAAtBI,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpChI,SAASkI,KAAKC,YAAYR,GAC1BA,EAASS,QACTpI,SAASkI,KAAKG,YAAYV,GAC1B1C,OAAOrB,IAAI0E,gBAAgBZ,IA21B3BqF,CAAS5Q,EAAKwB,IAAKiP,OADvB,CAKA,IAAIvJ,EAAOxI,IAAUqI,QAAQ/G,EAAKyB,KAAOzB,EAAKkH,KAC1CA,EACAiE,EAASjE,EAAMuJ,GAInB3E,EAAS9L,EAAM4E,EAAK,WACZwD,GAAUA,KAEdlB,EAAOxI,IAAUqI,QAAQ/G,EAAKyB,KAAOzB,EAAKkH,OAEtCiE,EAASjE,EAAMuJ,MAK3B,SAAS3E,EAAS9L,EAAM4E,EAAKwD,GACzB,GAAKpI,EAAL,CADmC,IAE3ByB,EAAczB,EAAdyB,GAAIE,EAAU3B,EAAV2B,MAGZ,IADajD,IAAUqI,QAAQtF,GAK/B,GAAIE,EAAMG,yBAAV,CACI,IAAMrD,EAAQC,IAAUwD,WAExBxD,IAAUqE,aAAatE,EAAOuB,EAAM,KAAMoI,EAAU,WAC5CzG,EAAMkP,mBACNnS,IAAUuE,cAAcjD,EAAKyB,GAAIyB,IAAe0B,UAMxDjD,EAAMkP,mBACNnS,IAAUuE,cAAcxB,EAAIyB,IAAe0B,IAInD,SAASkM,EAAoB/K,EAAQC,GACjC,IAAM3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,MAAO,CAAC,EAAG,EAAG,MAFgB,IAIpCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,GAAIA,GAAaA,EAAUiC,UACvB,MAAO,CAACjC,EAAUiC,UAAU+I,MAAOhL,EAAUiC,UAAUiJ,OAAQlL,EAAUiC,UAAU7B,OAEvF,MAEJ,IAAK,yBACD,OAAOoN,EAAahL,EAAQC,EAAWgL,KAE3C,IAAK,kBAAmB,IACZnN,EAAaP,EAAbO,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eACD,OAAOkN,EAAahL,EAAQC,EAAWgL,KAE3C,IAAK,cAAe,IACR5M,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUQ,EAAiBD,EAAjBC,MAAOV,EAAUS,EAAVT,MAEpC,GAAIJ,GAAaA,EAAUiC,UACvB,MAAO,CAACjC,EAAUiC,UAAU+I,MAAOhL,EAAUiC,UAAUiJ,OAAQlL,EAAUiC,UAAU7B,OAGvF,GAAIE,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIQ,GAASA,EAAMmB,UACf,MAAO,CAACnB,EAAMmB,UAAU+I,MAAOlK,EAAMmB,UAAUiJ,OAAQpK,EAAMmB,UAAU7B,OAG3E,GAAIA,EACA,OAAOoN,EAAahL,EAAQC,EAAWgL,KAG/C,MAEJ,IAAK,eAAgB,IACT3M,EAAUf,EAAVe,MACR,GAAIA,EAAMmB,UACN,MAAO,CAACnB,EAAMmB,UAAU+I,MAAOlK,EAAMmB,UAAUiJ,OAAQpK,EAAMmB,UAAU7B,OAE3E,MAEJ,QACI,MAAO,CAAC,EAAG,EAAG,MAItB,MAAO,CAAC,EAAG,EAAG,MAGlB,SAASoN,EAAahL,EAAQC,EAAWgF,GACrC,IAAKA,EAAM,MAAO,CAAC,EAAG,EAAG,MACzB,IAAM3H,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,MAAO,CAAC,EAAG,EAAG,MAHe,IAKnCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,MAAO,CAAC,EAAG,EAAG,MAE5B,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,GAAIA,EACA,MAAO,CAACA,EAAUgL,MAAOhL,EAAUkL,OAAQlL,EAAUA,WAEzD,MAEJ,IAAK,yBAA0B,IACnBI,EAAUL,EAAVK,MACR,GAAIA,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAG7D,MAEJ,IAAK,kBAAmB,IACZE,EAAaP,EAAbO,SACR,GAAIA,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAE7B,MAEJ,IAAK,eAAgB,IACTF,EAAUL,EAAVK,MACR,GAAIA,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAG7D,MAEJ,IAAK,cAAe,IACRS,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MACpC,GAAId,EACA,MAAO,CAACA,EAAUgL,MAAOhL,EAAUkL,OAAQlL,EAAUA,WAGzD,GAAIM,EACA,MAAO,CAAC,GAAI,GAAIA,EAASA,UAG7B,GAAIF,EAAO,CACP,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EACA,MAAO,CAACA,EAAUuJ,MAAOvJ,EAAUyJ,OAAQzJ,EAAUrB,OAEzD,MAGJ,GAAIU,EACA,MAAO,CAACA,EAAMkK,MAAOlK,EAAMoK,OAAQpK,EAAMA,OAGjD,MAEJ,IAAK,eAAgB,IACTA,EAAUf,EAAVe,MACR,GAAIA,EACA,MAAO,CAACA,EAAMkK,MAAOlK,EAAMoK,OAAQpK,EAAMA,OAQrD,MAAO,CAAC,EAAG,EAAG,MAGlB,SAAS4M,EAA6B3E,GAClC,GAAKA,GACAA,EAASvH,OAEd,IAAK,IAAIF,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IAAK,CACtC,IAAIxB,EAAUiJ,EAASzH,GACfvB,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,eAAgB,IACTK,EAAUL,EAAVK,MACR,IAAKA,EAAO,MAgBZ,IAAMqB,EAAY8J,YAAQnL,EAAMmB,MAAOiK,KACvC,IAAK/J,EAAW,MAnBC,IAqBFhF,EAASgF,EAAhBrB,MAER,GADa3D,EAAKkH,MAAQxI,IAAUqI,QAAQ/G,EAAKyB,IACvC,OAEV/C,IAAUwS,oBAAoBlR,EAAKyB,IACnC,MAEJ,IAAK,eAAgB,IACT4C,EAAUf,EAAVe,MACR,IAAKA,EAAO,MAEZ,GAAIA,EAAMmB,UAAW,KACFxF,EAASqE,EAAMmB,UAAtB7B,MAER,GADa3D,EAAKkH,MAAQxI,IAAUqI,QAAQ/G,EAAKyB,IACvC,MAEV/C,IAAUwS,oBAAoBlR,EAAKyB,IATtB,IAYFzB,EAASqE,EAAhBA,MACR,IAAKrE,EAAM,MAGX,GADaA,EAAKkH,MAAQxI,IAAUqI,QAAQ/G,EAAKyB,IACvC,MAEV/C,IAAUwS,oBAAoBlR,EAAKyB,IACnC,MAEJ,IAAK,cAAe,IACR2C,EAAaf,EAAQC,QAArBc,SACR,GAAIA,EAAU,KACFC,EAAUD,EAAVC,MAER,GAAIA,EAAO,CACP,GAAIA,EAAMmB,UAAW,KACFxF,EAASqE,EAAMmB,UAAtB7B,MAER,GADa3D,EAAKkH,MAAQxI,IAAUqI,QAAQ/G,EAAKyB,IACvC,MAEV/C,IAAUwS,oBAAoBlR,EAAKyB,IANhC,IASQzB,EAASqE,EAAhBA,MACR,IAAKrE,EAAM,MAGX,GADaA,EAAKkH,MAAQxI,IAAUqI,QAAQ/G,EAAKyB,IACvC,MAEV/C,IAAUwS,oBAAoBlR,EAAKyB,QAW/D,SAAS0P,EAAuB7E,GAAgC,IAAtB8E,EAAsB5Q,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GAC5D,GAAK8L,GACAA,EAASvH,OAId,IAFA,IAAMtG,EAAQC,IAAUwD,WAEf2C,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IAAK,CACtC,IAAIxB,EAAUiJ,EAASzH,GACfvB,EAAYD,EAAZC,QACR,GAAIA,EACA,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAERiK,EAAqB/O,EAAO8E,EAAWF,EAAS+N,GAChDzE,EAA8BlO,EAAO8E,EAAWF,GAChD,MAEJ,IAAK,yBAGDwL,EAAoBpQ,EAFF6E,EAAVK,MAE0BN,GAClC,MAEJ,IAAK,kBAGD2K,EAAoBvP,EAFC6E,EAAbO,SAE6BR,EAAS+N,GAC9C,MAEJ,IAAK,eAGDvC,EAAoBpQ,EAFF6E,EAAVK,MAE0BN,GAClC,MAEJ,IAAK,cAAe,IACRe,EAAaf,EAAQC,QAArBc,SACR,IAAKA,EACD,MAHY,IAMRb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MAChC+L,GAAY,EAEZ7M,IACAiK,EAAqB/O,EAAO8E,EAAWF,EAAS+N,GAChDhB,GAAazD,EAA8BlO,EAAO8E,EAAWF,IAG7DQ,IACAmK,EAAoBvP,EAAOoF,EAAUR,EAAS+N,GAC9ChB,GAAY,GAGZ/L,IACAiL,EAAiB7Q,EAAO4F,EAAOhB,EAAS+N,GACxChB,GAAanD,EAA0BxO,EAAO4F,EAAOhB,IAGrD+M,GACAvB,EAAoBpQ,EAAOkF,EAAON,GAGtC,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAER4I,EAA0BxO,EAAO4F,EAAOhB,GACxCiM,EAAiB7Q,EAAO4F,EAAOhB,EAAS+N,KAQ5D,SAASC,EAAgCC,EAAOC,GAC5C,GAAKA,EAAQxM,OAAb,CAEA,IAAMuH,EAAW,GACbgF,EAAQ,GACRhF,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAE9BA,EAAQC,EAAQxM,OAAS,GACzBuH,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAGlCL,EAA6B,CAACM,EAAQD,KACtCL,EAA6B3E,IAGjC,SAASkF,EAA0BF,EAAOC,GACtC,GAAKA,EAAQxM,OAAb,CAEA,IAAMuH,EAAW,GACbgF,EAAQ,GACRhF,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAE9BA,EAAQC,EAAQxM,OAAS,GACzBuH,EAAS/D,KAAKgJ,EAAQD,EAAQ,IAGlCH,EAAuB,CAACI,EAAQD,KAAS,GACzCH,EAAuB7E,GAAU,IAGrC,SAASmF,EAAoBhT,EAAOuB,EAAM6K,GACtC,GAAK7K,EAAL,CAD8C,IAGtCyB,EAAOzB,EAAPyB,GACRzB,EAAOtB,IAAUsD,IAAIP,IAAOzB,EAE5B,IAAMmD,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAK1H,EAGL,KADanD,EAAKkH,MAAQxI,IAAUqI,QAAQtF,IAG5C,OAAO,IAAIiH,QAAQ,SAAAC,GACfjK,IAAUqE,aACNtE,EACAuB,EACA,KACA,WACItB,IAAU0E,oBAAoByH,EAAQpJ,GACtCkH,KAEJ,WACIjK,IAAUuE,cAAcxB,EAAI6D,KAAoBnC,GAChDwF,SAMhB,SAAS+I,GAAoBjT,EAAOuB,EAAM+F,GACtC,GAAK/F,EAAL,CAD8C,IAGtCyB,EAAOzB,EAAPyB,GACRzB,EAAOtB,IAAUsD,IAAIP,IAAOzB,EAE5B,IAAM8C,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAGL,KADa9C,EAAKkH,MAAQxI,IAAUqI,QAAQtF,IAG5C,OAAO,IAAIiH,QAAQ,SAAAC,GACfjK,IAAUqE,aACNtE,EACAuB,EACA,KACA,WACItB,IAAUsE,oBAAoB+C,EAAQtE,GACtCkH,KAEJ,WACIjK,IAAUuE,cAAcxB,EAAI6D,KAAoBxC,GAChD6F,SAMhB,SAASiJ,GAA8B7L,EAAQ8L,GAC3C,GAAKA,EAAL,CAEA,IAAMpT,EAAQC,IAAUwD,WAExB2P,EAAO1P,QAAQ,SAAAwB,GACX,OAAQA,EAAM,UACV,IAAK,YAAa,IAAAmO,EACSnO,EAAfoO,EADMD,EACNC,MAAOC,EADDF,EACCE,IAEfN,GAAoBjT,EAAOsT,EAAOhM,GAClC2L,GAAoBjT,EAAOuT,EAAKjM,GAChC,MAEJ,IAAK,eACD,IAAM8E,EAASoH,YAAclM,GADZmM,EAGMvO,EAAfoO,EAHSG,EAGTH,MAAOC,EAHEE,EAGFF,IAEfP,EAAoBhT,EAAOsT,EAAOlH,GAClC4G,EAAoBhT,EAAOuT,EAAKnH,GAChC,MAEJ,IAAK,mBAED,KADAlH,EAAQwO,YAAgBxO,IACZ,MAEZ,IAAMkH,EAASoH,YAAclM,GAJRqM,EAMEzO,EAAfoO,EANaK,EAMbL,MAAOC,EANMI,EAMNJ,IAEfP,EAAoBhT,EAAOsT,EAAOlH,GAClC4G,EAAoBhT,EAAOuT,EAAKnH,OAOhD,SAASwH,GAAiCtM,EAAQuL,EAAOC,GACrD,GAAKA,EAAQxM,OAAb,CAEA,IAAMhD,EAAQ,GACVuP,EAAQ,GACRvP,EAAMwG,KAAKgJ,EAAQD,EAAQ,IAE3BA,EAAQC,EAAQxM,OAAS,GACzBhD,EAAMwG,KAAKgJ,EAAQD,EAAQ,IAE3BA,GAAS,GAAKA,EAAQC,EAAQxM,QAC9BhD,EAAMwG,KAAKgJ,EAAQD,IAGvBM,GAA8B7L,EAAQhE,IAG1C,SAASgM,GAAgBtP,EAAOoM,GAC5B,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAK1H,EAAL,CAFoC,IAI5BmP,EAAkBnP,EAAlBmP,cACR,GAAKA,EAIL,OAAOb,EAAoBhT,EAFH6T,EAAhBP,MAEgClH,IAG5C,SAAS0F,GAAiB9R,EAAO8T,GAC7B,GAAKA,EAEL,OAAO7J,QAAQ8J,IAAID,EAAIhG,IAAI,SAAA9K,GAAE,OAAIsM,GAAgBtP,EAAOgD,MAG5D,SAASgR,GAAgBhU,EAAOsH,GAC5B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAFoC,IAI5Ba,EAAUb,EAAVa,MACR,GAAKA,EAIL,OAAO+N,GAAoBjT,EAFHkF,EAAhBoO,MAEgChM,IAG5C,SAAS2M,GAAiBjU,EAAO8T,GAC7B,GAAKA,EAEL,OAAO7J,QAAQ8J,IAAID,EAAIhG,IAAI,SAAA9K,GAAE,OAAIgR,GAAgBhU,EAAOgD,MAG5D,SAASkR,GAAiBlU,EAAOsH,GAC7B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAFqC,IAI7B8P,EAAkB9P,EAAlB8P,cACR,GAAKA,EAAL,CALqC,IAO7BzC,EAAwByC,EAAxBzC,oBACHA,GAEL/D,EAAY3N,EAAOsH,EAAQ,CAACoK,MAGhC,SAAS0C,GAAsBpU,EAAOqU,GAC7BA,GAGLC,GAAoBtU,EADCqU,EAAbE,UAIZ,SAASD,GAAoBtU,EAAOuU,GAC3BA,GAELA,EAAS7Q,QAAQ,SAAAgC,GACb6I,EAA4BvO,EAAO0F,EAAS,QAIpD,SAAS8O,GAAcC,GACnB,OAAOA,GAAuC,cAA3BA,EAASC,cAGhC,SAASC,GAAOpT,GACZ,IAAMkH,EAKV,SAAiBlH,GACb,OAAOA,EAAOtB,IAAUqI,QAAQ/G,EAAKyB,KAAOzB,EAAKkH,KAAO,KAN3CH,CAAQ/G,GAErB,OAAOtB,IAAU4I,WAAWJ,IAAS,GAOzC,SAASmM,GAAkBrT,GACvB,OAAKA,GACAA,EAAK2B,OACL3B,EAAK2B,MAAM2R,sBAETvI,EAAc/K,EAAK2B,MAAM4R,iBAJd,IAOtB,SAASC,GAAgBxT,GACrB,OAAKA,GACAA,EAAK2C,QACL3C,EAAK2C,OAAO8Q,oBAEV1I,EAAc/K,EAAK2C,OAAO+Q,eAJf,IAOtB,SAASC,GAAalD,GAClB,IAAKA,EACD,MAAO,GAGX,IAAMmD,EAAQnD,EAASoD,MAAM,KAC7B,OAAqB,IAAjBD,EAAM7O,QAA8B,KAAb6O,EAAM,IAA8B,IAAjBA,EAAM7O,OACzC,GAEJ6O,EAAME,MAAMX,4KC54CvB,SAASY,EAAoBhO,GACzB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,IAAIqD,EAAgBrC,IAAUsC,iBAAiBnR,EAAKrB,IACpD,IAAKuS,EAAe,OAAO,KAE3B,OAAQlR,EAAK6N,KAAK,UACd,IAAK,kBACL,IAAK,iBACD,IAAMuD,EA9ClB,SAAoCC,GAChC,IAAKA,EAAoB,OAAO,KAEhC,GAAIA,EAAmBC,QAAQpJ,MAAQ,EAEnC,OADamJ,EAAmBC,QAAQC,SAASxU,OAAOyU,MAAMC,OAC/C,UACX,IAAK,2BACD,MAAO,oBACX,IAAK,+BACD,MAAO,4BACX,IAAK,+BACD,MAAO,4BACX,IAAK,6BACD,MAAO,iBACX,IAAK,8BACD,MAAO,iBACX,IAAK,2BACD,MAAO,kBACX,IAAK,2BACD,MAAO,kBACX,IAAK,+BACD,MAAO,0BACX,IAAK,+BACD,MAAO,0BACX,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,MAAO,SAInB,OAAO,KAcsBC,CAA2BR,GAChD,OAAOE,EAAeA,EAAe,MAAQ,KAEjD,IAAK,qBACL,IAAK,qBACD,IAAMA,EArIlB,SAAkCC,GAC9B,IAAKA,EAAoB,OAAO,KAEhC,IA4BQM,EA5BJzJ,EAAOmJ,EAAmBC,QAAQpJ,KACtC,GAAIA,EAAO,EACP,SAAAjB,OAAUiB,EAAV,sBACG,GAAIA,EAAO,EAAG,CACjB,IAAIyJ,EACAC,EAFaC,GAAA,EAAAC,GAAA,EAAAC,OAAAxH,EAAA,IAGjB,QAAAyH,EAAAC,EAAmBZ,EAAmBC,QAAQ9D,OAA9C0E,OAAAC,cAAAN,GAAAG,EAAAC,EAAAlV,QAAAqV,MAAAP,GAAA,EAAsD,KAA7C9J,EAA6CiK,EAAAR,MAClD,GAAKG,GAEE,IAAKC,EAAY,CACpBA,EAAa5G,IAAU9L,IAAI6I,GAC3B,YAHA4J,EAAY3G,IAAU9L,IAAI6I,IALjB,MAAAsK,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAYjB,OAAKJ,GAAcC,GAInBD,EAAYA,EAAUY,WAAaZ,EAAUY,WAAaZ,EAAUa,YACpEZ,EAAaA,EAAWW,WAAaX,EAAWW,WAAaX,EAAWY,YAEnEb,GAAcC,EAInB,GAAA3K,OAAU0K,EAAV,SAAA1K,OAA2B2K,EAA3B,eAHI,GAAA3K,OAAUiB,EAAV,uBAPA,GAAAjB,OAAUiB,EAAV,sBAaJ,GAAImJ,EAAmBC,QAAQpJ,MAAQ,EAAG,KAAAuK,GAAA,EAAAC,GAAA,EAAAC,OAAApI,EAAA,IACtC,QAAAqI,EAAAC,EAAmBxB,EAAmBC,QAAQ9D,OAA9C0E,OAAAC,cAAAM,GAAAG,EAAAC,EAAA9V,QAAAqV,MAAAK,GAAA,EAAsD,KAA7C1K,EAA6C6K,EAAApB,MAClD,IAAKG,EAAW,CACZA,EAAY3G,IAAU9L,IAAI6I,GAC1B,QAJ8B,MAAAsK,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAQtC,IAAKhB,EACD,2BAKJ,KAFAA,EAAYA,EAAUY,WAAaZ,EAAUY,WAAaZ,EAAUa,aAGhE,2BAIJ,OADanB,EAAmBC,QAAQC,SAASxU,OAAOyU,MAAMC,OAC/C,UACX,IAAK,2BACD,SAAAxK,OAAU0K,EAAV,yBACJ,IAAK,+BACD,SAAA1K,OAAU0K,EAAV,iCACJ,IAAK,+BACD,SAAA1K,OAAU0K,EAAV,iCACJ,IAAK,6BACD,SAAA1K,OAAU0K,EAAV,sBACJ,IAAK,8BACD,SAAA1K,OAAU0K,EAAV,sBACJ,IAAK,2BACD,SAAA1K,OAAU0K,EAAV,uBACJ,IAAK,2BACD,SAAA1K,OAAU0K,EAAV,uBACJ,IAAK,+BACD,SAAA1K,OAAU0K,EAAV,+BACJ,IAAK,+BACD,SAAA1K,OAAU0K,EAAV,+BACJ,IAAK,4BACL,IAAK,6BACL,IAAK,mBACL,QACI,SAAA1K,OAAU0K,EAAV,eAKhB,OAAO,KAsDsBmB,CAAyB5B,GAC9C,OAAOE,EAAeA,EAAe,MAAQ,KAIrD,OAAO,KAGX,SAAS2B,EAAyBxS,GAC9B,IAAKA,EAAS,OAAO,KACrB,GAAIyS,YAAiBzS,GAAU,OAAO,KACtC,IAAKA,EAAQ6M,eAAgB,OAAO,KAEpC,IAAM/M,EAAO2K,IAAU9L,IAAIqB,EAAQ6M,gBACnC,OAAK/M,EAEE4S,YAAgB5S,GAFL,KAKtB,SAAS6S,EAAqB3S,GAC1B,IAAKA,EAAS,OAAO,KACrB,GAAIyS,YAAiBzS,GAAU,OAAO,KAEtC,IAAMP,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SACnC,OAAIrC,GAA+B,uBAAvBA,EAAK6N,KAAK,UAA4D,uBAAvB7N,EAAK6N,KAAK,SAC1D,KAGJsF,YAAiB5S,EAAQ6M,gBAGpC,SAASgG,EAAyBpT,GAC9B,OAAKA,EAEEkT,EAAqBlT,EAAKqT,cAFf,KAKtB,SAASC,EAAsBtT,GAAsB,IAAhBuT,EAAgB7V,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAAZ,SAAA8V,GAAG,OAAIA,GAC5C,IAAKxT,EAAM,OAAO,KAD+B,IAGzCqT,EAAiBrT,EAAjBqT,aACR,OAAKA,EAEEI,YAAWJ,EAAcE,GAFN,KAK9B,SAASG,EAAmB1T,GACxB,OAAKA,GACAA,EAAK2T,aAEH3T,EAAK2T,aAHM,KAMtB,SAASC,EAA0B5T,GAC/B,OAAKA,GACAA,EAAK6T,qBAEH7T,EAAK6T,qBAHM,KAMtB,SAASC,EAAY9T,GACjB,OAGJ,SAAwBA,GACpB,IAAKA,EAAM,OAAO,EAElB,IAAIA,EAAK+T,qBA0BL,OAAK/T,EAAKgU,sBAEHhU,EAAKgU,sBAAsBC,SAFM,EAzBxC,OAAQjU,EAAK6N,MACT,IAAK,kBACL,IAAK,iBACD,IAAMqG,EAAuBC,IAAiBC,wBAC1C,yCAEJ,OAAIF,EACOA,EAAqBD,SAGzB,EAEX,IAAK,qBACL,IAAK,qBACD,IAAMC,EAAuBC,IAAiBC,wBAC1C,uCAEJ,OAAIF,EACOA,EAAqBD,SAGzB,GA5BZI,CAAerU,GAAQ,EAsClC,SAASsU,EAAe/T,GACpB,IAAMgU,EAAO,IAAIC,KAAoB,IAAfjU,EAAQgU,MAExBE,EAAW,IAAID,KAErB,GADAC,EAASC,SAAS,EAAG,EAAG,EAAG,GACvBH,EAAOE,EACP,OAAOE,IAAWJ,EAAM,QAG5B,IAAMK,EAAM,IAAIJ,KACVK,EAAMD,EAAIE,SACVC,EAAYH,EAAII,UAAYH,GAAe,IAARA,GAAa,EAAI,GAE1D,OAAIN,EADW,IAAIC,KAAKI,EAAIK,QAAQF,IAEzBJ,IAAWJ,EAAM,OAGrBI,IAAWJ,EAAM,aAG5B,SAASW,EAAmBlV,GACxB,OAAKA,GACAA,EAAKqT,cACLrT,EAAKqT,aAAakB,KACnBY,GAAcnV,EAAKrB,IAAY,KAE5B2V,EAAetU,EAAKqT,cALT,KAQtB,SAAS+B,EAA6BnS,GAClC,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAFwB,IAIlC6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,KAElB,OAAQA,EAAK,UACT,IAAK,qBACD,IAAMwH,EAAaC,IAAgBpW,IAAI2O,EAAK0H,gBAC5C,GAAIF,EACA,OC9RhB,SAA6BA,EAAYpS,GACrC,IAAKoS,EAAY,OAAO,KADqB,IAGrCG,EAAgCH,EAAhCG,OAAsBC,EAAUJ,EAAxBK,aAEhB,GAAIF,IAA+B,2BAApBA,EAAO,UAA6D,yBAApBA,EAAO,UAClE,MAAO,wBAGX,IAAKC,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAME,EAAc9G,IAAU+G,qBAAqB3S,GACnD,OAAI0S,EAAc,EACd,GAAA1O,OAAUwO,EAAV,cAAAxO,OAA4B0O,EAA5B,WAGJ,GAAA1O,OAAUwO,EAAV,YD6QmBI,CAAoBR,EAAYpS,GAG3C,MAEJ,IAAK,kBACL,IAAK,iBACD,IAAM5C,EAAO2K,IAAU9L,IAAI2O,EAAK9C,SAChC,GAAI1K,EACA,OAAOyV,YAAczV,GAGzB,MAEJ,IAAK,qBACD,IAAM0V,EAAaC,IAAgB9W,IAAI2O,EAAKoI,eAC5C,GAAIF,EACA,OE9ShB,SAA6BA,EAAY9S,GACrC,IAAK8S,EAAY,OAAO,KADqB,IAGvCP,EAA4CO,EAA5CP,OAAQU,EAAoCH,EAApCG,WAA0BT,EAAUM,EAAxBL,aAE1B,GAAIF,GAA8B,2BAApBA,EAAO,SACjB,OAAOU,EAAa,0BAA4B,wBAGpD,IAAKT,EAAO,CACR,IAAMU,EAAWH,IAAgBI,YAAYL,EAAWpX,IACpDwX,IACAV,EAAQU,EAAST,cAIzB,IAAKD,EAAO,MAAO,YACnB,GAAc,IAAVA,EAAa,MAAO,WAExB,IAAME,EAAc9G,IAAU+G,qBAAqB3S,GACnD,OAAI0S,EAAc,EACd,GAAA1O,OAAUwO,EAAV,cAAAxO,OAA4B0O,EAA5B,WAGJ,GAAA1O,OAAUwO,EAAV,YFsRmBY,CAAoBN,EAAY9S,GAOnD,OAAO,KAGX,SAASqT,EAAgBrT,GAAmC,IAA3BsT,EAA2B7Y,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GACxD,GAAI8Y,EAASvT,IAAWsT,EACpB,OAAO,KAGX,IAAME,EAAmBxF,EAAoBhO,GAC7C,OAAIwT,GAIGrB,EAA6BnS,GAGxC,SAASyT,EAAe1W,GACpB,IAAKA,EAAM,OAAO,KAElB,IAAI2W,EAAQ3W,EAAK2W,OAAS,kBAC1B,GAAqB,IAAjBA,EAAM1U,OAAc,OAAO,KAE/B,IAAI2U,EAAUC,YAAWF,GACzB,OAAIC,GAAWA,EAAQ3U,OAAS,EACrB2U,EAGJ5W,EAAK2W,MAAMG,OAAO,GAG7B,SAASC,EAAkC9T,GACvC,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAO2W,YAAa3W,GAGxB,MAEJ,IAAK,qBACD,OAAO,EAIf,OAAO,EAGX,SAAS4W,EAAqBhU,GAE1B,OADqBgO,EAAoBhO,IAGlC8T,EAAkC9T,GAG7C,SAASiU,EAAgBjU,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAOA,EAAK8W,SAGhB,MAEJ,IAAK,qBACD,IAAMpB,EAAaC,IAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,GAAIF,EACA,OAAOA,EAAWoB,SAM9B,OAAO,KAGX,SAASC,EAAmBnU,GACxB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMxN,EAAO2K,IAAU9L,IAAIc,EAAK6N,KAAK9C,SACrC,GAAI1K,EACA,OAAOA,EAAKgX,aAGhB,MAEJ,IAAK,qBACD,OAAO,KAIf,OAAO,KAGX,SAASC,EAAWrU,GAChB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,KAEX,IAAK,kBACL,IAAK,iBACD,IAAMsI,EAAWnL,IAAUoL,YAAYpW,EAAK6N,KAAK9C,SACjD,GAAIoL,EACA,OAAOA,EAASoB,IAGpB,MAEJ,IAAK,qBACD,IAAMpB,EAAWH,IAAgBI,YAAYpW,EAAK6N,KAAKoI,eACvD,GAAIE,EACA,OAAOA,EAASqB,YAO5B,OAAO,KAGX,SAASC,EAAcxU,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS6J,EAAYzU,GACjB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS8J,EAAc1U,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMkI,EAAaC,IAAgB9W,IAAIc,EAAK6N,KAAKoI,eAEjD,OAAOF,GAAcA,EAAWG,WAEpC,IAAK,qBACL,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS0B,EAAa3U,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMkI,EAAaC,IAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOO,EAAWP,OAAOqC,UAKzC,IAAK,qBACD,IAAMxC,EAAaC,IAAgBpW,IAAIc,EAAK6N,KAAK0H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,OAAOH,EAAWG,OAAOqC,UAIrC,MAEJ,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASC,EAAa7U,GAAmD,IAA3CsT,EAA2C7Y,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GAAhB6V,EAAgB7V,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAAZ,SAAA8V,GAAG,OAAIA,GAC1DxT,EAAO6O,IAAU3P,IAAI+D,GAC3B,OAAKjD,EAEDwW,EAASvT,IAAWsT,EACbhD,EAAE,iBAGNvT,EAAK2W,OAASpD,EAAE,cANL,KAStB,SAASiD,EAASvT,GACd,IAEMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAHW,EAKtB,OAAQA,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAAO,EAEX,IAAK,iBACL,IAAK,kBACD,OAAO7C,IAAU+M,YAAc/X,EAAK6N,KAAK9C,QAIjD,OAhBsB,EAmB1B,SAASiN,EAAoB/U,GACzB,IAAMgV,EAAgB,GAEhBjY,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAOiY,EAElB,OAAQjY,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMsI,EAAWb,IAAgBc,YAAYpW,EAAK6N,KAAK0H,gBACvD,GAAIY,EACA,OAAOA,EAAS+B,SAAWD,EAcvC,OAAOA,EAGX,SAASE,EAAgBlV,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,kBAOL,IAAK,iBACDhQ,IAAgBiJ,KAAK,CACjB/B,QAAS,kBACTgG,QAAS/K,EAAK6N,KAAK9C,UAEvB,MAEJ,IAAK,qBACDlN,IAAgBiJ,KAAK,CACjB/B,QAAS,wBACTwQ,eAAgBvV,EAAK6N,KAAK0H,iBAE9B,MAEJ,IAAK,qBACD1X,IAAgBiJ,KAAK,CACjB/B,QAAS,wBACTkR,cAAejW,EAAK6N,KAAKoI,iBAOzC,SAASmC,EAAgBnV,EAAQoV,GAC7B,IAAMrY,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFyB,IAInC6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,UAAqCA,EAAK0H,iBAAmB8C,EAGrF,SAASC,EAAarV,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFQ,IAIlB6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA0B,uBAAlBA,EAAK,SAGxB,SAAS0K,EAAgBtV,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFW,IAIrB6N,EAAS7N,EAAT6N,KAER,OAAIA,GAA0B,uBAAlBA,EAAK,SACNA,EAAKoI,cAGT,EAGX,SAASuC,EAAgBvV,EAAQwV,GAC7B,IAAMzY,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFyB,IAInC6N,EAAS7N,EAAT6N,KAER,OAAOyK,EAAarV,IAAW4K,EAAKoI,gBAAkBwC,EAc1D,SAAStJ,EAAclM,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFS,IAInB6N,EAAS7N,EAAT6N,KAER,OAAOA,GAA2B,oBAAlBA,EAAK,UAAoD,mBAAlBA,EAAK,SAAgD,EAAfA,EAAK9C,QAGtG,SAAS2N,EAAiBzV,GACtB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAElB,GAAIyX,EAAcxU,GAAS,CACvB,IAAM5C,EAAO2K,IAAU9L,IAAIiQ,EAAclM,IACzC,GAAI5C,EACA,OAAOA,EAAKmP,cAIpB,OAAOxP,EAAKa,MAGhB,SAAS8X,EAAa1V,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwH,EAAaC,IAAgBpW,IAAIc,EAAK6N,KAAK0H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,QAAIH,EAAWG,OAAOoD,wBASlC,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAM7C,EAAaC,IAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAIO,EAAWG,WAMnB,IAAK,6BACD,QAAIH,EAAWP,OAAOoD,yBAW1C,OAAO,EAGX,SAASC,EAAkB5V,GAAmC,IAA3BsT,EAA2B7Y,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GAC1D,GAAI8Y,EAASvT,IAAWsT,EACpB,MAAO,iBAGX,IAAMvW,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,qBACD,OAAO7N,EAAK2W,MAEhB,IAAK,kBACL,IAAK,iBACD,OAAOxD,YAAiBnT,EAAK6N,KAAK9C,SAI1C,OAAO,KAGX,SAAS+N,EAAyB7V,GAC9B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwH,EAAaC,IAAgBpW,IAAIc,EAAK6N,KAAK0H,gBACjD,OAAIF,EACOA,EAAWK,aAGf,EAEX,IAAK,qBACD,IAAMK,EAAaC,IAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,OAAIF,EACOA,EAAWL,aAGf,EAEX,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAASqD,EAAgB9V,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAClB,IAAKA,EAAK6N,KAAM,OAAO,EAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,OAAO,EAEX,IAAK,qBACD,IAAMkI,EAAaC,IAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,OAAIF,IACQiD,QAAQjD,EAAWoB,UAKnC,IAAK,kBACL,IAAK,iBACD,OAAO,EAIf,OAAO,EAGX,SAAS8B,EAAchW,GACnB,OAAQuT,EAASvT,GAGrB,SAASiW,EAAcjW,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFS,IAInB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMkI,EAAaC,IAAgB9W,IAAI2O,EAAKoI,eAC5C,GAAIF,EAAY,KACJP,EAAWO,EAAXP,OACR,GAAIA,EACA,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAQO,EAAWG,WAEvB,IAAK,6BACD,OAAOV,EAAOoD,0BAQtC,OAAO,EAGX,SAASO,EAAiBlW,GACtB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFY,IAItB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBAGL,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMkI,EAAaC,IAAgB9W,IAAI2O,EAAKoI,eAC5C,GAAIF,EAAY,KACJP,EAAWO,EAAXP,OACR,GAAIA,EACA,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAQO,EAAWG,WAEvB,IAAK,6BACD,OAAOV,EAAOoD,0BAQtC,OAAO,EAGX,SAASQ,GAAanW,GAClB,OAAO,EAGX,SAASoW,GAAgBpW,GACrB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,EAFW,IAIrB6N,EAAS7N,EAAT6N,KACR,IAAKA,EAAM,OAAO,EAElB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwH,EAAaC,IAAgBpW,IAAI2O,EAAK0H,gBAC5C,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,6BACD,QAAIH,EAAWG,OAAO8D,kBASlC,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAO,EAEX,IAAK,qBACD,IAAMvD,EAAaC,IAAgB9W,IAAI2O,EAAKoI,eAC5C,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAO,EAEX,IAAK,yBACD,OAAO,EAEX,IAAK,0BACD,OAAO,EAEX,IAAK,uBACD,OAAO,EAEX,IAAK,yBACD,OAAIO,EAAWG,WAMnB,IAAK,6BACD,QAAIH,EAAWP,OAAO8D,mBAW1C,OAAO,EAGX,SAASnE,GAAclS,GACnB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAG3B,OAFcsW,GAAatW,IAEW,IAAtBjD,EAAK2T,cAAoD,IAA9B3T,EAAK6T,qBAGpD,SAAS0F,GAAatW,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAE3B,GAAIjD,EAAM,KACE8P,EAAkB9P,EAAlB8P,cACR,GAAIA,EAAe,KACP0J,EAAuB1J,EAAvB0J,mBACR,GAAIA,EACA,OAAOA,EAAmBC,MAKtC,OAAO,KAGX,SAASC,GAA6BzW,GAClC,IAAI0W,EAAmB,EACjB3Z,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAIjD,EAAM,KACE8P,EAAkB9P,EAAlB8P,cACJA,IACA6J,EAAmB7J,EAAczC,qBAKzC,OADA1N,QAAQ4F,IAAI,eAAgBoU,GACrBA,EA/nCXC,EAAAC,EAAAC,EAAA,sBAAA3E,KAAAyE,EAAAC,EAAAC,EAAA,sBAAAP,KAAAK,EAAAC,EAAAC,EAAA,sBAAAJ,KAAAE,EAAAC,EAAAC,EAAA,sBAAA7I,IAAA2I,EAAAC,EAAAC,EAAA,sBAAApG,IAAAkG,EAAAC,EAAAC,EAAA,sBAAAlG,IAAAgG,EAAAC,EAAAC,EAAA,sBAAAxD,IAAAsD,EAAAC,EAAAC,EAAA,sBAAA1E,IAAAwE,EAAAC,EAAAC,EAAA,sBAAA1G,IAAAwG,EAAAC,EAAAC,EAAA,sBAAA5G,IAAA0G,EAAAC,EAAAC,EAAA,sBAAA/G,IAAA6G,EAAAC,EAAAC,EAAA,sBAAAxG,IAAAsG,EAAAC,EAAAC,EAAA,sBAAA5E,IAAA0E,EAAAC,EAAAC,EAAA,sBAAAxF,IAAAsF,EAAAC,EAAAC,EAAA,sBAAApD,IAAAkD,EAAAC,EAAAC,EAAA,sBAAA7C,IAAA2C,EAAAC,EAAAC,EAAA,sBAAA/C,IAAA6C,EAAAC,EAAAC,EAAA,sBAAAhG,IAAA8F,EAAAC,EAAAC,EAAA,sBAAA5C,IAAA0C,EAAAC,EAAAC,EAAA,sBAAA1C,IAAAwC,EAAAC,EAAAC,EAAA,sBAAAxC,IAAAsC,EAAAC,EAAAC,EAAA,sBAAArC,IAAAmC,EAAAC,EAAAC,EAAA,sBAAApC,IAAAkC,EAAAC,EAAAC,EAAA,sBAAAnC,IAAAiC,EAAAC,EAAAC,EAAA,sBAAAlC,IAAAgC,EAAAC,EAAAC,EAAA,sBAAAhC,IAAA8B,EAAAC,EAAAC,EAAA,sBAAA9B,IAAA4B,EAAAC,EAAAC,EAAA,sBAAA3B,IAAAyB,EAAAC,EAAAC,EAAA,sBAAA1B,IAAAwB,EAAAC,EAAAC,EAAA,sBAAAtB,IAAAoB,EAAAC,EAAAC,EAAA,sBAAAxB,IAAAsB,EAAAC,EAAAC,EAAA,sBAAAvB,IAAAqB,EAAAC,EAAAC,EAAA,sBAAA3K,IAAAyK,EAAAC,EAAAC,EAAA,sBAAApB,IAAAkB,EAAAC,EAAAC,EAAA,sBAAAjB,IAAAe,EAAAC,EAAAC,EAAA,sBAAAhB,IAAAc,EAAAC,EAAAC,EAAA,sBAAAtD,IAAAoD,EAAAC,EAAAC,EAAA,sBAAAf,IAAAa,EAAAC,EAAAC,EAAA,sBAAAb,IAAAW,EAAAC,EAAAC,EAAA,sBAAAnB,IAAAiB,EAAAC,EAAAC,EAAA,sBAAAT,KAAAO,EAAAC,EAAAC,EAAA,sBAAAZ,IAAAU,EAAAC,EAAAC,EAAA,sBAAAX,IAAAS,EAAAC,EAAAC,EAAA,sBAAAV,gGGgPMzd,EAAQ,gBArOV,SAAA+N,IAAc,IAAA7N,EAAA,OAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAA0N,IACV7N,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAF,OAAAme,EAAA,EAAAne,CAAA4N,GAAAvN,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAO4D,SAChB1E,EAAKuB,KAAK,mBAAoBT,GAC9B,MACJ,IAAK,uBACDd,EAAKuB,KAAK,uBAAwBT,GAClC,MACJ,IAAK,sBACD,IAAMqD,EAAOnE,EAAKoD,MAAMC,IAAIvC,EAAO0F,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAIvC,EAAOud,YAC5B3Z,IACAA,EAAQ4Z,aAAexd,EAAOwd,aAC9B5Z,EAAQ6Z,UAAYzd,EAAOyd,WAGnCve,EAAKuB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,qBACD,IAAMqD,EAAOnE,EAAKoD,MAAMC,IAAIvC,EAAO0F,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAIvC,EAAOud,YAC5B3Z,GAAW5D,EAAO0d,MAAQ9Z,EAAQ8Z,QAClC9Z,EAAQ8Z,MAAQ1d,EAAO0d,OAG/Bxe,EAAKuB,KAAK,qBAAsBT,GAChC,MAEJ,IAAK,uBACD,IAAMqD,EAAOnE,EAAKoD,MAAMC,IAAIvC,EAAO0F,SACnC,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAIvC,EAAOud,YAC5B3Z,IACA5D,EAAO2d,YAAc/Z,EAAQC,QAC7BD,EAAQC,QAAU7D,EAAO4d,aAGjC1e,EAAKuB,KAAK,uBAAwBT,GAClC,MAEJ,IAAK,6BAA8B,IACvB0F,EAAwB1F,EAAxB0F,QAAS6X,EAAevd,EAAfud,WAEX3Z,EAAU1E,EAAKqD,IAAImD,EAAS6X,GAClC,GAAI3Z,EAEA,OADoBA,EAAZC,QACQ,UACZ,IAAK,mBACDD,EAAQC,QAAQga,aAAc,EAC9B,MAEJ,IAAK,mBACDja,EAAQC,QAAQia,WAAY,EAMxC5e,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,6BACD,IAAMqD,EAAOnE,EAAKoD,MAAMC,IAAIvC,EAAO4D,QAAQ8B,SAC3C,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAIvC,EAAO+d,gBAC5Bna,IACAA,EAAQoa,cAAgBhe,EAAO4D,QAAQoa,eAEvChe,EAAO+d,iBAAmB/d,EAAO4D,QAAQ5B,IACzC9C,EAAKoB,IAAIN,EAAO4D,SAIxB1E,EAAKoB,IAAIN,EAAO4D,SAChB1E,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,0BACGA,EAAO4D,QAAQoa,gBACfhe,EAAO4D,QAAQoa,cAAcC,WAAaje,EAAOie,WACjDje,EAAO4D,QAAQoa,cAAcE,cAAgBle,EAAOke,eAGxD,IAAM7a,EAAOnE,EAAKoD,MAAMC,IAAIvC,EAAO4D,QAAQ8B,SAC3C,GAAIrC,EAAM,CACN,IAAMO,EAAUP,EAAKd,IAAIvC,EAAO+d,gBAC5Bna,IACAA,EAAQoa,cAAgBhe,EAAO4D,QAAQoa,cACnCpa,EAAQoa,gBACRpa,EAAQoa,cAAcC,WAAaje,EAAOie,WAC1Cra,EAAQoa,cAAcE,cAAgBle,EAAOke,gBAGjDle,EAAO+d,iBAAmB/d,EAAO4D,QAAQ5B,IACzC9C,EAAKoB,IAAIN,EAAO4D,SAGxB1E,EAAKuB,KAAK,0BAA2BT,KA/GnCd,EAuHd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,iCACDd,EAAKuB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,8BACGA,EAAOme,SACPjf,EAAKkf,cAAc9d,IAAnB,UAAAgK,OAAiCtK,EAAOsG,OAAxC,eAAAgE,OAA4DtK,EAAOuG,WAAa,CAC5ED,OAAQtG,EAAOsG,OACfC,UAAWvG,EAAOuG,YAGtBrH,EAAKkf,cAAc5b,OAAnB,UAAA8H,OAAoCtK,EAAOsG,OAA3C,eAAAgE,OAA+DtK,EAAOuG,YAG1ErH,EAAKuB,KAAK,8BAA+BT,GACzC,MAEJ,IAAK,6BACDd,EAAKkf,cAAcC,QAEnBnf,EAAKuB,KAAK,6BAA8BT,GACxC,MAEJ,IAAK,qBACGd,EAAKkf,cAAc7S,KAAO,IAC1BrM,EAAKkf,cAAcC,QAEnBnf,EAAKuB,KAAK,6BAA8B,CAAE2H,QAAS,gCAGvD,MAEJ,IAAK,oBACDlJ,EAAKuB,KAAK,oBAAqBT,GAC/B,MAEJ,IAAK,6BACDd,EAAKuB,KAAK,6BAA8BT,KA9JtCd,EAoKd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAtKvC9B,EAyKdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAxKpD9B,EAAKoD,MAAQ,IAAIoG,IACjBxJ,EAAKkf,cAAgB,IAAI1V,IAEzBxJ,EAAK+B,mBACL/B,EAAKmJ,gBAAgBC,KAPXpJ,oEA8KToH,EAAQC,GAAW,IAAAuD,EAAAzK,KACpB6B,IAAgBiJ,KAAK,CACjB/B,QAAS,aACT1C,QAASY,EACTiX,WAAYhX,IAEXkE,KAAK,SAAA7G,GACFkG,EAAKxJ,IAAIsD,GACTkG,EAAKrJ,KAAK,mBAAoBmD,KAEjCoF,MAAM,SAAA/F,GACH,IAAMqb,EAAiB,CACnBlW,QAAS,iBACT1C,QAASY,EACTtE,GAAIuE,EACJ1C,QAAS,MAEbiG,EAAKxJ,IAAIge,GACTxU,EAAKrJ,KAAK,mBAAoB6d,iCAItChY,EAAQC,GACR,IAAIlD,EAAOhE,KAAKiD,MAAMC,IAAI+D,GAC1B,IAAKjD,EAED,OAAO,KAGX,IAAIO,EAAUP,EAAKd,IAAIgE,GACvB,OAAK3C,GAEM,iCAMXA,GACA,IAAIP,EAAOhE,KAAKiD,MAAMC,IAAIqB,EAAQ8B,SAC7BrC,IACDA,EAAO,IAAIqF,IACXrJ,KAAKiD,MAAMhC,IAAIsD,EAAQ8B,QAASrC,IAGpCA,EAAK/C,IAAIsD,EAAQ5B,GAAI4B,oCAGhBiJ,GACL,IAAK,IAAIzH,EAAI,EAAGA,EAAIyH,EAASvH,OAAQF,IACjC/F,KAAKiB,IAAIuM,EAASzH,WAjOHiG,iBAuO3BhC,OAAOzF,QAAU5E,EACFA,iMC1LAuf,2LAxCF,IAAAC,EAC0Bnf,KAAKof,MAA5BtQ,EADHqQ,EACGrQ,QAASuQ,EADZF,EACYE,UACjB,IAAKvQ,EAAS,OAAO,KAFhB,IAIGC,EAAiDD,EAAjDC,QAASwH,EAAwCzH,EAAxCyH,WAAY+I,EAA4BxQ,EAA5BwQ,UAAWjE,EAAiBvM,EAAjBuM,aAElChX,EAAO2K,IAAU9L,IAAI6L,IAAY,CACnChG,QAAS,OACT8I,KAAM,CAAE9I,QAAS,mBACjBpG,GAAIoM,EACJwH,WAAYA,EACZ+I,UAAWA,GAGTC,EAAWtI,YAAgB5S,GAC3Bmb,EAASC,YAAkBpE,GAEjC,OACIqE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,WACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACXD,EAAAlf,EAAAmM,cAACiT,EAAA,EAAD,CAAiB7T,OAAQgD,EAAS1K,KAAMA,KAE5Cqb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACV5Q,EAAU,EAAI2Q,EAAAlf,EAAAmM,cAAA,KAAGkT,QAASR,GAAYE,GAAgBG,EAAAlf,EAAAmM,cAAA,YAAO4S,IAElEG,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBAAiBH,YA3B9BM,IAAMC,0GCUtBC,qNACFvI,WAAa,WAAM,IAAA0H,EACmDtf,EAAKuf,MAA/DnY,EADOkY,EACPlY,OAAQC,EADDiY,EACCjY,UAAWjC,EADZka,EACYla,KAAMiH,EADlBiT,EACkBjT,KAAM+T,EADxBd,EACwBc,YAAaZ,EADrCF,EACqCE,UACpD,IAAKpa,EAAM,OAAO,KAFH,IAIPJ,EAAqBI,EAArBJ,MAAOJ,EAAcQ,EAAdR,UAEf,GAAIA,IACqB6P,YAAO7P,EAAUA,YAClBA,EAAUiC,WAC1B,OAAOgZ,EAAAlf,EAAAmM,cAACuT,EAAA,EAAD,CAAWjZ,OAAQA,EAAQC,UAAWA,EAAWzC,UAAWA,EAAW4a,UAAWA,IAIjG,GAAIxa,EAAO,CACP,IAAI+H,EAAQ,CACR6C,MAAO,EACPE,OAAQ,GAENzJ,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACvC,GAAIhG,EAAW,CACX,IAAMia,EAAeC,YAAWla,EAAW+Z,GACvCE,IACAvT,EAAM6C,MAAQ0Q,EAAa1Q,MAC3B7C,EAAM+C,OAASwQ,EAAaxQ,QAIpC,OAAO+P,EAAAlf,EAAAmM,cAAC0T,EAAA,EAAD,CAAOpZ,OAAQA,EAAQC,UAAWA,EAAWrC,MAAOA,EAAO+H,MAAOA,EAAOyS,UAAWA,IAG/F,OAAO,8EAGF,IAAAiB,EACqBtgB,KAAKof,MAAvBmB,EADHD,EACGC,QAAStb,EADZqb,EACYrb,KACjB,IAAKA,EAAM,OAAO,KAFb,IAIG0V,EAA6B1V,EAA7B0V,MAAO8C,EAAsBxY,EAAtBwY,KAAMjC,EAAgBvW,EAAhBuW,YACfgF,EAAgBC,GAAiBhD,GAEvC,OACIiC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,QACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,cAAeH,EAAQI,yBAClDjB,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACVhF,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,aAAcH,EAAQK,kBAAmBjG,GAC7E6F,GAAiBd,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,aAAaa,GAC7ChF,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBAAoBnE,GAClDxb,KAAKyX,sBAhDPqI,IAAMC,YAiEzBC,EAAKa,aAAe,CAChB3U,KAAMgG,IACN+N,YAAaa,KAGFC,UA1EA,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,GACbohB,YAAaF,KAyELD,CAAmBf,qBC3BnBmB,qNA5CXC,2BAA6B,SAAAzgB,GAAU,IAC3BqH,EAAWrH,EAAXqH,OAGFnB,EAAaC,GAFEjH,EAAKuf,MAAlBja,UAGFjE,EAAOtB,IAAUmH,gBAAgBF,GAClC3F,GAEDA,EAAKyB,KAAOqF,GACZnI,EAAKwhB,kGAhBTzhB,IAAU0hB,GAAG,2BAA4BthB,KAAKohB,2EAI9CxhB,IAAUoC,eAAe,2BAA4BhC,KAAKohB,6DAgBrD,IACGjc,EAAanF,KAAKof,MAAlBja,SACR,IAAKA,EAAU,OAAO,KAEtB,IAAM0B,EAAaC,GAAc3B,GAC3BjE,EAAOtB,IAAUmH,gBAAgBF,GACjC0a,EAAMjN,YAAOpT,GAEXsgB,EAAwBrc,EAAxBqc,UAAWC,EAAatc,EAAbsc,SACbtb,EAAM,8BAAA8E,OAAiCwW,EAAjC,KAAAxW,OAA6CuW,GAEzD,OACI9B,EAAAlf,EAAAmM,cAAA,KAAGG,KAAM3G,EAAQoF,OAAO,SAASmW,IAAI,uBACjChC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBAAiBgC,WAAW,EAAOC,IAAKzb,EAAQob,IAAKA,IACpE7B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBACXD,EAAAlf,EAAAmM,cAACkV,EAAArhB,EAAD,CAAUshB,SAAS,QAAQC,MAAM,sBAtClCjC,IAAMC,sSCgBvBiC,4LACO,IAAA7C,EACsDnf,KAAKof,MAAxDmB,EADHpB,EACGoB,QAAS0B,EADZ9C,EACY8C,OAAQC,EADpB/C,EACoB+C,YAAaC,EADjChD,EACiCgD,OAAQC,EADzCjD,EACyCiD,SAE9C,OACI1C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,aAAc,CAAE2B,oBAAqBF,KAC5DzC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CACI+f,QAAS,CAAEgC,KAAMhC,EAAQiC,WACzBT,MAAM,UACNU,QAASR,GAAUC,EACnBE,SAAUA,EACVM,YAAahD,EAAAlf,EAAAmM,cAACgW,GAAAniB,EAAD,CAAwB+f,QAAS,CAAEgC,KAAML,EAAc3B,EAAQqC,KAAO,UAEtFV,GAAexC,EAAAlf,EAAAmM,cAACkW,GAAAriB,EAAD,CAAkB0L,KAAM,GAAI4W,UAAW,IAAKvC,QAAS,CAAEgC,KAAMhC,EAAQwC,wBAb7EjD,IAAMC,YAyBfgB,OAxCA,CACXgC,aAAc,CACVC,SAAU,WACVC,IAAK,EACLC,KAAM,EACNC,cAAe,QAEnBX,UAAW,CACPY,QAAS,GAEbR,KAAM,CACFb,MAAO,gBA6BAhB,CAAmBiB,ICsEnBqB,uBAhHX,SAAAA,EAAYjE,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAqjB,IACfxjB,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAujB,GAAAljB,KAAAH,KAAMof,KA0DVqE,gBAAkB,WACd5jB,EAAK6jB,gBAEL7jB,EAAK8jB,OAASC,sBAAsB/jB,EAAKgkB,mBA9D1BhkB,EAiEnB6jB,cAAgB,WACP7jB,EAAK8jB,SAEVG,qBAAqBjkB,EAAK8jB,QAC1B9jB,EAAK8jB,OAAS,OArEC9jB,EAwEnBgkB,iBAAmB,WAAM,IAAAE,EACWlkB,EAAKmkB,MAA7BC,EADaF,EACbE,UAAWC,EADEH,EACFG,KAAMC,EADJJ,EACII,GAEnBC,EAAa5L,KAAKI,MAAQqL,EAEhC,GAAIG,GAAcC,IACdxkB,EAAKykB,SAAS,CAAEC,SAAUJ,IAC1BtkB,EAAK6jB,oBACF,CACH,IAAMa,EAAWL,EAAOM,KAAKC,OAAQN,EAAKD,GAAQE,EAAcC,KAChExkB,EAAKykB,SAAS,CAAEC,aAChB1kB,EAAK8jB,OAASC,sBAAsB/jB,EAAKgkB,oBAhF7ChkB,EAAK8jB,OAAS,KAHC,IAKPnO,EAAU4J,EAAV5J,MALO,OAOf3V,EAAKmkB,MAAQ,CACTE,KAAM1O,EACN2O,GAAI3O,EACJ+O,SAAU/O,EAEVkP,eAAgBlP,GAZL3V,qFAgBG8kB,EAAWC,EAAWC,GAAa,IAAA1F,EAC3Bnf,KAAKof,MAAvB0F,EAD6C3F,EAC7C2F,OAAQtP,EADqC2J,EACrC3J,MACR+O,EAAavkB,KAAKgkB,MAAlBO,SAER,OAAIO,IAAWH,EAAUG,SAIrBtP,IAAUmP,EAAUnP,OAIpB+O,IAAaK,EAAUL,qDAqBZQ,EAAWC,EAAWC,GACjCF,EAAUvP,QAAUxV,KAAKof,MAAM5J,OAC/BxV,KAAKyjB,iEAKTzjB,KAAK0jB,iDA+BA,IAAApD,EAC+BtgB,KAAKof,MAAjC6C,EADH3B,EACG2B,OAAQ6C,EADXxE,EACWwE,OAAQjF,EADnBS,EACmBT,QAChB0E,EAAavkB,KAAKgkB,MAAlBO,SAER,OACI7E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,kBAAmB,CAAEwE,4BAA6BjD,MACvE6C,GAAU7C,EACRvC,EAAAlf,EAAAmM,cAAA,KAAGgT,UAAU,yBAAyBE,QAASA,GAC1C0E,EAAW,KAGhB7E,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KAAGZ,EAAW,yDA/DEnF,EAAO4E,GACnC,OAAI5E,EAAM5J,QAAUwO,EAAMU,eACf,CACHT,UAAWzL,KAAKI,MAChBsL,KAAMF,EAAMO,SACZJ,GAAI/E,EAAM5J,MAEVkP,eAAgBtF,EAAM5J,OAIvB,YA/CcsK,IAAMC,YCqB7BqF,sNACFC,eAAiB,SAAC5L,GAA0B,IAAnBlC,EAAmB7V,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAAf,SAAA8V,GAAG,OAAIA,GAEhC,OAD0B3X,EAAKuf,MAAvBkG,cACkB,KAErB7L,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIlC,EAAE,WAAWlD,iBAMpCkR,YAAc,SAAAja,GAAS,IAAA6T,EACetf,EAAKuf,MAA/BkG,EADWnG,EACXmG,cAAeE,EADJrG,EACIqG,OAClBF,IAELha,EAAMma,kBAEND,QAGJE,aAAe,SAAApa,GAAS,IACZqa,EAAa9lB,EAAKuf,MAAlBuG,SAERra,EAAMma,kBAENE,6EAGK,IAAArF,EAC0EtgB,KAAKof,MAA5EmB,EADHD,EACGC,QAASqF,EADZtF,EACYsF,OAAQxD,EADpB9B,EACoB8B,SAAUkD,EAD9BhF,EAC8BgF,cAAeR,EAD7CxE,EAC6CwE,OAAQe,EADrDvF,EACqDuF,cAAetO,EADpE+I,EACoE/I,EACzE,IAAKqO,EAAQ,OAAO,KAFf,IAIGnI,EAAmEmI,EAAnEnI,KAAMqI,EAA6DF,EAA7DE,YAAaC,EAAgDH,EAAhDG,gBAAiBC,EAA+BJ,EAA/BI,UAAWC,EAAoBL,EAApBK,gBAEnDzQ,EAAQ,IAKZ,OAJIsQ,IACAtQ,EAASsQ,EAAcD,EAAiB,KAIxCnG,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,cAAcE,QAAS7f,KAAKulB,aACvC7F,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IACP,sBACA4E,EAAgB,yBAA2B,yBAE/C5F,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,2BAA2BhF,MAAO3a,KAAKqlB,eAAeS,EAAavO,IAC9EmI,EAAAlf,EAAAmM,cAACuZ,GAAD,CACI1Q,MAAOuQ,EACP9D,OAAQ+D,EACRlB,OAAQA,EACRjF,QAAS7f,KAAK0lB,eAElBhG,EAAAlf,EAAAmM,cAACwZ,GAAD,CACIhE,QAASmD,EACTrD,OAAQ+D,EACR9D,YAAa+D,EACb7D,SAAUA,IAEd1C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBAAoBlC,KAG3CiC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,4BAAD5gB,OAAAsmB,GAAA,EAAAtmB,CAAA,GAAiCygB,EAAQ8F,YAAcf,MACjF5F,EAAAlf,EAAAmM,cAAC2Z,GAAA9lB,EAAD,CACI+f,QAAS,CAAEgC,KAAMhC,EAAQwC,aAAcwD,IAAKhG,EAAQiG,aACpDzE,MAAM,UACN0E,QAAQ,cACRjR,MAAO8P,EAAgB,EAAId,KAAKkC,IAAI,IAAKlR,aAnEpCsK,IAAMC,YAwFhB4G,GALCC,aACZ7F,IAnGW,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChBijB,aAAc,CACV8D,gBAAiB,cACjBC,OAAQ,eACR9D,SAAU,WACVE,KAAM,EACN6D,MAAO,EACPC,OAAQ,GAEZR,YAAa,CACTS,WAAY,yBAEbC,YAAYlG,KAuFI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQvB,0BClGjBiC,sNACFrD,MAAQ,CACJsD,QAAQ,EACRC,aAAa,EACbrE,KAAM,EACND,IAAK,KAGTuE,yBAA2B,SAAC/N,GAA0B,IAAnBlC,EAAmB7V,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAAf,SAAA8V,GAAG,OAAIA,GAC1C,OAAKiC,EACS,IAAVA,EAAoB,SAEjBA,EAAQ,SAHIlC,EAAE,cAMzBkQ,WAAa,SAAAjV,GAAS,IAAA2M,EACYtf,EAAKuf,OC/BpC,SAAuBnY,EAAQC,EAAWwgB,GAC7C7lB,KAAgBiJ,KAAK,CACjB/B,QAAS,gBACT1C,QAASY,EACTiX,WAAYhX,EACZygB,WAAYD,ID4BZE,CAHkBzI,EACVlY,OADUkY,EACFjY,UAEiB,CAACsL,OAGtCqV,aAAe,SAAAvc,GACPA,GACAA,EAAMma,kBAFU,IAAAnF,EAKgBzgB,EAAKuf,MAAjCnY,EALYqZ,EAKZrZ,OAAQC,EALIoZ,EAKJpZ,UAAW4gB,EALPxH,EAKOwH,KACHjoB,EAAKmkB,MAArBuD,aAGJ1nB,EAAKkoB,yBAGaD,EAAdE,WCvCT,SAA0B/gB,EAAQC,GACrCrF,KAAgBiJ,KAAK,CACjB/B,QAAS,gBACT1C,QAASY,EACTiX,WAAYhX,EACZygB,WAAY,KDqCZM,CAAiBhhB,EAAQC,MAG7BghB,eAAiB,SAAA5c,GACbA,EAAMma,kBADgB,IAAA0C,EAGQtoB,EAAKuf,MAA3BnY,EAHckhB,EAGdlhB,OAAQC,EAHMihB,EAGNjhB,UACGrH,EAAKmkB,MAAhBsD,QAGJznB,EAAKykB,SAAS,CAAEgD,QAAQ,IC3C7B,SAAkBrgB,EAAQC,GAC7BrF,KAAgBiJ,KAAK,CACjB/B,QAAS,WACT1C,QAASY,EACTiX,WAAYhX,EACZiX,aAAc,ODyCdiK,CAASnhB,EAAQC,MAGrBmhB,aAAe,SAAA/c,GACQzL,EAAKmkB,MAAhBsD,QAGRznB,EAAKykB,SAAS,CACVgD,QAAQ,EACRC,aAAa,OAIrBe,kBAAoB,SAAAhd,GACZA,GACAA,EAAMma,kBAGV5lB,EAAKykB,SAAS,CAAEgD,QAAQ,OAG5BiB,kBAAoB,SAAAjd,GACCzL,EAAKuf,MAAd0I,KACAE,YAGJ1c,IACAA,EAAMkd,iBACNld,EAAMma,mBAGc5lB,EAAKmkB,MAArBuD,YAGJ1nB,EAAKykB,SAAS,CAAEiD,aAAa,IAE7B1nB,EAAKykB,SAAS,CACViD,aAAa,EACbrE,KAAM5X,EAAMmd,QACZxF,IAAK3X,EAAMod,cAKvBX,uBAAyB,SAAAzc,GACjBA,GACAA,EAAMma,kBAGV5lB,EAAKykB,SAAS,CAAEiD,aAAa,6EAGxB,IAAA9c,EAAAzK,KAAA2oB,EACkC3oB,KAAKof,MAApCnY,EADH0hB,EACG1hB,OAAQC,EADXyhB,EACWzhB,UAAW4gB,EADtBa,EACsBb,KAAMvQ,EAD5BoR,EAC4BpR,EAD5BwM,EAEsC/jB,KAAKgkB,MAAxCd,EAFHa,EAEGb,KAAMD,EAFTc,EAESd,IAAKsE,EAFdxD,EAEcwD,YAAaD,EAF3BvD,EAE2BuD,OACxBsB,EAAoDd,EAApDc,SAAUC,EAA0Cf,EAA1Ce,QAASC,EAAiChB,EAAjCgB,kBAAmBd,EAAcF,EAAdE,UAExCzjB,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAMwkB,GAAaf,GAAaa,EAAQpd,KAAK,SAAAC,GAAC,OAAIA,EAAEsa,WAAata,EAAEua,kBAC7D+C,EAAczkB,GAAWA,EAAQ0kB,cACjC3D,GAAiB0C,GAAaa,EAAQK,MAAM,SAAAxd,GAAC,OAAKA,EAAEsa,YACpDH,EAAgBrB,KAAKkC,IAALjlB,MAAA+iB,KAAI1kB,OAAAqpB,EAAA,EAAArpB,CAAQ+oB,EAAQpb,IAAI,SAAA/B,GAAC,OAAIA,EAAEoa,gBAErD,OACIpG,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,OAAOyJ,cAAeppB,KAAKuoB,mBACtC7I,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBACXD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,uBAAuBiJ,GACvClJ,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,YAAwBpI,EAAZyQ,EAAc,eAAoB,mBAElEtI,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACVkJ,EAAQpb,IAAI,SAAC/B,EAAG8G,GAAJ,OACTkN,EAAAlf,EAAAmM,cAAC0c,GAAD,CACI7R,IAAKhF,EACLoT,OAAQla,EACR4Z,cAAeA,EACfR,OAAQkD,EACRnC,cAAeA,EACfL,OAAQ,kBAAM/a,EAAKgd,WAAWjV,IAC9BmT,SAAUlb,EAAKod,kBAI3BnI,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,6BAA6B3f,KAAKwnB,yBAAyBsB,EAAmBvR,IAC7FmI,EAAAlf,EAAAmM,cAAC2c,EAAA9oB,EAAD,CACI0J,KAAMqd,IAAgBwB,GAAaC,GACnCO,QAASvpB,KAAK+nB,uBACdyB,gBAAgB,iBAChBC,eAAgB,CAAExG,MAAKC,QACvBwG,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBlK,EAAAlf,EAAAmM,cAACmd,EAAAtpB,EAAD,CAAUqf,QAAS,SAAAkK,GAAC,OAAIA,EAAEtE,oBACrBsD,GAAarJ,EAAAlf,EAAAmM,cAACqd,EAAAxpB,EAAD,CAAUqf,QAAS7f,KAAK6nB,cAAetQ,EAAE,WACtDyR,GAAetJ,EAAAlf,EAAAmM,cAACqd,EAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKqoB,cAAe9Q,EAAE,eAGjEmI,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACI0pB,mBAAoB,EACpBhgB,KAAMod,EACNiC,QAASvpB,KAAKsoB,kBACd6B,kBAAgB,qBAChBzK,EAAAlf,EAAAmM,cAACyd,GAAA5pB,EAAD,CAAamC,GAAG,qBAAqB4U,EAAE,uBACvCmI,EAAAlf,EAAAmM,cAAC0d,EAAA7pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC2d,GAAA9pB,EAAD,KAAoB+W,EAAE,uBAE1BmI,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKsoB,kBAAmBvG,MAAM,WAC1CxK,EAAE,WAEPmI,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKkoB,eAAgBnG,MAAM,WACvCxK,EAAE,mBAtKZuI,IAAMC,YAsLVqH,iBAAkBC,cElKlBoD,4LA/BF,IAAAtL,EAC2Cnf,KAAKof,MAA7CnY,EADHkY,EACGlY,OAAQC,EADXiY,EACWjY,UAAWrB,EADtBsZ,EACsBtZ,MAAOwZ,EAD7BF,EAC6BE,UAClC,IAAKxZ,EAAO,OAAO,KAFd,IAIG8U,EAA6B9U,EAA7B8U,MAAO+P,EAAsB7kB,EAAtB6kB,QAASvlB,EAAaU,EAAbV,SACxB,IAAKA,EAAU,OAAO,KALjB,IAOGqc,EAAwBrc,EAAxBqc,UAAWC,EAAatc,EAAbsc,SACbtb,EAAM,8BAAA8E,OAAiCwW,EAAjC,KAAAxW,OAA6CuW,GAEzD,OACI9B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,SACXD,EAAAlf,EAAAmM,cAACge,EAAD,CAAU1jB,OAAQA,EAAQC,UAAWA,EAAW/B,SAAUA,EAAUka,UAAWA,IAC/EK,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBACXD,EAAAlf,EAAAmM,cAAA,KAAGG,KAAM3G,EAAQoF,OAAO,SAASmW,IAAI,uBACjChC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,eAAehF,IAElC+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkB+K,YAlBjC5K,IAAMC,qGCsD1B,SAAS6K,GAASrmB,GACd,IAAKA,EAAS,OAAO,KADE,IAGf6M,EAA4B7M,EAA5B6M,eAAgB/K,EAAY9B,EAAZ8B,QAExB,GAAI+K,EAAgB,CAChB,IAAM/M,EAAO2K,IAAU9L,IAAIkO,GAC3B,GAAI/M,EACA,OAAO4S,YAAgB5S,GAI/B,GAAIgC,EAAS,CACT,IAAMrC,EAAO6O,KAAU3P,IAAImD,GAC3B,GAAIrC,EACA,OAAOA,EAAK2W,MAIpB,OAAO,KAGX,SAASkQ,GAAUpN,EAAMqN,EAAOC,GAM5B,OALID,EAAQ,IAAGA,EAAQ,GACnBA,EAAQrN,EAAKxX,OAAS,IAAG6kB,EAAQrN,EAAKxX,OAAS,GAC/C8kB,EAAMD,IAAOC,EAAMD,GACnBC,EAAMtN,EAAKxX,SAAQ8kB,EAAMtN,EAAKxX,QAE3BwX,EAAKoN,UAAUC,EAAOC,GAGjC,SAAStF,GAAgBna,GACrBA,EAAMma,kBAGV,SAAShF,GAAiBhD,GACtB,GAAsB,kBAAlBA,EAAK,SAA8B,OAAO,KAC9C,IAAKA,EAAKA,KAAM,OAAO,KACvB,IAAKA,EAAKuN,SAAU,OAAOvN,EAAKA,KAIhC,IAFA,IAAIrT,EAAS,GACToI,EAAQ,EACHzM,EAAI,EAAGA,EAAI0X,EAAKuN,SAAS/kB,OAAQF,IAAK,CAC3C,IAAIklB,EAAmBJ,GAAUpN,EAAKA,KAAMjL,EAAOiL,EAAKuN,SAASjlB,GAAGmlB,QAChED,GACA7gB,EAAOX,KAAKwhB,GAGhB,IAAIE,EAAaN,GACbpN,EAAKA,KACLA,EAAKuN,SAASjlB,GAAGmlB,OACjBzN,EAAKuN,SAASjlB,GAAGmlB,OAASzN,EAAKuN,SAASjlB,GAAGE,QAE/C,OAAQwX,EAAKuN,SAASjlB,GAAG8L,KAAK,UAC1B,IAAK,oBACD,IAAInJ,EAAMyiB,EAAWC,WAAW,QAAUD,EAAa,UAAYA,EAC/DE,OAAU,EACd,IACIA,EAAaC,UAAUH,GACzB,MAAOvnB,GACLD,QAAQC,MAAM,QAAUunB,EAAa,KAAOvnB,GAC5CynB,EAAaF,EAGjB/gB,EAAOX,KACHiW,EAAAlf,EAAAmM,cAAA,KACI6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,OACtBrL,QAAS4F,GACT3Y,KAAMpE,EACNiS,MAAOjS,EACP6C,OAAO,SACPmW,IAAI,uBACH2J,IAGT,MAEJ,IAAK,wBACD,IAAI3iB,EAAM+U,EAAKuN,SAASjlB,GAAG8L,KAAKnJ,IAAI0iB,WAAW,QACzC3N,EAAKuN,SAASjlB,GAAG8L,KAAKnJ,IACtB,UAAY+U,EAAKuN,SAASjlB,GAAG8L,KAAKnJ,IACxC0B,EAAOX,KACHiW,EAAAlf,EAAAmM,cAAA,KACI6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,OACtBrL,QAAS4F,GACT3Y,KAAMpE,EACNiS,MAAOjS,EACP6C,OAAO,SACPmW,IAAI,uBACHyJ,IAGT,MAEJ,IAAK,qBACD/gB,EAAOX,KAAKiW,EAAAlf,EAAAmM,cAAA,UAAQ6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,QAASC,IACnD,MACJ,IAAK,uBACD/gB,EAAOX,KAAKiW,EAAAlf,EAAAmM,cAAA,MAAI6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,QAASC,IAC/C,MACJ,IAAK,qBACD/gB,EAAOX,KAAKiW,EAAAlf,EAAAmM,cAAA,QAAM6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,QAASC,IACjD,MACJ,IAAK,oBACD/gB,EAAOX,KACHiW,EAAAlf,EAAAmM,cAAA,OAAK6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,QACvBxL,EAAAlf,EAAAmM,cAAA,YAAOwe,KAGf,MACJ,IAAK,wBACD/gB,EAAOX,KACHiW,EAAAlf,EAAAmM,cAAA,KAAG6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,OAAQrL,QAAS4F,GAAiB3Y,KAAI,UAAA7B,OAAYkgB,IACtEA,IAGT,MACJ,IAAK,4BACD/gB,EAAOX,KACHiW,EAAAlf,EAAAmM,cAAA,KACI6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,OACtBrL,QAAS4F,GACT3Y,KAAI,WAAA7B,OAAawS,EAAKuN,SAASjlB,GAAG8L,KAAK9C,UACtCoc,IAGT,MACJ,IAAK,wBACD,IAAII,EAAUJ,EAAWllB,OAAS,GAAuB,MAAlBklB,EAAW,GAAaN,GAAUM,EAAY,GAAKA,EAC1F/gB,EAAOX,KACHiW,EAAAlf,EAAAmM,cAAA,KACI6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,OACtBrL,QAAS4F,GACT3Y,KAAI,+BAAA7B,OAAiCsgB,IACpCJ,IAGT,MACJ,IAAK,6BACD/gB,EAAOX,KACHiW,EAAAlf,EAAAmM,cAAA,KACI6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,OACtBrL,QAAS4F,GACT3Y,KAAI,UAAA7B,OAAYkgB,GAChB5f,OAAO,SACPmW,IAAI,uBACHyJ,IAGT,MACJ,IAAK,2BACD,IAAIK,EAAUL,EAAWllB,OAAS,GAAuB,MAAlBklB,EAAW,GAAaN,GAAUM,EAAY,GAAKA,EAC1F/gB,EAAOX,KACHiW,EAAAlf,EAAAmM,cAAA,KACI6K,IAAKiG,EAAKuN,SAASjlB,GAAGmlB,OACtBrL,QAAS4F,GACT3Y,KAAI,4BAAA7B,OAA8BugB,EAA9B,UACHL,IAGT,MACJ,QACI/gB,EAAOX,KAAK0hB,GAIpB3Y,GAASyY,EAAiBhlB,OAASklB,EAAWllB,OAGlD,GAAIuM,EAAQiL,EAAKA,KAAKxX,OAAQ,CAC1B,IAAIwlB,EAAkBhO,EAAKA,KAAKoN,UAAUrY,GACtCiZ,GACArhB,EAAOX,KAAKgiB,GAIpB,OAAOrhB,EAGX,SAASshB,GAAQnnB,GACb,IAAKA,EAAS,OAAO,KAErB,IAAIkZ,EAAO,GAEHjZ,EAAYD,EAAZC,QAER,GACIA,GACqB,gBAArBA,EAAQ,UACRA,EAAQiZ,MACkB,kBAA1BjZ,EAAQiZ,KAAK,UACbjZ,EAAQiZ,KAAKA,KAEbA,EAAOgD,GAAiBjc,EAAQiZ,WAGhC,GAAIjZ,GAAWA,EAAQmnB,SAAwC,kBAA7BnnB,EAAQmnB,QAAQ,UAAgCnnB,EAAQmnB,QAAQlO,KAAM,CACpGA,EAAKhU,KAAK,MACV,IAAI+W,EAAgBC,GAAiBjc,EAAQmnB,SACzCnL,IACA/C,EAAOA,EAAKxS,OAAOuV,IAK/B,OAAO/C,EAGX,SAASmO,GAAWrnB,GAChB,OAAKA,GACAA,EAAQC,QAEND,EAAQC,QAAQc,SAHF,KAMzB,SAAS0T,GAAQzU,GACb,IAAKA,EAAS,OAAO,KACrB,IAAKA,EAAQgU,KAAM,OAAO,KAE1B,IAAIA,EAAO,IAAIC,KAAoB,IAAfjU,EAAQgU,MAE5B,OAAOI,IAAWJ,EAAM,QAG5B,SAASsT,GAAYtnB,GACjB,IAAKA,EAAS,OAAO,KACrB,IAAKA,EAAQgU,KAAM,OAAO,KAE1B,IAAMA,EAAO,IAAIC,KAAoB,IAAfjU,EAAQgU,MAC9B,OAAOI,IAAWJ,EAAM,qBAG5B,SAASuT,GAASvnB,EAAS8a,GACvB,IAAK9a,EAAS,OAAO,KADa,IAG1B8B,EAAyB9B,EAAzB8B,QAAS1D,EAAgB4B,EAAhB5B,GAAI6B,EAAYD,EAAZC,QACrB,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOkb,EAAAlf,EAAAmM,cAACuT,EAAA,EAAD,CAAWjZ,OAAQZ,EAASa,UAAWvE,EAAI8B,UAAWD,EAAQC,UAAW4a,UAAWA,IAC/F,IAAK,eACD,OAAOK,EAAAlf,EAAAmM,cAACof,EAAA,EAAD,CAAO9kB,OAAQZ,EAASa,UAAWvE,EAAIgC,MAAOH,EAAQG,MAAO0a,UAAWA,IACnF,IAAK,iBACD,OAAOK,EAAAlf,EAAAmM,cAACqf,EAAD,CAAS/kB,OAAQZ,EAASa,UAAWvE,EAAImM,QAAStK,EAAQsK,QAASuQ,UAAWA,IACzF,IAAK,kBACD,OAAOK,EAAAlf,EAAAmM,cAACsf,EAAA,EAAD,CAAUhlB,OAAQZ,EAASa,UAAWvE,EAAIoC,SAAUP,EAAQO,SAAUsa,UAAWA,IAC5F,IAAK,cACD,OAAOK,EAAAlf,EAAAmM,cAACuf,EAAD,CAAMjlB,OAAQZ,EAASa,UAAWvE,EAAIsC,KAAMT,EAAQS,KAAMoa,UAAWA,IAChF,IAAK,kBACD,OAAOK,EAAAlf,EAAAmM,cAACge,EAAD,CAAU1jB,OAAQZ,EAASa,UAAWvE,EAAIwC,SAAUX,EAAQW,SAAUka,UAAWA,IAC5F,IAAK,eACD,OAAOK,EAAAlf,EAAAmM,cAAC0T,EAAA,EAAD,CAAOpZ,OAAQZ,EAASa,UAAWvE,EAAIkC,MAAOL,EAAQK,MAAOwa,UAAWA,IACnF,IAAK,cACD,OAAOK,EAAAlf,EAAAmM,cAACwf,GAAD,CAAMllB,OAAQZ,EAASa,UAAWvE,EAAImlB,KAAMtjB,EAAQsjB,KAAMzI,UAAWA,IAChF,IAAK,iBACD,OAAOK,EAAAlf,EAAAmM,cAACyf,GAAA,EAAD,CAASnlB,OAAQZ,EAASa,UAAWvE,EAAI0C,QAASb,EAAQa,QAASga,UAAWA,IACzF,IAAK,cACD,OAAO,KACX,IAAK,eACD,OAAOK,EAAAlf,EAAAmM,cAAC0f,GAAD,CAAOplB,OAAQZ,EAASa,UAAWvE,EAAIkD,MAAOrB,EAAQqB,MAAOwZ,UAAWA,IACnF,IAAK,eACD,OAAOK,EAAAlf,EAAAmM,cAAC2f,GAAA,EAAD,CAAOrlB,OAAQZ,EAASa,UAAWvE,EAAI4C,MAAOf,EAAQe,MAAO8Z,UAAWA,IACnF,IAAK,mBACD,OAAOK,EAAAlf,EAAAmM,cAAC4f,GAAA,EAAD,CAAWtlB,OAAQZ,EAASa,UAAWvE,EAAI6E,UAAWhD,EAAQgB,WAAY6Z,UAAWA,IAChG,IAAK,mBACD,OAAOK,EAAAlf,EAAAmM,cAAC6f,GAAA,EAAD,CAAWvlB,OAAQZ,EAASa,UAAWvE,EAAI0E,UAAW7C,EAAQiB,WAAY4Z,UAAWA,IAChG,QACI,MAAO,IAAM7a,EAAQ,SAAW,KAI5C,SAASioB,GAAsBC,GAC3B,IAAKA,EAAa,OAAO,EADe,IAGhCC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,OAAO,EAEpB,OAAQA,EAAO,UACX,IAAK,2BACD,OAAO,EAEX,IAAK,iCACD,OAAO,EAEX,IAAK,8BACD,OAAO,EAIf,OAAO,EAGX,SAASC,GAAgBF,GAA6B,IAAhBnV,EAAgB7V,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAAZ,SAAA8V,GAAG,OAAIA,GAC7C,IAAKkV,EAAa,MAAO,GADyB,IAG1CC,EAAWD,EAAXC,OACR,IAAKA,EAAQ,MAAO,GAEpB,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBvb,EAAmBub,EAAnBvb,eAEF/M,EAAO2K,IAAU9L,IAAIkO,GAC3B,OAAO6F,YAAgB5S,GAE3B,IAAK,iCAGD,OAFwBsoB,EAAhBE,YAIZ,IAAK,8BAA+B,IACxBxmB,EAA8BsmB,EAA9BtmB,QAASymB,EAAqBH,EAArBG,iBAEjB,OAAOhR,aAAazV,GAAS,EAAOkR,IAAMuV,EAAgB,KAAA7hB,OAAQ6hB,EAAR,KAA8B,IAIhG,MAAO,GAGX,SAASC,GAAUxoB,GACf,IAAKA,EAAS,OAAO,EACrB,IAAKA,EAAQ8B,QAAS,OAAO,EAC7B,IAAK9B,EAAQyoB,YAAa,OAAO,EAEjC,IAAIhpB,EAAO6O,KAAU3P,IAAIqB,EAAQ8B,SACjC,QAAKrC,GAEEA,EAAKipB,4BAA8B1oB,EAAQ5B,GAGtD,SAASuqB,GAAgB3oB,GACrB,OAAKA,EAEEA,EAAQ6M,eAFM,KAKzB,SAAS+b,GAAe/iB,EAAQqI,GAC5B,GAA+B,IAA3BrI,EAAOoD,SAASvH,QACG,IAAnBwM,EAAQxM,OAAZ,CAEA,IAAMwH,EAAMgF,EAAQ2a,OAAO,SAASC,EAAaC,GAE7C,OADAD,EAAYpsB,IAAIqsB,EAAQ3qB,GAAI2qB,EAAQ3qB,IAC7B0qB,GACR,IAAIhkB,KAEPe,EAAOoD,SAAWpD,EAAOoD,SAAS7B,OAAO,SAAAD,GAAC,OAAK+B,EAAI1K,IAAI2I,EAAE/I,OAG7D,SAAS8U,GAAWlT,GAAyB,IAAhBgT,EAAgB7V,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAAZ,SAAA8V,GAAG,OAAIA,GACpC,IAAKjT,EAAS,OAAO,KADoB,IAGjCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,IAAImnB,EAAU,GAKd,GAJInnB,EAAQmnB,SAAWnnB,EAAQmnB,QAAQlO,OACnCkO,EAAO,KAAA1gB,OAAQzG,EAAQmnB,QAAQlO,OAG/BlZ,EAAQgpB,IAAM,EACd,OAAOC,aAAyBjpB,GAGpC,OAAQC,EAAQ,UACZ,IAAK,mBACD,OAAO+S,EAAE,aAAeoU,EAE5B,IAAK,eACD,OAAOpU,EAAE,eAAiBoU,EAE9B,IAAK,8BACD,OAAO6B,aAAyBjpB,GAEpC,IAAK,cACD,OAAOgT,EAAE,QAAUoU,EAEvB,IAAK,wBAGL,IAAK,yBAGL,IAAK,yBAGL,IAAK,0BAGL,IAAK,yBAGL,IAAK,wBAGL,IAAK,oBAGL,IAAK,yBAGL,IAAK,uBACD,OAAO6B,aAAyBjpB,GAEpC,IAAK,iBACD,OAAOgT,EAAE,iBAAmBoU,EAEhC,IAAK,2BAGL,IAAK,6BACD,OAAO6B,aAAyBjpB,GAEpC,IAAK,kBACD,OAAOgT,EAAE,kBAAoBoU,EAEjC,IAAK,sBACD,OAAOpU,EAAE,eAAiBoU,EAE9B,IAAK,sBACD,OAAOpU,EAAE,eAAiBoU,EAE9B,IAAK,cACD,OAAOpU,EAAE,cAAgBoU,EAE7B,IAAK,mBAGL,IAAK,iBACD,OAAO6B,aAAyBjpB,GAEpC,IAAK,kBACD,OAAOgT,EAAE,kBAAoBoU,EAEjC,IAAK,8BAGL,IAAK,0BAGL,IAAK,2BAGL,IAAK,8BACD,OAAO6B,aAAyBjpB,GAEpC,IAAK,eACD,OAAOgT,EAAE,eAAiBoU,EAE9B,IAAK,cAGD,MAAO,iBAFUnnB,EAATsjB,KAEac,UAAYrR,EAAE,SAAWoU,EAElD,IAAK,oBAGL,IAAK,yBACD,OAAO6B,aAAyBjpB,GAEpC,IAAK,iBAAkB,IACXc,EAAYb,EAAZa,QACJooB,EAAQ,GAKZ,OAJIpoB,GAAWA,EAAQooB,QACnBA,EAAQpoB,EAAQooB,OAGblW,EAAE,kBAAoBkW,EAAK,IAAAxiB,OAAOwiB,GAAU,IAAM9B,EAE7D,IAAK,8BACD,OAAO6B,aAAyBjpB,GAEpC,IAAK,cACD,OAAOC,EAAQiZ,KAAKA,KAAOkO,EAE/B,IAAK,qBACD,OAAO6B,aAAyBjpB,GAEpC,IAAK,eACD,OAAOgT,EAAE,kBAAoBoU,EAEjC,IAAK,eACD,OAAOpU,EAAE,eAAiBoU,EAE9B,IAAK,mBACD,OAAOpU,EAAE,eAAiBoU,EAE9B,IAAK,mBACD,OAAOpU,EAAE,eAAiBoU,EAE9B,IAAK,0BACD,OAAO6B,aAAyBjpB,GAEpC,QACI,OAAOgT,EAAE,0BAKrB,SAASmW,GAAelpB,GACpB,QAAKA,GAEuB,iBAArBA,EAAQ,SAGnB,SAASsC,GAAc3B,GACnB,IAAKA,EAAU,OAAO,KADO,IAGrBqc,EAAwBrc,EAAxBqc,UAAWC,EAAatc,EAAbsc,SACnB,aAAAxW,OAAcwW,EAAd,KAAAxW,OAA0BuW,EAA1B,UAAAvW,OAA4CyE,IAA5C,KAAAzE,OAA8D2E,IAA9D,WAAA3E,OAAuF6E,IAAvF,UAAA7E,OAA8GuE,KAGlH,SAASme,GAAe1mB,EAAQC,GAC5B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFkB,IAI/BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eACD,OAAO,EAEX,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,OAAO0X,QAAQ1X,EAASC,OAE5B,QACI,OAAO,GAKnB,SAASqoB,GAAgB3mB,EAAQC,GAC7B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,kBAAmB,IACZO,EAAaP,EAAbO,SACR,IAAKA,EAAU,OAAO,EAFF,IAIZ8oB,EAAc9oB,EAAd8oB,UAER,OAAOA,GAAaA,EAAUxZ,cAAcyZ,SAAS,SAEzD,IAAK,cAAe,IACRxoB,EAAad,EAAbc,SACR,IAAKA,EAAU,OAAO,EAFN,IAIRP,EAAaO,EAAbP,SACR,IAAKA,EAAU,OAAO,EALN,IAOR8oB,EAAc9oB,EAAd8oB,UAER,OAAOA,GAAaA,EAAUxZ,cAAcyZ,SAAS,SAEzD,QACI,OAAO,GAKnB,SAASC,GAAmB9mB,EAAQC,GAChC,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFsB,IAInCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAO,EAEX,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,OAAO0X,QAAQ1X,EAASb,WAE5B,QACI,OAAO,GAKnB,SAASupB,GAAgB/mB,EAAQC,GAC7B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFmB,IAIhCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBACD,OAAOA,EAAQga,YAEnB,IAAK,mBACD,OAAOha,EAAQia,UAEnB,QACI,OAAO,GAKnB,SAASwP,GAAc1pB,GACnB,IAAKA,EAAS,OAAO,KADO,IAGpBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAAgB,IACTG,EAAUH,EAAVG,MACR,GAAIA,EACA,OAAOupB,aAAcvpB,GAEzB,MAEJ,IAAK,cAAe,IACRW,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAUW,EAAVX,MACR,GAAIA,EACA,OAAOupB,aAAcvpB,GAEzB,OAKZ,OAvpBJ,SAAmBJ,GACf,IAAKA,EAAS,OAAO,KADG,IAGhB4pB,EAAiB5pB,EAAjB4pB,aAER,GAAIA,EACA,OAAQA,EAAa,UACjB,IAAK,2BACD,GAAIA,EAAa/c,eAAiB,EAAG,CACjC,IAAM/M,EAAO2K,IAAU9L,IAAIirB,EAAa/c,gBACxC,GAAI/M,EACA,OAAO4S,YAAgB5S,GAG/B,MAEJ,IAAK,uBACD,IAAML,EAAO6O,KAAU3P,IAAIirB,EAAa9nB,SACxC,GAAIrC,EACA,OAAOA,EAAK2W,MAO5B,OAAOiQ,GAASrmB,GA6nBT6pB,CAAU7pB,GAGrB,SAAS8pB,GAASpnB,EAAQC,GACtB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFY,IAIzBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVG,MAEJ,OAAO,EAGX,MAEJ,IAAK,cAAe,IACRW,EAAad,EAAbc,SACR,GAAIA,EAEA,GADkBA,EAAVX,MAEJ,OAAO,EAQvB,OAAO,EAGX,SAAS2pB,GAAarnB,EAAQC,GAC1B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFgB,IAI7BC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,mBAED,GADuBA,EAAfgB,WAEJ,OAAO,EAGX,MAEJ,IAAK,cAAe,IACRF,EAAad,EAAbc,SACR,GAAIA,EAEA,GADuBA,EAAfE,WAEJ,OAAO,EAQvB,OAAO,EAGX,SAAS+oB,GAAwBtnB,EAAQC,GACrC,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAF2B,IAIxCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,eAED,GADkBA,EAAVG,MAEJ,MAAO,CACHoE,QAAS,6BAGjB,MAEJ,IAAK,mBAED,GADuBvE,EAAfiB,WAEJ,MAAO,CACHsD,QAAS,iCAGjB,MAEJ,IAAK,mBAED,GADuBvE,EAAfgB,WAEJ,OAAO,KAMX,MAEJ,IAAK,cAAe,IACRF,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAkCW,EAAlCX,MAAOc,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAC3B,GAAIb,EACA,OAAO,KAOX,GAAIc,EACA,OAAO,KAOX,GAAID,EACA,OAAO,KAMX,OAKZ,OAAO,KAGX,SAASgpB,GAAc/pB,EAAWF,EAASkqB,GACvC,GAAKhqB,GACAF,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEAzB,EAASuD,EAApBA,UACDvD,IAELA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBACzB5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEhCkqB,GAAcvtB,EAAK2C,OAAO8Q,oBACjC/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,IAOxC1C,KAAgBiH,aAAa,CACzBC,QAAS,8BACT9B,OAAQZ,EACRa,UAAWvE,IAGfd,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBwV,KAAiBwW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,OAInB,SAASisB,GAAUjqB,EAAOJ,EAASkqB,GAC/B,GAAK9pB,GACAJ,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJzB,EAASyD,EAAhBA,MACDzD,IAELA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBACzB5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEhCkqB,GAAcvtB,EAAK2C,OAAO8Q,oBACjC/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,IAGpCyI,YAAS9L,EAAMqD,EAAS,kBAAM3E,IAAU6G,gBAAgBJ,EAAS1D,EAAIzB,EAAKyB,MAG9Ed,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBd,KAAgBiH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAsDnB,SAASksB,GAAa9pB,EAAUR,EAASkqB,GACrC,GAAK1pB,GACAR,EAAL,CAFiD,IAIzC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEDzB,EAAS6D,EAAnBA,SACD7D,IAELA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBACzB5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEhCkqB,GAAcvtB,EAAK2C,OAAO8Q,oBACjC/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,IAIxC1C,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGZirB,GAAgBvnB,EAAS1D,IACzBd,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBwV,KAAiBwW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,KAGf+O,YAAexQ,EAAM6D,EAAS8oB,UAAWtpB,MAwCjD,SAASuqB,GAAUjqB,EAAON,EAASkqB,GAC/B,GAAK5pB,GACAN,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXuD,EAAYgK,YAAarL,EAAMmB,OACrC,GAAKE,EAAL,CAP2C,IAS9BhF,EAASgF,EAAhBrB,MACD3D,IAELA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBACzB5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEhCkqB,GAAcvtB,EAAK2C,OAAO8Q,oBACjC/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,IAIxCyI,YAAS9L,EAAMqD,EAAS,kBAAM3E,IAAUwG,gBAAgBC,EAAS1D,EAAIzB,EAAKyB,MAE1Ed,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBwV,KAAiBwW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,iBAIJosB,uFAAf,SAAAruB,EAA2B2E,EAASd,EAASkqB,GAA7C,IAAApoB,EAAA1D,EAAAqsB,EAAAhb,EAAA,OAAAib,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACSsE,EADT,CAAAxE,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAESkD,EAFT,CAAA1D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIYgF,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjBd,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGRqsB,EAAW3pB,EAAX2pB,OAZZ,CAAAnuB,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,GAe6Bc,KAAgBiJ,KAAK,CAC1C/B,QAAS,gBACTimB,WAjBR,WAeUhb,EAfVnT,EAAAmK,KAAA,CAAAnK,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBAsBIQ,KAAgBiH,aAAa,CACzBC,QAAS,yBACTiL,eAxBR,yBAAAnT,EAAAU,SAAAb,6BA4BA,SAASwuB,GAAU3pB,EAAOhB,EAASkqB,GAC/B,GAAKlpB,GACAhB,EAAL,CAF2C,IAInC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJzB,EAASqE,EAAhBA,MACDrE,IAELA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBACzB5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEhCkqB,GAAcvtB,EAAK2C,OAAO8Q,oBACjC/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,IAIxC1C,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBwV,KAAiBwW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,OAInB,SAASwsB,GAAc3nB,EAAWjD,EAASkqB,GACvC,GAAKjnB,GACAjD,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJzB,EAASsG,EAAhBjC,MACDrE,IAELA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBACzB5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEhCkqB,GAAcvtB,EAAK2C,OAAO8Q,oBACjC/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,IAIxCyI,YAAS9L,EAAMqD,EAAS,kBAAM3E,IAAU8H,oBAAoBrB,EAAS1D,EAAIzB,EAAKyB,MAE9Ed,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBd,KAAgBiH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAInB,SAASysB,GAAc/nB,EAAW9C,EAASkqB,GACvC,GAAKpnB,GACA9C,EAAL,CAFmD,IAI3C8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEJzB,EAASmG,EAAhBC,MACDpG,IAELA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBACzB5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEhCkqB,GAAcvtB,EAAK2C,OAAO8Q,oBACjC/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,IAGpCyI,YAAS9L,EAAMqD,EAAS,kBAAM3E,IAAU2H,oBAAoBlB,EAAS1D,EAAIzB,EAAKyB,MAGlFd,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBd,KAAgBiH,aAAa,CACzBC,QAAS,0BACT9B,OAAQZ,EACRa,UAAWvE,OAInB,SAAS0c,GAAUpY,EAAQC,GAA8B,IAAnBunB,IAAmB/sB,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GAC/C6C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAFqD,IAI7CC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACJA,GACA+pB,GAAc/pB,EAAWF,EAASkqB,GAGtC,MAEJ,IAAK,eAAgB,IACT9pB,EAAUH,EAAVG,MACJA,GACAiqB,GAAUjqB,EAAOJ,EAASkqB,GAG9B,MAEJ,IAAK,yBAA0B,IACnB5pB,EAAUL,EAAVK,MACJA,GAvThB,SAAuBA,EAAON,EAASkqB,GACnC,GAAK5pB,GACAN,EAAL,CAF+C,IAIvC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEXuD,EAAYgK,YAAarL,EAAMmB,OACrC,GAAKE,EAAL,CAP+C,IASlChF,EAASgF,EAAhBrB,MACD3D,IAELA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBACzB5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEhCkqB,GAAcvtB,EAAK2C,OAAO8Q,oBACjC/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,IAIxCyI,YAAS9L,EAAMqD,EAAS,kBAAM3E,IAAUwG,gBAAgBC,EAAS1D,EAAIzB,EAAKyB,MAE1Ed,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBwV,KAAiBwW,sBAAsB,CACnC1nB,OAAQZ,EACRa,UAAWvE,QAyRH0sB,CAAcxqB,EAAON,EAASkqB,GAGlC,MAEJ,IAAK,iBAAkB,IACX3f,EAAYtK,EAAZsK,QACJA,GA5RhB,SAAqBA,EAASvK,EAASkqB,GACnC,GAAK3f,GACAvK,EAAL,CAF+C,IAIvC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjBd,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhB2sB,aAASxgB,EAAQ/C,SAiRLwjB,CAAYzgB,EAASvK,GAGzB,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SACJA,GACA8pB,GAAa9pB,EAAUR,EAASkqB,GAGpC,MAEJ,IAAK,cAAe,IACRxpB,EAAST,EAATS,KACJA,GArPhB,SAAkBA,EAAMV,EAASkqB,GAC7B,GAAKxpB,GACAV,EAAL,CAFyC,IAIjC8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAET8B,EAAcQ,EAAdR,UACR,GAAIA,EAAW,KACMvD,EAASuD,EAApBA,UACN,IAAKvD,EAAM,OAGX,GADAA,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAC7ButB,GAAcvtB,EAAK2B,MAAM2R,sBAEzB,YADA5U,IAAUwS,oBAAoBlR,EAAKyB,GAAI4B,GAEpC,GAAIkqB,GAAcvtB,EAAK2C,OAAO8Q,oBAEjC,YADA/U,IAAU8uB,iBAAiBxtB,EAAKyB,GAAI4B,GAIxCyI,YAAS9L,EAAMqD,EAAS,kBAAM3E,IAAUkI,oBAAoBzB,EAAS1D,EAAIzB,EAAKyB,MAGlFd,KAAgBiJ,KAAK,CACjB/B,QAAS,qBACT1C,QAASA,EACT6X,WAAYvb,IAGhBd,KAAgBiH,aAAa,CACzBC,QAAS,8BACT9B,OAAQZ,EACRa,UAAWvE,KAsNH6sB,CAASvqB,EAAMV,EAASkqB,GAG5B,MAEJ,IAAK,eAAgB,IACT5pB,EAAUL,EAAVK,MACJA,GACAiqB,GAAUjqB,EAAON,EAASkqB,GAG9B,MAEJ,IAAK,iBAAkB,IACXppB,EAAYb,EAAZa,QACJA,GACA0pB,GAAY1pB,EAASd,EAASkqB,GAGlC,MAEJ,IAAK,cAAe,IACRnpB,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAA8Ea,EAA9Eb,UAAWE,EAAmEW,EAAnEX,MAAOI,EAA4DO,EAA5DP,SAAUF,EAAkDS,EAAlDT,MAAOQ,EAA2CC,EAA3CD,QAASE,EAAkCD,EAAlCC,MAAOC,EAA2BF,EAA3BE,WAAYC,EAAeH,EAAfG,WAEnEhB,GACA+pB,GAAc/pB,EAAWF,EAASkqB,GAGlC9pB,GACAiqB,GAAUjqB,EAAOJ,EAASkqB,GAG1B1pB,GACA8pB,GAAa9pB,EAAUR,EAASkqB,GAGhCppB,GACA0pB,GAAY1pB,EAASd,EAASkqB,GAG9BlpB,GACA2pB,GAAU3pB,EAAOhB,EAASkqB,GAG1BjpB,GACA2pB,GAAc3pB,EAAYjB,EAASkqB,GAGnChpB,GACA2pB,GAAc3pB,EAAYlB,EAASkqB,GAGnC5pB,GACAiqB,GAAUjqB,EAAON,EAASkqB,GAIlC,MAEJ,IAAK,eAAgB,IACTlpB,EAAUf,EAAVe,MACJA,GACA2pB,GAAU3pB,EAAOhB,EAASkqB,GAG9B,MAEJ,IAAK,mBAAoB,IACbjpB,EAAehB,EAAfgB,WACJA,GACA2pB,GAAc3pB,EAAYjB,EAASkqB,GAGvC,MAEJ,IAAK,mBAAoB,IACbhpB,EAAejB,EAAfiB,WACJA,GACA2pB,GAAc3pB,EAAYlB,EAASkqB,KAQnD,SAASgB,GAAiBlrB,GACtB,OAAOA,GAAgC,mBAArBA,EAAQ,SAG9B,SAASmrB,GAAkBzoB,EAAQC,GAC/B,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAF0C,IAIlCC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UACR,OAAKA,GAEiBA,EAAdiC,WAFe,KAK3B,IAAK,eAAgB,IACT/B,EAAUH,EAAVG,MACR,OAAKA,GAE6BA,EAA1B2B,uBAFW,KAKvB,IAAK,yBAA0B,IACnBzB,EAAUL,EAAVK,MACR,OAAKA,EAEEqL,YAAarL,EAAMmB,OAFP,KAIvB,IAAK,kBAAmB,IACZjB,EAAaP,EAAbO,SACR,OAAKA,GAEiBA,EAAd2B,WAFc,KAK1B,IAAK,cAAe,IACRzB,EAAST,EAATS,KACR,IAAKA,EAAM,OAAO,KAFF,IAIRR,EAAqBQ,EAArBR,UAAWI,EAAUI,EAAVJ,MACnB,GAAIJ,EAAW,KACHiC,EAAcjC,EAAdiC,UACR,GAAIA,EACA,OAAOA,EAIf,OAAI7B,EACOqL,YAAarL,EAAMmB,OAGvB,KAEX,IAAK,eAAgB,IACTnB,EAAUL,EAAVK,MACR,OAAKA,EAEEqL,YAAarL,EAAMmB,OAFP,KAIvB,IAAK,iBAAkB,IACXX,EAAYb,EAAZa,QACR,OAAKA,GAEiBA,EAAdqB,WAFa,KAKzB,IAAK,cAAe,IACRpB,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFb,EAAkEa,EAAlEb,UAAWE,EAAuDW,EAAvDX,MAAOI,EAAgDO,EAAhDP,SAAUF,EAAsCS,EAAtCT,MAAOQ,EAA+BC,EAA/BD,QAASE,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,WAC3D,GAAIX,EACA,OAAOqL,YAAarL,EAAMmB,OAE9B,GAAIvB,EAEA,OADsBA,EAAdiC,WACY,KAExB,GAAI/B,EAEA,OADkCA,EAA1B2B,uBACwB,KAEpC,GAAIvB,EAEA,OADsBA,EAAd2B,WACY,KAExB,GAAIrB,EAEA,OADsBA,EAAdqB,WACY,KAExB,GAAInB,EAEA,OADsBA,EAAdmB,WACY,KAExB,GAAIlB,EAEA,OADsBA,EAAdkB,WACY,KAI5B,MAEJ,IAAK,eAAgB,IACTnB,EAAUf,EAAVe,MACR,OAAKA,GAEiBA,EAAdmB,WAFW,KAKvB,IAAK,mBAAoB,IACblB,EAAehB,EAAfgB,WACR,OAAKA,GAEiBA,EAAdkB,WAFgB,KAOhC,OAAO,MAUX,SAASipB,GAAkBprB,GACvB,GAAKA,GACAA,EAAQyoB,YACb,OAAKD,GAAUxoB,GAVnB,SAAyBA,GACrB,GAAKA,GACAA,EAAQyoB,YACb,OAAKzoB,EAAQoa,cAC6B,8BAAnCpa,EAAQoa,cAAc,SAA2C,SAAW,UADhD,YAQ5BiR,CAAgBrrB,GADS,ikCC96C9BsrB,EAAa/vB,OAAOgwB,OAAO,CAC7BC,KAAM,OACNC,OAAQ,SACRC,WAAY,eA0VVtwB,EAAQ,gBApVV,SAAAuwB,IAAc,IAAArwB,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkwB,IACVrwB,EAAAC,OAAAqwB,EAAA,EAAArwB,CAAAE,KAAAF,OAAAswB,EAAA,EAAAtwB,CAAAowB,GAAA/vB,KAAAH,QAyBJ4B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA5BvC9B,EA+BdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjC1C9B,EAoCdO,SApCc,eAAAC,EAAAP,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAoCH,SAAAC,EAAMC,GAAN,OAAAJ,EAAAC,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAAF,EAAAG,GACCL,EAAO,SADRE,EAAAE,KAAA,sBAAAF,EAAAQ,OAAA,mCAAAR,EAAAU,SAAAb,MApCG,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EA2CdwwB,MAAQ,WACJxuB,IAAgBiH,aAAa,CACzBC,QAAS,4BA7CHlJ,EAiDd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,yBACDd,EAAKywB,SAAW,KAChBzwB,EAAK0E,QAAU,KACf1E,EAAK0wB,KAAO,KACZ1wB,EAAK2wB,YAAc,KAEnB3wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA2B,IACpBsG,EAAsBtG,EAAtBsG,OAAQC,EAAcvG,EAAduG,UAEV3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAEd1E,EAAK0E,QAAUA,EAEf1E,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAK4wB,YAAYxpB,EAAQC,GACzB,MAEJ,IAAK,0BAA2B,IACpBwpB,EAAW/vB,EAAX+vB,OAER7wB,EAAK6wB,OAASA,GAEE,IAAIC,KACZ1vB,IAAI,SAAUyvB,GAEtB7wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,0BAA2B,IACpBiwB,EAAWjwB,EAAXiwB,OAER/wB,EAAK+wB,OAASA,EAEd/wB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BAA4B,IACrBkwB,EAAYlwB,EAAZkwB,QAERhxB,EAAKgxB,QAAUA,EAEfhxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,gCAAiC,IAC1BmwB,EAAiBnwB,EAAjBmwB,aAERjxB,EAAKixB,aAAeA,GAEJ,IAAIH,KACZ1vB,IAAI,eAAgB6vB,GAE5BjxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKkxB,SAAU,EAEflxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,kCACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,yBACDd,EAAKkxB,SAAU,EAEflxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,wBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKmxB,iBAAgB,GACrB,MAEJ,IAAK,wBACDnxB,EAAKuB,KAAKT,EAAO,SAAUA,GAE3Bd,EAAKoxB,kBACL,MAEJ,IAAK,0BACDpxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,uBACDd,EAAKuB,KAAKT,EAAO,SAAUA,GAEvBA,EAAOuwB,UACHrxB,EAAKmxB,iBAAgB,IAKzBnxB,EAAKwwB,QAET,MAEJ,IAAK,wBAAyB,IAClBc,EAAqCxwB,EAArCwwB,SAAUC,EAA2BzwB,EAA3BywB,YAAaC,EAAc1wB,EAAd0wB,UAE/BxxB,EAAK0wB,KAAO,CACRa,YAAaA,EACbD,SAAUA,EACVE,UAAWA,GAGfxxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,iCACDd,EAAK2wB,YAAc7vB,EAAO2wB,OAE1BzxB,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,8BAIL,IAAK,+BAIL,IAAK,+BAIL,IAAK,mCAIL,IAAK,gCAIL,IAAK,4BAIL,IAAK,gCACDd,EAAKuB,KAAKT,EAAO,SAAUA,KA3MzBd,EAmNdoxB,gBAAkB,WACd,GAAKpxB,EAAKywB,UACLzwB,EAAK0E,QAAV,CAFoB,IAAAgtB,EAII1xB,EAAK0E,QAArB8B,EAJYkrB,EAIZlrB,QAAS1D,EAJG4uB,EAIH5uB,GACT6K,EAAa3N,EAAKywB,SAAlB9iB,SACR,GAAKA,EAAL,CAEA,IAAMgF,EAAQhF,EAASgkB,UAAU,SAAA9lB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACxE,IAAe,IAAX6P,GAEAA,EAAQ,EAAIhF,EAASvH,OAAQ,CAC7B,IAAM1B,EAAUiJ,EAASgF,EAAQ,GAEjC6M,YAAU9a,EAAQ8B,QAAS9B,EAAQ5B,IAAI,OAjOjC9C,EAqOdmxB,gBAAkB,SAAAS,GACd,IAAK5xB,EAAKywB,SAAU,OAAO,EAC3B,IAAKzwB,EAAK0E,QAAS,OAAO,EAFQ,IAAAmtB,EAIV7xB,EAAK0E,QAArB8B,EAJ0BqrB,EAI1BrrB,QAAS1D,EAJiB+uB,EAIjB/uB,GACT6K,EAAa3N,EAAKywB,SAAlB9iB,SACR,IAAKA,EAAU,OAAO,EAEtB,IAAMgF,EAAQhF,EAASgkB,UAAU,SAAA9lB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACxE,IAAe,IAAX6P,EAAc,OAAO,EAEzB,IAAImf,GAAa,EACjB,GAAKF,EAGD,OAAQ5xB,EAAK+wB,QACT,KAAKf,EAAWE,KAER4B,EADA9xB,EAAKgxB,QACOe,YAAa,EAAGpkB,EAASvH,QAEzBuM,EAAQ,EAExB,MAEJ,KAAKqd,EAAWI,WACZ0B,EAAYnf,EACZ,MAEJ,KAAKqd,EAAWG,OAER2B,EADA9xB,EAAKgxB,QACOe,YAAa,EAAGpkB,EAASvH,QAEzBuM,EAAQ,GAAK,EAAIA,EAAQ,EAAIhF,EAASvH,OAAS,OAnBvE0rB,EAAYnf,EAAQ,EA0BxB,GAAImf,GAAa,EAAG,CAChB,IAAMptB,EAAUiJ,EAASmkB,GAGzB,OADAtS,YAAU9a,EAAQ8B,QAAS9B,EAAQ5B,IAAI,IAChC,EAGX,OAAO,GAnRG9C,EAsRd4wB,YAtRc,eAAAxuB,EAAAnC,OAAAQ,EAAA,EAAAR,CAAAS,EAAAC,EAAAC,KAsRA,SAAAyB,EAAO+E,EAAQC,GAAf,IAAA2qB,EAAAC,EAAAC,EAAApmB,EAAAvB,EAAA4nB,EAAAxkB,EAAA,OAAAjN,EAAAC,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAA8wB,EAAA/xB,OAAAmyB,EAAA,EAAAnyB,QAAAmyB,EAAA,EAAAnyB,CAAAD,MACQiyB,EADRD,EACFvB,UADE,CAAAnuB,EAAApB,KAAA,aAIEyM,EAAaskB,EAAbtkB,YACiF,IAAzEA,EAASgkB,UAAU,SAAA9lB,GAAC,OAAIA,EAAErF,UAAYY,GAAUyE,EAAE/I,KAAOuE,IALnE,CAAA/E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAUVQ,IAAgBiH,aAAa,CACzBC,QAAS,mCACT9B,OAAQA,EACRC,UAAWA,IAGTyE,EAAS4iB,YAAwBtnB,EAAQC,GAhBrC,CAAA/E,EAAApB,KAAA,gBAkBNlB,EAAKywB,SAAW,CACZrpB,OAAQA,EACRC,UAAWA,EACXgrB,WAAY,EACZ1kB,SAAU,CAACE,IAAaxK,IAAI+D,EAAQC,KAGxCrF,IAAgBiH,aAAa,CACzBC,QAAS,4BACTunB,SAAUzwB,EAAKywB,WA3BbnuB,EAAAd,OAAA,yBAAAc,EAAApB,KAAA,GAiCWc,IAAgBiJ,KAAK,CACtC/B,QAAS,qBACT1C,QAASY,EACTkrB,MAAO,GACP/gB,eAAgB,EAChBghB,gBAAiBlrB,EACjBgkB,QAAS,GACTmH,MAAO,IACP1mB,OAAQA,IAzCF,QAiCJvB,EAjCIjI,EAAA6I,KA4CV0C,IAAaC,SAASvD,EAAOoD,UAErBwkB,EAA0B5nB,EAA1B4nB,YAAaxkB,EAAapD,EAAboD,SAErB3N,EAAKywB,SAAW,CACZrpB,OAAQA,EACRC,UAAWA,EACXgrB,WAAYF,EACZxkB,SAAUA,GAGd3L,IAAgBiH,aAAa,CACzBC,QAAS,4BACTunB,SAAUzwB,EAAKywB,WAzDT,yBAAAnuB,EAAAZ,SAAAW,MAtRA,gBAAAK,EAAA+vB,GAAA,OAAArwB,EAAAR,MAAAzB,KAAA0B,YAAA,GAGV,IAAM6wB,EAAU,IAAI5B,IAChBG,EAAeyB,EAAQrvB,IAAI,gBAC3BwtB,EAAS6B,EAAQrvB,IAAI,UALf,OAMV4tB,EACIA,GAAgB0B,OAAO1B,IAAiB,GAAK0B,OAAO1B,IAAiB,EAC/D0B,OAAO1B,GACP2B,IACV/B,EAASA,GAAU8B,OAAO9B,IAAW,GAAK8B,OAAO9B,IAAW,EAAI8B,OAAO9B,GAAUgC,IAEjF7yB,EAAKixB,aAAeA,EACpBjxB,EAAK6wB,OAASA,EACd7wB,EAAK+wB,OAASf,EAAWE,KACzBlwB,EAAKgxB,SAAU,EAEfhxB,EAAKywB,SAAW,KAChBzwB,EAAK0E,QAAU,KACf1E,EAAK0wB,KAAO,KACZ1wB,EAAK2wB,YAAc,KAEnB3wB,EAAK+B,mBACL/B,EAAKmJ,gBAAgBC,KAvBXpJ,6BADQmM,iBAsV1BhC,OAAO2oB,OAAShzB,EACDA,wCC9Wfie,EAAAC,EAAAC,EAAA,sBAAAwR,IAAA1R,EAAAC,EAAAC,EAAA,sBAAA8U,IAAAhV,EAAAC,EAAAC,EAAA,sBAAA+U,IAAAjV,EAAAC,EAAAC,EAAA,sBAAAgV,IAAA,IAAAC,EAAAnV,EAAA,GASO,SAAS0R,EAASvjB,GAAuB,IAAfinB,EAAetxB,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GAC5CG,IAAgBiH,aAAa,CACzBC,QAAS,uBACTgD,SACAinB,UAID,SAASJ,EAAS3rB,GAAyC,IAAjCC,EAAiCxF,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAArB,KAAMsxB,EAAetxB,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GAC9DG,IAAgBiH,aAAa,CACzBC,QAAS,uBACT9B,SACAC,YACA8rB,UAID,SAASH,EAAiB5rB,EAAQC,GACrCrF,IAAgBiH,aAAa,CACzBC,QAAS,iCACT9B,SACAC,cAID,SAAS4rB,EAAc7rB,EAAQC,EAAW4X,GAC7Cjd,IAAgBiH,aAAa,CACzBC,QAAS,8BACT9B,SACAC,YACA4X,gDCvCRlB,EAAAC,EAAAC,EAAA,sBAAAhE,IAAA8D,EAAAC,EAAAC,EAAA,sBAAA9C,IAAA4C,EAAAC,EAAAC,EAAA,sBAAA7G,IAAA2G,EAAAC,EAAAC,EAAA,sBAAAmV,IAAArV,EAAAC,EAAAC,EAAA,sBAAAoV,IAAAtV,EAAAC,EAAAC,EAAA,sBAAAqV,IAAAvV,EAAAC,EAAAC,EAAA,sBAAAzK,IAAAuK,EAAAC,EAAAC,EAAA,sBAAAsV,IAAAxV,EAAAC,EAAAC,EAAA,sBAAA3G,IAAA,IAAAkc,EAAAzV,EAAA,KAAA0V,EAAA1V,EAAA2V,EAAAF,GAAAG,EAAA5V,EAAA,IAAA6V,EAAA7V,EAAA,IAAA8V,EAAA9V,EAAA,IAYA,SAAS9D,EAAczV,GACnB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAKmV,OAAQ,OAAO,KAEzB,GAAInV,EAAK1B,KAAOgxB,IACZ,MAAO,wBAGX,GAAItvB,EAAKwN,MAA+B,gBAAvBxN,EAAKwN,KAAK,SACvB,MAAO,MAGX,OAAQxN,EAAKmV,OAAO,UAChB,IAAK,kBACD,MAAO,4BAEX,IAAK,sBACD,MAAO,2BAEX,IAAK,qBACD,MAAO,0BAEX,IAAK,oBAAqB,IAChBoa,EAAevvB,EAAKmV,OAApBoa,WACN,IAAKA,EAAY,MAAO,UAExB,IAAMhb,EAAM,IAAIJ,KACVqb,EAAY,IAAIrb,KAAkB,IAAbob,GAC3B,GAAIC,EAAYjb,EACZ,MAAO,qBAGX,IAAIkb,EAAO,IAAItb,KAAKI,EAAMib,GAG1B,GAAIC,EAAKC,UAAY,IAAO,GACxB,MAAO,qBAIX,GAAID,EAAKC,UAAY,IAAO,KAAS,CACjC,IAAMC,EAAUxP,KAAKC,MAAMqP,EAAKC,UAAY,IAAO,IACnD,mBAAA9oB,OAAgC,IAAZ+oB,EAAgB,WAAaA,EAAU,WAA3D,QAIJ,IAAMC,EAAQ,IAAIzb,KAElB,GADAyb,EAAMvb,SAAS,EAAG,EAAG,EAAG,GACpBmb,EAAYI,EAAO,CAEnB,GAAIH,EAAKC,UAAY,IAAO,MAAa,CACrC,IAAMG,EAAQ1P,KAAKC,MAAMqP,EAAKC,UAAY,IAAO,GAAK,IACtD,mBAAA9oB,OAA8B,IAAVipB,EAAc,SAAWA,EAAQ,SAArD,QAIJ,4BAAAjpB,OAA6B0N,IAAWkb,EAAW,SAIvD,IAAIM,EAAY,IAAI3b,KAGpB,OAFA2b,EAAUlb,QAAQL,EAAII,UAAY,GAClCib,EAAMvb,SAAS,EAAG,EAAG,EAAG,GACpBmb,EAAYM,EACZ,0BAAAlpB,OAAiC0N,IAAWkb,EAAW,SAG3D,aAAA5oB,OAAoB0N,IAAWkb,EAAW,eAE9C,IAAK,mBACD,MAAO,SAEX,IAAK,qBACD,MAAO,qBAIf,OAAO,KAGX,SAAS7Y,EAAa3W,GAClB,IAAKA,EAAM,OAAO,EADM,IAGhB1B,EAAqB0B,EAArB1B,GAAI6W,EAAiBnV,EAAjBmV,OAAQ3H,EAASxN,EAATwN,KACpB,QAAK2H,MACA3H,IACDlP,IAAOgxB,MAEgB,qBAApBna,EAAO,UAAqD,gBAAlB3H,EAAK,YAG1D,SAASoF,EAAgB5S,GACrB,IAAKA,EAAM,OAAO,KAClB,IAAKA,EAAKwN,KAAM,OAAO,KAEvB,OAAQxN,EAAKwN,KAAK,UACd,IAAK,cACL,IAAK,kBACD,GAAIxN,EAAKkS,YAAclS,EAAKib,UAAW,SAAArU,OAAU5G,EAAKkS,WAAf,KAAAtL,OAA6B5G,EAAKib,WACzE,GAAIjb,EAAKkS,WAAY,OAAOlS,EAAKkS,WACjC,GAAIlS,EAAKib,UAAW,OAAOjb,EAAKib,UAEpC,IAAK,kBACL,IAAK,kBACD,MAAO,kBAIf,OAAO,KAGX,SAASnI,EAAiBpL,GACtB,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GAC3B,IAAK1H,EAAM,OAAO,KAClB,IAAKA,EAAKwN,KAAM,OAAO,KAEvB,OAAQxN,EAAKwN,KAAK,UACd,IAAK,cACL,IAAK,kBACD,GAAIxN,EAAKkS,WAAY,OAAOlS,EAAKkS,WACjC,GAAIlS,EAAKib,UAAW,OAAOjb,EAAKib,UAEpC,IAAK,kBACL,IAAK,kBACD,MAAO,kBAIf,OAAO,KAGX,SAAS2T,EAAclnB,GACnB,IAAMoO,EAAWnL,IAAUoL,YAAYrO,GACvC,QAAIoO,GACOA,EAASia,WAMxB,SAASlB,EAAe7uB,GACpB,IAAKA,EAAM,OAAO,KAElB,IAAIsW,EAAQ1D,EAAgB5S,GACxBuW,EAAUC,YAAWF,GACzB,OAAIC,GAAWA,EAAQ3U,OAAS,EACrB2U,EAGJvW,EAAKkS,WAAalS,EAAKkS,WAAWuE,OAAO,GAAKzW,EAAKib,UAAYjb,EAAKib,UAAUxE,OAAO,GAAK,GAGrG,SAASqY,EAAmB9uB,GACxB,IAAKA,EAAM,OAAO,EAClB,IAAKA,EAAKmV,OAAQ,OAAO,EACzB,GAA2B,gBAAvBnV,EAAKwN,KAAK,SAA4B,OAAO,EAEjD,OAAQxN,EAAKmV,OAAO,UAChB,IAAK,kBACD,OAAO,EAEX,IAAK,sBACD,OAAO,GAEX,IAAK,qBACD,OAAO,IAEX,IAAK,oBACD,OAAOnV,EAAKmV,OAAOoa,WAEvB,IAAK,mBACD,OAAOvvB,EAAKmV,OAAO6a,QAEvB,IAAK,qBACD,OAAO,KAKnB,SAAShhB,EAAgBihB,GACrB,IAAKA,EAAkB,OAAO,KADS,IAG/B3xB,EAAc2xB,EAAd3xB,GAAIqD,EAAUsuB,EAAVtuB,MACZ,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMC,OAAQ,OAAO,KAE1B,IAAMsuB,EAAiBvkB,YAAQhK,EAAOwuB,KAChCC,EAAezkB,YAAQhK,EAAO0uB,KAEpC,MAAO,CACH3rB,QAAS,eACTpG,GAAIA,EACJsQ,MAAOshB,EAAe1vB,MACtBqO,IAAKuhB,EAAa5vB,OAI1B,SAASuuB,EAAwBkB,GAC7B,IAAKA,EAAkB,OAAO,KADiB,IAGvCK,EAAeL,EAAfK,WACR,IAAKA,EAAY,OAAO,KAExB,IAAMpc,EAAO,IAAIC,KAAkB,IAAbmc,GACtB,OAAOhc,IAAWJ,EAAM,iHCrJtB5Y,EAAQ,gBAxDV,SAAAqa,IAAc,IAAAna,EAAA,OAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAAga,IACVna,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAF,OAAAme,EAAA,EAAAne,CAAAka,GAAA7Z,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAOoZ,YAEhBla,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MACJ,IAAK,2BACDd,EAAK+0B,YAAYj0B,EAAOsZ,cAAetZ,EAAOk0B,sBAE9Ch1B,EAAKuB,KAAKT,EAAO,SAAUA,KApBzBd,EA2Bd8B,eAAiB,SAAAhB,KA3BHd,EA6Bd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBA/BvC9B,EAkCdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAjCpD9B,EAAKoD,MAAQ,IAAIoG,IACjBxJ,EAAKi1B,cAAgB,IAAIzrB,IAEzBxJ,EAAK+B,mBACL/B,EAAKmJ,gBAAgBC,KAPXpJ,mEAuCV8C,GACA,OAAO3C,KAAKiD,MAAMC,IAAIP,+BAGtBoX,GACA/Z,KAAKiD,MAAMhC,IAAI8Y,EAAWpX,GAAIoX,uCAGtBpX,GACR,OAAO3C,KAAK80B,cAAc5xB,IAAIP,uCAGtBA,EAAIwX,GACZna,KAAK80B,cAAc7zB,IAAI0B,EAAIwX,UArDLnO,iBA0D9BhC,OAAO+P,WAAapa,EACLA,4LC5Df,SAASo1B,EAAmBruB,GACxB,QAAKA,GAEE8d,KAAKkC,IAAIhgB,EAAU+I,MAAO/I,EAAUiJ,QAAUqlB,IAGzD,SAAS9G,EAAcvpB,GACnB,IAAKA,EAAO,OAAO,KADO,IAGlBkpB,EAAgClpB,EAAhCkpB,UAAWlT,EAAqBhW,EAArBgW,MAAOsa,EAActwB,EAAdswB,UACpBC,EAAeva,EAAQA,EAAMwa,OAAS,GACtCC,EAAmBH,EAAYA,EAAUE,OAAS,GAExD,OAAOD,GAAgBE,EAAhB,GAAAnqB,OACEmqB,GAAoB,iBADtB,YAAAnqB,OAC4CiqB,GAAgB,iBAC7DrH,EAGV,SAASwH,EAAYC,GACjB,OAAOA,EAAKlI,OAAO,SAAClZ,EAAUjT,GAAX,OAAmBiT,EAASjJ,OAAOhK,EAAIiT,WAAW,IAGzE,SAASqhB,EAA4BlwB,EAASiwB,EAAME,GAChD,IAAMprB,EAAS,GADiDqrB,EAyGpE,SAAqBpwB,EAASiwB,EAAME,GAChC,IAAME,EAAWJ,EAAK9D,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAO0C,EAAQ2pB,SACtD,IAAkB,IAAd0G,EAAiB,MAAO,EAAE,GAAI,GAElC,IAAMC,EAAeL,EAAKI,GAAUxhB,SAASsd,UAAU,SAAA9lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAO0C,EAAQA,QAAQ1C,KAC7F,IAAsB,IAAlBgzB,EAAqB,MAAO,EAAE,GAAI,GAGtC,IADA,IAAIC,EAAW,EACN7vB,EAAI,EAAGA,EAAI2vB,EAAU3vB,IAC1B6vB,GAAYpR,KAAKqR,KAAKP,EAAKvvB,GAAGmO,SAASjO,OAASuvB,GAGpD,MAAO,CAACI,EAAWpR,KAAKC,MAAMkR,EAAeH,GAAiBG,EAAeH,GAnHvDM,CAAYzwB,EAASiwB,EAAME,GAFeO,EAAAj2B,OAAAk2B,EAAA,EAAAl2B,CAAA21B,EAAA,GAEzDQ,EAFyDF,EAAA,GAEpDG,EAFoDH,EAAA,GAGhE,IAAa,IAATE,EAAY,MAAO,GACvB,IAAgB,IAAZC,EAAe,MAAO,GAE1B,IAAMC,EAAcF,EAAM,EACpBG,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBK,EAAcL,EAAM,EAEpBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EAExBO,EAAcL,EAAU,EACxBM,EAAiBP,EAAc,EACnC,IAAKM,EAAa,CACd,GAAIF,GAAc,EAAG,CACjB,IAAI/jB,EAAQmkB,EAAQP,EAASG,EAAYjB,EAAME,IAChC,IAAXhjB,IACAikB,GAAc,EAEdC,GAA4B,KAD5BlkB,EAAQkkB,GAAkB,EAAIC,EAAQR,EAAaI,EAAYjB,EAAME,MAG1D,IAAXhjB,GACApI,EAAOX,KAAK+I,GAIpB,IAAIA,EAAQikB,GAAe,EAAIE,EAAQP,EAASF,EAAQZ,EAAME,GAU9D,IATe,IAAXhjB,IACAikB,GAAc,EAEdC,GAA4B,KAD5BlkB,EAAQkkB,GAAkB,EAAIC,EAAQR,EAAaD,EAAQZ,EAAME,MAGtD,IAAXhjB,GACApI,EAAOX,KAAK+I,GAGZgkB,EAAahB,EAAgB,CAC7B,IAAIhjB,EAAQikB,GAAe,EAAIE,EAAQP,EAASI,EAAYlB,EAAME,IACnD,IAAXhjB,IACAA,EAAQkkB,GAAkB,EAAIC,EAAQR,EAAaK,EAAYlB,EAAME,KAE1D,IAAXhjB,GACApI,EAAOX,KAAK+I,IAKxB,GAAI+jB,GAAc,EAAG,CACjB,IAAM/jB,EAAQmkB,EAAQV,EAAKM,EAAYjB,EAAME,IAC9B,IAAXhjB,GACApI,EAAOX,KAAK+I,GAIpB,GAAIgkB,EAAahB,EAAgB,CAC7B,IAAMhjB,EAAQmkB,EAAQV,EAAKO,EAAYlB,EAAME,IAC9B,IAAXhjB,GACApI,EAAOX,KAAK+I,GAIpB,IAAIokB,EAAYtB,EAAKlI,OAAO,SAACwJ,EAAW31B,GAAZ,OAAoB21B,EAAYpS,KAAKqR,KAAK50B,EAAIiT,SAASjO,OAASuvB,IAAiB,GACzGqB,EAAcR,GAAWO,EACzBE,EAAkBT,GAAWO,EACjC,IAAKC,EAAa,CACd,GAAIN,GAAc,EAAG,CACjB,IAAI/jB,EAAQmkB,EAAQN,EAASE,EAAYjB,EAAME,IAChC,IAAXhjB,IACAqkB,GAAc,EAEdC,GAA6B,KAD7BtkB,EAAQskB,GAAmB,EAAIH,EAAQL,EAAaC,EAAYjB,EAAME,MAG3D,IAAXhjB,GACApI,EAAOX,KAAK+I,GAIpB,IAAIA,EAAQqkB,GAAe,EAAIF,EAAQN,EAASH,EAAQZ,EAAME,GAU9D,IATe,IAAXhjB,IACAqkB,GAAc,EAEdC,GAA6B,KAD7BtkB,EAAQskB,GAAmB,EAAIH,EAAQL,EAAaJ,EAAQZ,EAAME,MAGvD,IAAXhjB,GACApI,EAAOX,KAAK+I,GAGZgkB,EAAahB,EAAgB,CAC7B,IAAIhjB,EAAQqkB,GAAe,EAAIF,EAAQN,EAASG,EAAYlB,EAAME,IACnD,IAAXhjB,IACAA,EAAQskB,GAAmB,EAAIH,EAAQL,EAAaE,EAAYlB,EAAME,KAE3D,IAAXhjB,GACApI,EAAOX,KAAK+I,IAKxB,IAAMvP,EAAQoyB,EAAYC,GAC1B,OAAOlrB,EAAOqD,IAAI,SAAA/B,GAAC,OAAIzI,EAAMyI,KAkBjC,SAASirB,EAAQV,EAAKC,EAAQZ,EAAME,GAIhC,IAHA,IAAIhjB,GAAS,EACTokB,EAAY,EACZlB,GAAY,EACP3vB,EAAI,EAAGA,EAAIuvB,EAAKrvB,OAAQF,IAAK,CAGlC,IADA6wB,GADcpS,KAAKqR,KAAKP,EAAKvvB,GAAGmO,SAASjO,OAASuvB,IAElCS,EAAK,CACjBP,EAAW3vB,EACX,OAGR,IAAkB,IAAd2vB,EAAiB,OAAOljB,EAI5B,IAFA,IAAIukB,EAASd,EACTe,EAAYd,EACPnwB,EAAI,EAAGA,EAAI2vB,EAAU3vB,IAAK,CAE/BgxB,GADcvS,KAAKqR,KAAKP,EAAKvvB,GAAGmO,SAASjO,OAASuvB,GAMtD,IAFAhjB,EAAQgjB,EAAiBuB,EAASC,IAErB1B,EAAKI,GAAUxhB,SAASjO,OAAQ,OAAQ,EAErD,IAAK,IAAIF,EAAI,EAAGA,EAAI2vB,EAAU3vB,IAC1ByM,GAAS8iB,EAAKvvB,GAAGmO,SAASjO,OAG9B,OAAOuM,4JCrKLykB,UAAc,CAAEC,OAAQ,yBAExBC,cACF,SAAAA,EAAY/X,GAAO,IAAAvf,EAAAC,OAAAs3B,EAAA,EAAAt3B,CAAAE,KAAAm3B,IACft3B,EAAAC,OAAAqwB,EAAA,EAAArwB,CAAAE,KAAAF,OAAAswB,EAAA,EAAAtwB,CAAAq3B,GAAAh3B,KAAAH,KAAMof,KA8EVje,aAAe,SAAAR,GACX,IAAM02B,EAAcx3B,EAAKmkB,MAAM9iB,KACzBo2B,EAAW32B,EAAOO,KAEpBm2B,GAAeA,EAAY10B,KAAO20B,EAAS30B,IAC3C9C,EAAKykB,SAAS,CAAEpjB,KAAMo2B,EAAUC,SAAUF,KApF/Bx3B,EAwFnB23B,cAAgB,SAACt2B,EAAMq2B,GACnB,IAAK13B,EAAKuf,MAAMpS,SAAU,OAAO,EAEjC,IAAMyqB,EAAYF,GAAYA,EAAS10B,OAAS00B,EAAS10B,MAAM2R,sBACzDkjB,EAAWx2B,GAAQA,EAAK2B,OAAS3B,EAAK2B,MAAM2R,sBAElD,OAAOijB,GAAaC,GA9FL73B,EAiGnB83B,YAAc,SAACz2B,EAAMq2B,GACjB,IAAK13B,EAAKuf,MAAMwY,OAAQ,OAAO,EAE/B,IAAMH,EAAYF,GAAYA,EAAS1zB,QAAU0zB,EAAS1zB,OAAO8Q,oBAC3D+iB,EAAWx2B,GAAQA,EAAK2C,QAAU3C,EAAK2C,OAAO8Q,oBAEpD,OAAO8iB,GAAaC,GAvGL73B,EA0GnBg4B,kBAAoB,SAAC32B,EAAMq2B,GAAa,IAC5B10B,EAAkB3B,EAAlB2B,MAAOgB,EAAW3C,EAAX2C,OAEX4zB,GAAY,EACZC,GAAW,EACXI,GAAc,EACdC,EAAe,EACf7rB,EAAO,EAqCX,OApCIrM,EAAK23B,cAAct2B,EAAMq2B,IACzBE,EAAYF,GAAYA,EAAS10B,OAAS00B,EAAS10B,MAAM2R,sBACzDkjB,EAAW70B,EAAM2R,sBACjBsjB,EAAcj1B,EAAMG,yBACpB+0B,EAAel1B,EAAM4R,gBACrBvI,EAAOhL,EAAKgL,MAQLrM,EAAK83B,YAAYz2B,EAAMq2B,KAC9BE,EAAYF,GAAYA,EAAS1zB,QAAU0zB,EAAS1zB,OAAO8Q,oBAC3D+iB,EAAW7zB,EAAO8Q,oBAClBmjB,EAAcj0B,EAAOE,uBACrBg0B,EAAel0B,EAAO+Q,cACtB1I,EAAOhL,EAAKgL,MAkBT,CAACurB,EAAWC,EAAUI,EAAaC,EAAc7rB,IAnJxDrM,EAAKm4B,mBAAoB,EAHV,IAIP92B,EAASrB,EAAKuf,MAAdle,KAJO,OAKfrB,EAAKmkB,MAAQ,CACTiU,cAAe/2B,EACfq2B,SAAU,KACVr2B,KAAMtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GARrBrB,qFA2BG8kB,EAAWC,GAAW,IAAAzF,EACSnf,KAAKof,MAA9CpS,EADgCmS,EAChCnS,SAAU4qB,EADsBzY,EACtByY,OAAQhV,EADczD,EACdyD,KAAMsV,EADQ/Y,EACR+Y,aAEhC,GAAIvT,EAAUuT,eAAiBA,EAC3B,OAAO,EAGX,GAAIvT,EAAU/B,OAASA,EACnB,OAAO,EAGX,GAAI5iB,KAAKw3B,cAAc5S,EAAU1jB,KAAM0jB,EAAU2S,YAAcvqB,EAC3D,OAAO,EAGX,GAAIhN,KAAK23B,YAAY/S,EAAU1jB,KAAM0jB,EAAU2S,YAAcK,EACzD,OAAO,EAGX,IAAMO,EAAYvT,EAAU1jB,KAAO0jB,EAAU1jB,KAAK2B,MAAQ,KACpDu1B,EAAaxT,EAAU1jB,KAAO0jB,EAAU1jB,KAAK0B,QAAU,KACvDy1B,EAAYr4B,KAAKgkB,MAAMuT,SAAWv3B,KAAKgkB,MAAMuT,SAAS10B,MAAQ,KAC9Dy1B,EAAat4B,KAAKgkB,MAAMuT,SAAWv3B,KAAKgkB,MAAMuT,SAAS30B,QAAU,KACjE21B,EACFF,GAAaF,IAAcE,EAAUr1B,0BAA4Bm1B,EAAUn1B,yBACzEw1B,EAAgBJ,IAAeE,EAErC,OAAI1T,EAAU1jB,KAAKyB,KAAO3C,KAAKgkB,MAAM9iB,KAAKyB,KAAM41B,IAA0BC,KAItE5T,EAAU1jB,OAASlB,KAAKgkB,MAAM9iB,MAI9B0jB,EAAU2S,WAAav3B,KAAKgkB,MAAMuT,sDAQtCv3B,KAAKy4B,OAAQ,EACb74B,IAAU0hB,GAAG,aAActhB,KAAKmB,6DAIhCnB,KAAKy4B,OAAQ,EACb74B,IAAUoC,eAAe,aAAchC,KAAKmB,+CA6EvC,IAAAsJ,EAAAzK,KAAAsgB,EAC4DtgB,KAAKof,MAAhE8Y,EADD5X,EACC4X,aAAcQ,EADfpY,EACeoY,aAAcC,EAD7BrY,EAC6BqY,OAAQ/V,EADrCtC,EACqCsC,KAAMgW,EAD3CtY,EAC2CsY,aAD3C7U,EAEsB/jB,KAAKgkB,MAAxB9iB,EAFH6iB,EAEG7iB,KAAMq2B,EAFTxT,EAESwT,SACd,IAAKr2B,EAAM,OAAO,KAHb,IAAA23B,EAK0D74B,KAAK63B,kBAAkB32B,EAAMq2B,GALvFuB,EAAAh5B,OAAAk2B,EAAA,EAAAl2B,CAAA+4B,EAAA,GAKEpB,EALFqB,EAAA,GAKapB,EALboB,EAAA,GAKuBhB,EALvBgB,EAAA,GAKoCf,EALpCe,EAAA,GAKkD5sB,EALlD4sB,EAAA,GAODC,EAAarB,EACbsB,EAAW,EACXtB,IACAsB,EAAWjB,GAAgB7rB,EAAO,KAAQA,EAAO6rB,GAAgB7rB,EAAQ,IAAM,GAGpDurB,IAAcC,IAEzC13B,KAAKg4B,mBAAoB,EAEzBgB,EAAWlB,EAAc,IAAM,EAC/BiB,GAAa,EACbE,WAAW,WACPxuB,EAAKutB,mBAAoB,EACpBvtB,EAAKguB,OAGVhuB,EAAK6Z,SAAS,CAAEiT,SAAU,QAC3B2B,MAGP,IAAMtsB,EAAQ,CACV+rB,OAAQA,EACRQ,WAAajB,GAAwC,qBAAjBA,EAAsC,sBAAP,MAuBvE,OAnBIh3B,GACAA,EAAK2B,QACJ3B,EAAK2B,MAAMG,0BAA4B9B,EAAK0B,SAAW1B,EAAK2B,MAAMkB,0BAClE/D,KAAKg4B,oBACLN,EAiBGkB,EAEIQ,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgB/S,MAAOA,GAClCwsB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,sBAAsBiZ,IAK1C,KAGPG,GAAc/4B,KAAKg4B,kBAGfoB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgB/S,MAAOA,GAClCwsB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,2BACXyZ,EAAA54B,EAAAmM,cAAC0sB,EAAA74B,EAAD,CACI+f,QAAS0W,EACTxQ,QAAQ,SACRjR,MAAOwjB,EACP9sB,KAAM,GACN4W,UAAW,KAGlB4V,GACGU,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,sBACXyZ,EAAA54B,EAAAmM,cAAC2sB,EAAA94B,EAAD,QAOhBoiB,EAGIwW,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgB/S,MAAOA,GAClCwsB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,sBAAsBiD,IAK1C,wDA9OqBxD,EAAO4E,GAAO,IAClC9iB,EAASke,EAATle,KACA+2B,EAAkBjU,EAAlBiU,cAER,OAAI/2B,GAAQ+2B,GAAiB/2B,EAAKyB,KAAOs1B,EAAct1B,GAC5C,CACHs1B,cAAe/2B,EACfq2B,SAAU,KACVr2B,KAAMtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GAIjC,YAzBY4e,IAAMC,WA2QjCoX,EAAatW,aAAe,CACxB6X,cAAc,EACd1rB,UAAU,EACV4qB,QAAQ,GAGGT,sKCjRT/K,qNAWFmN,0BAA4B,SAAA54B,GAAU,IAC1B0E,EAAYxF,EAAKuf,MAAM/Z,QAAvBA,QACA2C,EAAWrH,EAAXqH,OAEH3C,GAEDA,EAAQ1C,KAAOqF,GACfnI,EAAKwhB,iBAIbmY,mCAAqC,SAAA74B,GAAU,IACnC+F,EAAc7G,EAAKuf,MAAM/Z,QAAzBqB,UACR,GAAKA,EAAL,CAF2C,IAInCsB,EAAWrH,EAAXqH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1CnI,EAAKwhB,mGA3BTzhB,IAAU0hB,GAAG,mCAAoCthB,KAAKw5B,oCACtD55B,IAAU0hB,GAAG,0BAA2BthB,KAAKu5B,0EAI7C35B,IAAUoC,eAAe,mCAAoChC,KAAKw5B,oCAClE55B,IAAUoC,eAAe,0BAA2BhC,KAAKu5B,4DAyBpD,IAAApa,EACgFnf,KAAKof,MAAlFO,EADHR,EACGQ,UAAWM,EADdd,EACcc,YAAawZ,EAD3Bta,EAC2Bsa,KAAetzB,EAD1CgZ,EACiC9Z,QAAiBuH,EADlDuS,EACkDvS,MAAOyS,EADzDF,EACyDE,UAAWqa,EADpEva,EACoEua,QACjEhzB,EAAsCP,EAAtCO,UAAWrB,EAA2Bc,EAA3Bd,QAASoK,EAAkBtJ,EAAlBsJ,MAAOE,EAAWxJ,EAAXwJ,OAE7BuoB,EAAe5jB,YAAO5N,EAAYA,EAAU7B,MAAQ,MACpD0c,EAAMjN,YAAOjP,GACbs0B,EAAY5E,YAAmBruB,GAE/BkzB,EAAUxZ,YAAW,CAAE3Q,MAAOA,EAAOE,OAAQA,GAAUsQ,GAC7D,IAAK2Z,EAAS,OAAO,KAErB,IAAMC,EAAY/5B,OAAAg6B,EAAA,EAAAh6B,CAAA,CACd2P,MAAOmqB,EAAQnqB,MACfE,OAAQiqB,EAAQjqB,QACb/C,GAGP,OACIwsB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,UAAWf,GAAY/S,MAAOitB,EAAcha,QAASR,GAC3EkC,IAAQmY,EACLN,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgBgC,WAAW,EAAOJ,IAAKA,EAAKK,IAAI,KAE/DwX,EAAA54B,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,gBAAiB,CAAEqZ,gBAAiBJ,GAAaF,IACvE9X,WAAW,EACXJ,IAAK2W,EACLtW,IAAI,aA3DN9B,IAAMC,YA4E5BqM,EAAQvL,aAAe,CACnB5Z,OAAQ,EACRC,UAAW,EACXmY,UAAW,aACXoa,MAAM,EACNxZ,YAAa+Z,KAGF5N,iGCjCTzsB,EAAQ,gBAzDV,SAAA2Z,IAAc,IAAAzZ,EAAA,OAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAAsZ,IACVzZ,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAF,OAAAme,EAAA,EAAAne,CAAAwZ,GAAAnZ,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,mBACDd,EAAKoB,IAAIN,EAAOs5B,aAEhBp6B,EAAKuB,KAAKT,EAAO,SAAUA,GAC3B,MAEJ,IAAK,2BACDd,EAAK+0B,YAAYj0B,EAAO4Y,eAAgB5Y,EAAOu5B,uBAE/Cr6B,EAAKuB,KAAKT,EAAO,SAAUA,KArBzBd,EA4Bd8B,eAAiB,SAAAhB,KA5BHd,EA8Bd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAhCvC9B,EAmCdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBAlCpD9B,EAAKoD,MAAQ,IAAIoG,IACjBxJ,EAAKi1B,cAAgB,IAAIzrB,IAEzBxJ,EAAK+B,mBACL/B,EAAKmJ,gBAAgBC,KAPXpJ,mEAwCVs6B,GACA,OAAOn6B,KAAKiD,MAAMC,IAAIi3B,+BAGtBC,GACAp6B,KAAKiD,MAAMhC,IAAIm5B,EAAMz3B,GAAIy3B,uCAGjBz3B,GACR,OAAO3C,KAAK80B,cAAc5xB,IAAIP,uCAGtBA,EAAIwX,GACZna,KAAK80B,cAAc7zB,IAAI0B,EAAIwX,UAtDLnO,iBA2D9BhC,OAAOqwB,WAAa16B,EACLA,uKCrDTigB,qNAuBF0a,uBAAyB,SAAA35B,GACFd,EAAKuf,MAAhBrT,SAEOpL,EAAOoL,QAClBlM,EAAKwhB,iBAIbkZ,uBAAyB,SAAA55B,GAAU,IACvBoL,EAAWlM,EAAKuf,MAAhBrT,OAEF/H,EAAO6O,IAAU3P,IAAIvC,EAAOsG,QAClC,GAAKjD,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACG7N,EAAK6N,KAAK9C,UAAYhD,GAEtBlM,EAAKwhB,kBAMrBmZ,kBAAoB,SAAA75B,GAAU,IAClBoL,EAAWlM,EAAKuf,MAAhBrT,OAEF/H,EAAO6O,IAAU3P,IAAIvC,EAAO0F,SAClC,GAAKrC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACD,GAAI7N,EAAK6N,KAAK9C,UAAYhD,EACtB,GAAKpL,EAAOkE,MAGL,CACH,IAAMlF,EAAQC,IAAUwD,WACxBuQ,YAAgBhU,EAAOqE,QAHvBnE,EAAKwhB,kBAUzBoZ,kBAAoB,SAAA95B,GAAU,IAClBoL,EAAWlM,EAAKuf,MAAhBrT,OAEF/H,EAAO6O,IAAU3P,IAAIvC,EAAO0F,SAClC,GAAKrC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACL,IAAK,qBACD,OAEJ,IAAK,kBACL,IAAK,iBACG7N,EAAK6N,KAAK9C,UAAYhD,GAAW/H,EAAKa,OAEtChF,EAAKwhB,kBAMrBqZ,aAAe,SAAApvB,GAAS,IAAA6T,EACStf,EAAKuf,MAA1BrT,EADYoT,EACZpT,OAAQ4uB,EADIxb,EACJwb,SACXA,IAELrvB,EAAMma,kBACNkV,EAAS5uB,0FA1GS4Y,EAAWC,GAC7B,OAAID,EAAU5Y,SAAW/L,KAAKof,MAAMrT,mDAQpCnM,IAAU0hB,GAAG,uBAAwBthB,KAAKs6B,wBAC1C16B,IAAU0hB,GAAG,uBAAwBthB,KAAKu6B,wBAC1C1nB,IAAUyO,GAAG,kBAAmBthB,KAAKw6B,mBACrC3nB,IAAUyO,GAAG,kBAAmBthB,KAAKy6B,kEAIrC76B,IAAUoC,eAAe,uBAAwBhC,KAAKs6B,wBACtD16B,IAAUoC,eAAe,uBAAwBhC,KAAKu6B,wBACtD1nB,IAAU7Q,eAAe,kBAAmBhC,KAAKw6B,mBACjD3nB,IAAU7Q,eAAe,kBAAmBhC,KAAKy6B,oDA0F5C,IAAAna,EACwBtgB,KAAKof,MAA1BrT,EADHuU,EACGvU,OAAQ4uB,EADXra,EACWqa,SACVt2B,EAASrE,KAAKof,MAAd/a,KACN,IAAK0H,IAAW1H,EAAM,OAAO,KAG7B,KADAA,EAAO2K,IAAU9L,IAAI6I,IAAW1H,GACrB,OAAO,KANb,IAQGmP,EAAkBnP,EAAlBmP,cAEFoH,EAAUsY,YAAe7uB,GACzB+D,EAAOoL,GAAiBA,EAAcP,MAAQrT,IAAUqI,QAAQuL,EAAcP,MAAMtQ,IAAM,KAC1F4e,EAAM3hB,IAAU4I,WAAWJ,GAC3BwyB,EAAS,cAAA3vB,OAAkBuZ,KAAKqW,IAAI9uB,GAAU,EAAK,GACnD4T,EAAYe,IAAW,aAAD5gB,OAAAg7B,EAAA,EAAAh7B,CAAA,GAAkB86B,GAAaxyB,GAAQ,CAAE2yB,QAASJ,IAE9E,OAAOpZ,EACH6X,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAWA,EAAW4B,IAAKA,EAAKI,WAAW,EAAOC,IAAI,GAAG/B,QAAS7f,KAAK06B,eAE5EtB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAWA,EAAWE,QAAS7f,KAAK06B,cACrCtB,EAAA54B,EAAAmM,cAAA,QAAMgT,UAAU,aAAa/E,WAlIfmF,cA8IfH,0FCpETjgB,EAAQ,gBAjFV,SAAAq7B,IAAc,IAAAn7B,EAAA,OAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAAg7B,IACVn7B,EAAAC,OAAAm7B,EAAA,EAAAn7B,CAAAE,KAAAF,OAAAo7B,EAAA,EAAAp7B,CAAAk7B,GAAA76B,KAAAH,QASJI,SAAW,SAAAO,GACP,OAAQA,EAAO,UACX,IAAK,6BAA8B,IACvBw6B,EAAoBx6B,EAApBw6B,gBACR,GAAIt7B,EAAKmU,WAAY,KAAAonB,EACYv7B,EAAKmU,WAA1BrR,EADSy4B,EACTz4B,GAAI04B,EADKD,EACLC,aACRA,IAAiBF,EAAgB1vB,KAAK,SAAAC,GAAC,OAAIA,IAAM/I,MACjD9C,EAAKmU,WAAalU,OAAOw7B,OAAO,GAAIz7B,EAAKmU,WAAY,CAAEqnB,cAAeA,KAI9Ex7B,EAAKuB,KAAK,6BAA8BT,KArBtCd,EA6Bd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,0BACDd,EAAKuB,KAAK,0BAA2BT,GACrC,MAEJ,IAAK,gCAAiC,IAC1B46B,EAAS56B,EAAT46B,KAER17B,EAAK07B,KAAOA,EAEZ17B,EAAKuB,KAAK,gCAAiCT,GAC3C,MAEJ,IAAK,iCAAkC,IAC3B46B,EAAS56B,EAAT46B,KAEJ17B,EAAK07B,MAAQ17B,EAAK07B,KAAKlK,YAAckK,EAAKlK,YAC1CxxB,EAAK07B,KAAOz7B,OAAOw7B,OAAO,GAAIz7B,EAAK07B,KAAM,CAAEC,cAAeD,EAAKrnB,YAGnErU,EAAKuB,KAAK,iCAAkCT,GAC5C,MAEJ,IAAK,yBAA0B,IACnBqT,EAAerT,EAAfqT,WAERnU,EAAKmU,WAAaA,EAElBnU,EAAKuB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,iCACDd,EAAKuB,KAAK,iCAAkCT,KA9D1Cd,EAsEd+B,iBAAmB,WACfC,IAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,IAAgBC,YAAY,eAAgBjC,EAAK8B,iBAxEvC9B,EA2EdkC,oBAAsB,WAClBF,IAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,IAAgBG,eAAe,eAAgBnC,EAAK8B,iBA1EpD9B,EAAKmU,WAAa,KAClBnU,EAAK07B,KAAO,KAEZ17B,EAAK+B,mBACL/B,EAAKmJ,gBAAgBC,KAPXpJ,6BADSmM,iBAmF3BhC,OAAO3E,QAAU1F,EACFA,+KC3ET0gB,sBACF,SAAAA,EAAYjB,GAAO,IAAAvf,EAAAC,OAAAs3B,EAAA,EAAAt3B,CAAAE,KAAAqgB,IACfxgB,EAAAC,OAAAqwB,EAAA,EAAArwB,CAAAE,KAAAF,OAAAswB,EAAA,EAAAtwB,CAAAugB,GAAAlgB,KAAAH,KAAMof,KAoBVqc,wBAA0B,SAAA96B,GAAU,IACxBuF,EAAcrG,EAAKmkB,MAAnB9d,UACA8B,EAAWrH,EAAXqH,OAEH9B,GAEDA,EAAUrB,MAAMlC,KAAOqF,GACvBnI,EAAKwhB,eA5BM,IAGPxc,EAA+Bua,EAA/Bva,MAAOqH,EAAwBkT,EAAxBlT,KAAMwvB,EAAkBtc,EAAlBsc,cACfx1B,EAAY8J,YAAQnL,EAAMmB,MAAOkG,GACjCxF,EAAYsJ,YAAQnL,EAAMmB,MAAO01B,GALxB,OAOf77B,EAAKmkB,MAAQ,CACT9d,UAAWA,EACXQ,UAAWA,GATA7G,mFAcfD,IAAU0hB,GAAG,wBAAyBthB,KAAKy7B,wEAI3C77B,IAAUoC,eAAe,wBAAyBhC,KAAKy7B,0DAclD,IAAAtc,EACmDnf,KAAKof,MAArDa,EADHd,EACGc,YAAaZ,EADhBF,EACgBE,UAAWsc,EAD3Bxc,EAC2Bwc,aAAc/uB,EADzCuS,EACyCvS,MADzCmX,EAE4B/jB,KAAKgkB,MAA9Btd,EAFHqd,EAEGrd,UAAWR,EAFd6d,EAEc7d,UAEnB,IAAKA,EAAW,OAAO,KAEvB,IAAMqb,EAAMjN,YAAOpO,EAAUrB,OACvBqzB,EAAe5jB,YAAO5N,EAAYA,EAAU7B,MAAQ,MACpD80B,EAAY5E,YAAmBruB,GAE/ByZ,EAAeC,YAAWla,EAAW+Z,GAC3C,IAAKE,EAAc,OAAO,KAE1B,IAAMyb,EAAU97B,OAAAg6B,EAAA,EAAAh6B,CAAA,CACZ2P,MAAO0Q,EAAa1Q,MACpBE,OAAQwQ,EAAaxQ,QAClB/C,GAGP,OACIwsB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,QAAQ/S,MAAOgvB,EAAY/b,QAASR,GAC9CkC,EACG6X,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,cAAcgC,WAAW,EAAOJ,IAAKA,EAAKK,IAAI,KAE7DwX,EAAA54B,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,cAAe,CAAEqZ,gBAAiBJ,IACxDhY,WAAW,EACXJ,IAAK2W,EACLtW,IAAI,KAGX+Z,GAAgBvC,EAAA54B,EAAAmM,cAACkvB,EAAA,EAAD,CAAc36B,KAAMgF,EAAUrB,MAAOmI,UAAQ,EAAC4qB,QAAM,EAACc,cAAY,YAhE9E5Y,IAAMC,YAmF1BM,EAAMQ,aAAe,CACjB3U,KAAMgG,IACNwpB,cAAeI,IACf7b,YAAaa,IACb6a,cAAc,GAGHtb,sKC1FT0b,qNACFrB,aAAe,SAAApvB,GAAS,IAAA6T,EAC2Btf,EAAKuf,MAA5CnY,EADYkY,EACZlY,OAAQ8E,EADIoT,EACJpT,OAAQujB,EADJnQ,EACImQ,SAAUsD,EADdzT,EACcyT,SAElC,OAAItD,GAAYvjB,GACZT,EAAMma,uBAENuW,YAAgBjwB,GAAQ,IAIxB6mB,GAAY3rB,GACZqE,EAAMma,uBAENwW,YAAgBh1B,EAAQ,MAAM,SAHlC,2EAQK,IAAAqZ,EAC6CtgB,KAAKof,MAA/C7H,EADH+I,EACG/I,EAAGtQ,EADNqZ,EACMrZ,OAAQ8E,EADduU,EACcvU,OAAQujB,EADtBhP,EACsBgP,SAAUsD,EADhCtS,EACgCsS,SAE/BvuB,EAAO2K,IAAU9L,IAAI6I,GAC3B,GAAI1H,EAAM,CACN,IAAMu2B,EAAYnf,YAAcxU,GAC1B,uBADY,cAAAgE,OAEGuZ,KAAKqW,IAAI9uB,GAAU,EAAK,GACvC4T,EAAYe,IAAW,CAACka,GAAY,kBAEpCrb,EAAWtI,YAAgB5S,GAEjC,OAAOirB,EACH4M,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAWA,GACZuc,EAAA17B,EAAAmM,cAAA,KAAGkT,QAAS7f,KAAK06B,cAAenb,IAGpC2c,EAAA17B,EAAAmM,cAAAuvB,EAAA17B,EAAA2kB,SAAA,KAAG5F,GAKX,GADa1M,IAAU3P,IAAI+D,GACjB,CACN,IAAM0Y,EAAYe,IAAW,uBAAwB,kBAE/CnB,EAAWzD,YAAa7U,GAAQ,EAAOsQ,GAE7C,OAAOqb,EACHsJ,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAWA,GACZuc,EAAA17B,EAAAmM,cAAA,KAAGkT,QAAS7f,KAAK06B,cAAenb,IAGpC2c,EAAA17B,EAAAmM,cAAAuvB,EAAA17B,EAAA2kB,SAAA,KAAG5F,GAIX,OAAO,YAvDaO,IAAMC,YAkElCgc,EAAclb,aAAe,CACzByO,UAAU,EACVsD,UAAU,GAGCxL,kBAAkB2U,gFCGlBI,EADA,eAlFX,SAAAC,IAAct8B,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAo8B,GACVp8B,KAAKq8B,KAAO,IAAIhzB,IAAI,CAChB,CAAC,MAAO,iiBACR,CAAC,MAAO,2DAIZ8yB,GACA,OAAOn8B,KAAKq8B,KAAKn5B,IAAIi5B,+BAGrBA,EAAUG,GACVt8B,KAAKq8B,KAAKp7B,IAAIk7B,EAAUG,kCAGrBH,GACH,MAAiB,QAAbA,EACO,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOI,SAASJ,GACpD,EAEP,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAOI,SAASJ,GAC/I,EAEM,QAAbA,EACO,EAGJ,oCAGDK,EAAaL,GACnB,IAAMM,GAAUD,EAAYhY,KAAKkY,IAAI,GAAM18B,KAAK28B,OAAOR,KAAYhwB,QAAQ,GAC3E,SAAAlB,OAAUwxB,EAAV,KAAAxxB,OAAoBjL,KAAKkD,IAAIi5B,0HCxErC,IAAIS,EAAa,IAAIvzB,IAwBrB,SAAS2N,EAAiBzS,GACtB,QAAKA,MACAA,EAAQC,UAENo4B,EAAW75B,IAAIwB,EAAQC,QAAQ,WAAaD,EAAQgpB,IAAM,IAwFrE,SAASC,EAAyBjpB,GAA2B,IAAlB+qB,EAAkB5tB,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GACzD,IAAK6C,EAAS,OAAO,KACrB,IAAKA,EAAQC,QAAS,OAAO,KAE7B,IAAMq4B,EAAat4B,EAAQ6M,iBAAmBpC,IAAU+M,UAClD/X,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAC7By2B,EAAmC,uBAAvB94B,EAAK6N,KAAK,UAAqC7N,EAAK6N,KAAKqI,WAEnEqT,EAAiChpB,EAAjCgpB,IAAKnc,EAA4B7M,EAA5B6M,eAAgB5M,EAAYD,EAAZC,QAC7B,GAAI+oB,EAAM,EACN,OAAQ/oB,EAAQ,UACZ,IAAK,eACD,OAAIq4B,EACO,mEAIPnd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,iEAIb,IAAK,eACD,OAAIuN,EACO,mEAIPnd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,iEAIb,QACI,OAAIuN,EACO,qEAIPnd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,mEAOrB,OAAQ9qB,EAAQ,UACZ,IAAK,8BAA+B,IACxBmW,EAAU9H,IAAU3P,IAAIqB,EAAQ8B,SAAhCsU,MAER,OAAIkiB,EACA,yBAAA5xB,OAA6B0P,EAA7B,QAIA+E,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IADrD,sBAAArkB,OAEwB0P,EAFxB,SAMR,IAAK,wBACD,IAAMuB,EAAU1X,EAAQu4B,gBACnBtvB,IAAI,SAAA/B,GAAC,OAAIgU,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAevkB,IAAK9L,EAAGK,OAAQL,EAAG4jB,SAAUA,MACrDlC,OAAO,SAACC,EAAaC,EAAS9a,EAAOwqB,GAClC,IAAMC,EAAYzqB,IAAUwqB,EAAM/2B,OAAS,EAAI,QAAU,KACzD,OAAuB,OAAhBonB,EAAuB,CAACC,GAAxB,GAAAriB,OAAAnL,OAAAqpB,EAAA,EAAArpB,CAAuCutB,GAAvC,CAAoD4P,EAAW3P,KACvE,MAEP,OAAIuP,EAC0C,IAAnCr4B,EAAQu4B,gBAAgB92B,QAAgBzB,EAAQu4B,gBAAgB,KAAO/tB,IAAU+M,UACpF,uBAEA2D,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACK,aACAjJ,GAK6B,IAAnC1X,EAAQu4B,gBAAgB92B,QAAgBzB,EAAQu4B,gBAAgB,KAAOx4B,EAAQ6M,eAClFsO,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,qBAGL5P,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,UACApT,GAIb,IAAK,yBACD,OAAI4gB,EACO,wBAGPD,EACO,0BAIPnd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IADrD,wBAMR,IAAK,yBAA0B,IACnB3U,EAAUnW,EAAVmW,MAER,OAAImiB,EACA,mCAAA7xB,OAAuC0P,EAAvC,QAGAkiB,EACA,iCAAA5xB,OAAqC0P,EAArC,QAIA+E,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IADrD,8BAAArkB,OAEgC0P,EAFhC,SAMR,IAAK,0BACD,OAAIkiB,EACOr4B,EAAQuK,UAAYC,IAAU+M,UACjC,qBAEA2D,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACK,eACDzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQvH,EAAQuK,QAASugB,SAAUA,KAKvD9qB,EAAQuK,UAAYqC,EACvBsO,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,mBAGL5P,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,YACD5P,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQvH,EAAQuK,QAASugB,SAAUA,KAI9D,IAAK,yBACD,OAAIwN,EACO,wBAGPD,EACO,0BAIPnd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,wBAIb,IAAK,wBACD,OAAIuN,EACO,uCAIPnd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,qCAIb,IAAK,oBAAqB,IACd/B,EAAQ/oB,EAAR+oB,IACF2P,EA/QlB,SAAsB3P,GAClB,GAAIA,EAAM,GAAI,CACV,IAAM4P,EAAkB,IAAR5P,EAAY,SAAW,UACvC,SAAAtiB,OAAUsiB,EAAV,KAAAtiB,OAAiBkyB,GAErB,GAAI5P,EAAM,KAAS,CACf,IAAMyG,EAAmC,IAAzBxP,KAAKC,MAAM8I,EAAM,IAAY,SAAW,UACxD,SAAAtiB,OAAUsiB,EAAV,KAAAtiB,OAAiB+oB,GAErB,GAAIzG,EAAM,MAAc,CACpB,IAAM2G,EAAsC,IAA9B1P,KAAKC,MAAM8I,EAAM,GAAK,IAAY,OAAS,QACzD,SAAAtiB,OAAUsiB,EAAV,KAAAtiB,OAAiBipB,GAErB,GAAI3G,EAAM,OAAkB,CACxB,IAAM6P,EAA0C,IAAnC5Y,KAAKC,MAAM8I,EAAM,GAAK,GAAK,IAAY,MAAQ,OAC5D,SAAAtiB,OAAUsiB,EAAV,KAAAtiB,OAAiBmyB,GAErB,OAAY,SAAR7P,EACO,SAGX,GAAAtiB,OAAUsiB,EAAV,YA0P0B8P,CAAa9P,GAE/B,OAAIA,GAAO,EACHsP,EACO,uCAIPnd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,qCAKTuN,EACA,sCAAA5xB,OAA6CiyB,GAI7Cxd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IADrD,mCAAArkB,OAEwCiyB,IAIhD,IAAK,yBACD,MAAO,yCAEX,IAAK,uBACD,MAAO,iCAEX,IAAK,2BACD,OACIxd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,yBAIb,IAAK,6BACD,OAAO9qB,EAAQiZ,KAEnB,IAAK,mBACD,IAAM6f,EAAc5vB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQ+4B,iBAC9D,GACID,GACAA,EAAY94B,SACqB,gBAAjC84B,EAAY94B,QAAQ,UACpB84B,EAAY94B,QAAQS,KACtB,KACUA,EAASq4B,EAAY94B,QAArBS,KAER,OAAI43B,EACA,cAAA5xB,OAAqBzG,EAAQg5B,MAA7B,YAAAvyB,OAA0ChG,EAAK0V,MAA/C,QAIA+E,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQuxB,EAAYlsB,eAAgBke,SAAUA,IADjE,WAAArkB,OAEgBzG,EAAQg5B,MAFxB,YAAAvyB,OAEqChG,EAAK0V,MAF1C,SAOR,OAAIkiB,EACA,cAAA5xB,OAAqBzG,EAAQg5B,OAI7B9d,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IADrD,WAAArkB,OAEgBzG,EAAQg5B,QAIhC,IAAK,8BACD,MAAO,kCAEX,IAAK,0BACD,IAAMx5B,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAE7Bo3B,EAAuBj5B,EAAQk5B,MAChCjwB,IAAI,SAAA/B,GAAC,OA1UtB,SAAsCmG,GAClC,OAAQA,EAAK,UACT,IAAK,6BACD,MAAO,UAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,mCACD,MAAO,iBAEX,IAAK,kCACD,MAAO,QAEX,IAAK,kCACD,MAAO,gBAEX,IAAK,sCACD,MAAO,oBAEX,IAAK,8BACD,MAAO,WAEX,IAAK,0CACD,MAAO,wBAEX,IAAK,qCACD,MAAO,mBAEX,IAAK,iCACD,MAAO,eAEX,IAAK,qCACD,MAAO,oBAEX,IAAK,2CACD,MAAO,yBAEX,IAAK,iCACD,MAAO,eAIf,MAAO,GA+Re8rB,CAA6BjyB,KACtC0hB,OAAO,SAACC,EAAaC,GAClB,OAAuB,OAAhBD,EAAuB,CAACC,GAAxB,GAAAriB,OAAAnL,OAAAqpB,EAAA,EAAArpB,CAAuCutB,GAAvC,CAAoD,KAAMC,KAClE,MAEP,OACI5N,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQ/H,EAAK6N,KAAK9C,QAASugB,SAAUA,IACnD,sCACAmO,GAIb,IAAK,2BACD,IAAMz5B,EAAO6O,IAAU3P,IAAIqB,EAAQ8B,SAE7Bu3B,EAAiBlwB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQq5B,oBACjE,GACID,GACAA,EAAep5B,SACqB,mBAApCo5B,EAAep5B,QAAQ,UACvBo5B,EAAep5B,QAAQs5B,QACzB,KACUA,EAAYF,EAAep5B,QAA3Bs5B,QAER,OACIpe,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,+CAAAla,OAC+CmxB,EAAS2B,UAChDv5B,EAAQw5B,aACRx5B,EAAQ23B,UAHhB,QAKIzc,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQ/H,EAAK6N,KAAK9C,QAASugB,SAAUA,IALxD,QAAArkB,OAMa6yB,EAAQnjB,QAK7B,OACI+E,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,+CAAAla,OAC+CmxB,EAAS2B,UAChDv5B,EAAQw5B,aACRx5B,EAAQ23B,UAHhB,QAKIzc,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQ/H,EAAK6N,KAAK9C,QAASugB,SAAUA,KAIhE,IAAK,8BACD,MAAO,qBAEX,IAAK,oBACD,IAAM2O,EA/UlB,SAA0B15B,EAAS+qB,GAC/B,IAAK/qB,EAAS,OAAO,KADoB,IAGjC8B,EAA4B9B,EAA5B8B,QAAS+K,EAAmB7M,EAAnB6M,eAEjB,GAAuB,IAAnBA,EACA,OAAOsO,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAG5D,IAAMtrB,EAAO6O,IAAU3P,IAAImD,GAC3B,OAAKrC,EAEEA,EAAK2W,MAFM,KAqUKujB,CAAiB35B,EAAS+qB,GACnC6O,EAAgBzwB,IAAaxK,IAAIqB,EAAQ8B,QAAS7B,EAAQ0Z,YAChE,IAAKigB,IAAkBA,EAAc35B,QACjC,OACIkb,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACK8Y,EACA,qBAKb,IAAIG,EAAgB,oBACpB,GAAIpnB,EAAiBmnB,GACjBC,EAAgB,iCAEhB,OAAQD,EAAc35B,QAAQ,UAC1B,IAAK,mBACD45B,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,kBACDA,EAAgB,iBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,sBACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,qBAChB,MAEJ,IAAK,kBACDA,EAAgB,gBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,cACDA,EAAgB,iBAChB,MAEJ,IAAK,iBACDA,EAAgB,oBAChB,MAEJ,IAAK,cACD,IACM3gB,EAAO0gB,EAAc35B,QAAQiZ,KAAKA,KAEpC2gB,EADA3gB,EAAKxX,QAFS,GAGD,eAAAgF,OAAewS,EAAf,QAEA,eAAAxS,OAAewS,EAAKoN,UAAU,EAL7B,IAKD,WAGjB,MAEJ,IAAK,qBACDuT,EAAgB,8BAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,eACDA,EAAgB,kBAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAChB,MAEJ,IAAK,mBACDA,EAAgB,0BAM5B,OACI1e,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACK8Y,EACAG,GAIb,IAAK,yBACD,OAAIvB,EACO,yBAIPnd,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IAChD,uBAIb,IAAK,8BAA+B,IACxB3U,EAAUnW,EAAVmW,MAER,OAAImiB,EACO,kBAGPD,EACA,yBAAA5xB,OAA6B0P,EAA7B,QAIA+E,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACovB,EAAA,EAAD,CAAehwB,OAAQqF,EAAgBke,SAAUA,IADrD,sBAAArkB,OAEwB0P,EAFxB,SAMR,IAAK,qBACD,MAAO,sBAEX,IAAK,0BACD,mEAAA1P,OAAoEzG,EAAQ65B,YAA5E,KAIR,UAAApzB,OAAW1G,EAAQC,QAAQ,SAA3B,KAtkBJo4B,EAAW37B,IAAI,8BAA+B,+BAC9C27B,EAAW37B,IAAI,wBAAyB,yBACxC27B,EAAW37B,IAAI,yBAA0B,0BACzC27B,EAAW37B,IAAI,yBAA0B,0BACzC27B,EAAW37B,IAAI,0BAA2B,2BAC1C27B,EAAW37B,IAAI,yBAA0B,0BACzC27B,EAAW37B,IAAI,wBAAyB,yBACxC27B,EAAW37B,IAAI,oBAAqB,qBACpC27B,EAAW37B,IAAI,yBAA0B,0BACzC27B,EAAW37B,IAAI,uBAAwB,wBACvC27B,EAAW37B,IAAI,2BAA4B,4BAC3C27B,EAAW37B,IAAI,6BAA8B,8BAC7C27B,EAAW37B,IAAI,mBAAoB,oBACnC27B,EAAW37B,IAAI,8BAA+B,+BAC9C27B,EAAW37B,IAAI,0BAA2B,2BAC1C27B,EAAW37B,IAAI,2BAA4B,4BAC3C27B,EAAW37B,IAAI,8BAA+B,+BAC9C27B,EAAW37B,IAAI,oBAAqB,qBACpC27B,EAAW37B,IAAI,yBAA0B,0BACzC27B,EAAW37B,IAAI,8BAA+B,+BAC9C27B,EAAW37B,IAAI,qBAAsB,sBACrC27B,EAAW37B,IAAI,0BAA2B,kLCZpCq9B,qNAWFC,oCAAsC,SAAA59B,GAAU,IACpC+F,EAAc7G,EAAKuf,MAAnB1Y,UACR,GAAKA,EAAL,CAEA,IAAMxF,EAAOwF,EAAU7B,MACvB,GAAK3D,EAAL,CAL4C,IAOpC8G,EAAWrH,EAAXqH,OAEJ9G,EAAKyB,KAAOqF,GACZnI,EAAKwhB,oGAnBTzhB,IAAU0hB,GAAG,oCAAqCthB,KAAKu+B,qCACvD3+B,IAAU0hB,GAAG,iCAAkCthB,KAAKu+B,oFAIpD3+B,IAAUoC,eAAe,oCAAqChC,KAAKu+B,qCACnE3+B,IAAUoC,eAAe,iCAAkChC,KAAKu+B,sEAiB3D,IAAApf,EAC+Dnf,KAAKof,MAAjEmB,EADHpB,EACGoB,QAAS7Z,EADZyY,EACYzY,UAAWxF,EADvBie,EACuBje,KAAM0hB,EAD7BzD,EAC6ByD,KAAMgW,EADnCzZ,EACmCyZ,aAAcvZ,EADjDF,EACiDE,UAEhD6Y,EAAe5jB,YAAO5N,EAAYA,EAAU7B,MAAQ,MACpD8a,EAAYe,IAAW,aAAc,CAAE8d,4BAA6BtG,IAE1E,OACIgE,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgBE,QAASR,GACnC6Y,EACGgE,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAWA,EAAW4B,IAAK2W,EAAcvW,WAAW,EAAOC,IAAI,KAEpEsa,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAWY,EAAQ4Y,aAE3Bj4B,GACGg7B,EAAA17B,EAAAmM,cAAC8xB,EAAA,EAAD,CACIv9B,KAAMA,EACNg3B,aAAcA,EACdlrB,UAAQ,EACR4qB,QAAM,EACNc,cAAY,EACZC,OAAQ,EACR/V,KAAMA,EACNgW,aAAcA,YA/CX9Y,IAAMC,YA+DlBgB,QAxEA,SAAAC,GAAK,MAAK,CACrBmY,WAAY,CACRA,WAAYnY,EAAM0d,QAAQC,QAAQC,KAClCC,aAAc,MACdpvB,MAAO,GACPE,OAAQ,MAmEkB,CAAEwX,WAAW,GAAhCpG,CAAwCud,4LCnEjDpe,sBACF,SAAAA,EAAYd,GAAO,IAAAvf,EAAA,OAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAAkgB,IACfrgB,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAF,OAAAme,EAAA,EAAAne,CAAAogB,GAAA/f,KAAAH,KAAMof,KA+BV0f,gBAAkB,WACd,IAAMnM,EAAS9yB,EAAKk/B,SAASzR,QACzBqF,IACI9yB,EAAKm/B,QAAUn/B,EAAKo/B,UAAYp/B,EAAKq/B,kBAAoBr/B,EAAKs/B,uBAE9DxM,EAAOyM,OAGPzM,EAAO0M,UAxCAx/B,EA6CnBy/B,wCAA0C,SAAA3+B,GACtCd,EAAKs/B,uBAAyBniB,QAAQ7E,IAAiBonB,2BAEvD1/B,EAAKi/B,mBAhDUj/B,EAmDnB2/B,iCAAmC,SAAA7+B,GAC/Bd,EAAKq/B,gBAAkBliB,QAAQ7E,IAAiBsnB,oBAEhD5/B,EAAKi/B,mBAtDUj/B,EAyDnB6/B,0BAA4B,SAAA/+B,GACxBd,EAAKo/B,QAAUt+B,EAAOs+B,QAEtBp/B,EAAKi/B,mBA5DUj/B,EA+DnB8/B,6BAA+B,SAAAh/B,GAAU,IAAAwe,EACPtf,EAAKuf,MAA3BnY,EAD6BkY,EAC7BlY,OAAQC,EADqBiY,EACrBjY,UACVsQ,EAAG,GAAAvM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GAEzBrH,EAAKm/B,OAASr+B,EAAO6M,SAASzK,IAAIyU,GAElC3X,EAAKi/B,mBArEUj/B,EAwEnB+/B,4BAA8B,SAAAj/B,GAAU,IAC5B8D,EAAc5E,EAAKuf,MAAM3a,UAAzBA,UACAuD,EAAWrH,EAAXqH,OAEHvD,GAEDA,EAAU9B,KAAOqF,GACjBnI,EAAKwhB,eA/EMxhB,EAmFnBggC,qCAAuC,SAAAl/B,GAAU,IACrC+F,EAAc7G,EAAKuf,MAAM3a,UAAzBiC,UACR,GAAKA,EAAL,CAF6C,IAIrCsB,EAAWrH,EAAXqH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1CnI,EAAKwhB,gBAvFTxhB,EAAKk/B,SAAWjf,IAAMggB,YAEtBjgC,EAAKo/B,QAAUj1B,OAAO+1B,SACtBlgC,EAAKm/B,QAAS,EACdn/B,EAAKq/B,gBAAkBliB,QAAQ7E,IAAiBsnB,oBAChD5/B,EAAKs/B,uBAAyBniB,QAAQ7E,IAAiBonB,2BARxC1/B,mFAYfD,IAAU0hB,GAAG,qCAAsCthB,KAAK6/B,sCACxDjgC,IAAU0hB,GAAG,4BAA6BthB,KAAK4/B,6BAC/CznB,IAAiBmJ,GAAG,0BAA2BthB,KAAK0/B,2BACpDvnB,IAAiBmJ,GAAG,iCAAkCthB,KAAKw/B,kCAC3DrnB,IAAiBmJ,GAAG,wCAAyCthB,KAAKs/B,yCAClE5xB,IAAa4T,GAAG,6BAA8BthB,KAAK2/B,6EAInD//B,IAAUoC,eAAe,qCAAsChC,KAAK6/B,sCACpEjgC,IAAUoC,eAAe,4BAA6BhC,KAAK4/B,6BAC3DznB,IAAiBnW,eAAe,0BAA2BhC,KAAK0/B,2BAChEvnB,IAAiBnW,eAAe,iCAAkChC,KAAKw/B,kCACvErnB,IAAiBnW,eACb,wCACAhC,KAAKs/B,yCAET5xB,IAAa1L,eAAe,6BAA8BhC,KAAK2/B,+DAiE1D,IAAArf,EACiCtgB,KAAKof,MAAnCa,EADHK,EACGL,YAAaZ,EADhBiB,EACgBjB,UAAW9H,EAD3B+I,EAC2B/I,EAD3ByoB,EAEsDhgC,KAAKof,MAAM3a,UAA9DiC,EAFHs5B,EAEGt5B,UAAWjC,EAFdu7B,EAEcv7B,UAAWw7B,EAFzBD,EAEyBC,UAAWxwB,EAFpCuwB,EAEoCvwB,MAAOE,EAF3CqwB,EAE2CrwB,OAE1CwQ,EAAeC,YAAW1Z,GAAa,CAAE+I,MAAOA,EAAOE,OAAQA,GAAUsQ,GAC/E,IAAKE,EAAc,OAAO,KAE1B,IAAMvT,EAAQ,CACV6C,MAAO0Q,EAAa1Q,MACpBE,OAAQwQ,EAAaxQ,QAGnBuoB,EAAe5jB,YAAO5N,EAAYA,EAAU7B,MAAQ,MACpD0c,EAAMjN,YAAO7P,GAEbk1B,EAAY5E,YAAmBruB,GAC/Bw5B,EAAQ/rB,YAAc8rB,GAE5B,OACI/D,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,YAAY/S,MAAOA,EAAOiT,QAASR,GAC7CkC,EACG2e,EACIhE,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,6BAA6B/S,MAAOA,EAAO2U,IAAKA,EAAKK,IAAI,KAExEsa,EAAA17B,EAAAmM,cAAA,SACIwzB,IAAKngC,KAAK++B,SACVpf,UAAU,6BACV4B,IAAKA,EACL6e,OAAQlI,EACRmI,OAAK,EACLC,UAAQ,EACRC,MAAI,EACJC,aAAW,EACX/wB,MAAO7C,EAAM6C,MACbE,OAAQ/C,EAAM+C,SAItBusB,EAAA17B,EAAAmM,cAAAuvB,EAAA17B,EAAA2kB,SAAA,KACI+W,EAAA17B,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,oBAAqB,CAAEqZ,gBAAiBJ,IAC9D/sB,MAAOA,EACP2U,IAAK2W,EACLtW,IAAI,KAERsa,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBvT,YAAY3H,KAGrDy3B,EAAA17B,EAAAmM,cAACkvB,EAAA,EAAD,CACI36B,KAAMuD,EACNuI,UAAQ,EACR4qB,QAAM,EACNc,cAAY,EACZ9V,KAAMsZ,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBpI,EAAE,wBApJrCuI,IAAMC,YAoK9BG,EAAUW,aAAe,CACrB3U,KAAMgG,IACN+N,YAAaa,KAGFsG,kBAAkBlH,uHChL3BugB,qNACFzc,MAAQ,CACJyJ,MAAO,KACPiT,iBAAkB,QAiCtBC,kBAAoB,SAAAt7B,GAAW,IAEnB1C,EADkB0C,EAAlBA,QACA1C,GAERd,IAAgBiJ,KAAK,CACjB/B,QAAS,mBACT1D,QAAS,CAAE0D,QAAS,cAAepG,QACpCyI,KAAK,SAAAhB,GACAvK,EAAKuf,MAAM/Z,UAAYA,GACvBxF,EAAKykB,SAAS,CACVmJ,MAAOrjB,EAAOw2B,OAAOC,KAAK,4FA1BvB9b,EAAWC,EAAWC,GAAU,IACvC5f,EAAYrF,KAAKof,MAAjB/Z,QAEJA,GAAWA,IAAY0f,EAAU1f,SACjCrF,KAAK2gC,kBAAkBt7B,+CAIX,IACRA,EAAYrF,KAAKof,MAAjB/Z,QAEJA,GACArF,KAAK2gC,kBAAkBt7B,oCAoBtB,IACGA,EAAYrF,KAAKof,MAAjB/Z,QACAooB,EAAUztB,KAAKgkB,MAAfyJ,MAER,OAAKpoB,EAGD62B,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,mBACXuc,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,yBAAyB8N,GACxCyO,EAAA17B,EAAAmM,cAACm0B,EAAA,EAAD,CAASz7B,QAASA,EAAS4a,YAAa8gB,OAL3B,wDAlDO3hB,EAAO4E,GAAO,IAClC3e,EAAY+Z,EAAZ/Z,QACAq7B,EAAqB1c,EAArB0c,iBAER,OAAIr7B,GAAWq7B,EACJ,CACHA,iBAAkBr7B,EAClBooB,MAAO,MAIR,YAjBc3N,IAAMC,YAuEpB0gB,iKCeAO,sBAtFX,SAAAA,EAAY5hB,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAghC,IACfnhC,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAkhC,GAAA7gC,KAAAH,KAAMof,KAkBVje,aAAe,SAAAR,GACX,IAAM02B,EAAcx3B,EAAKmkB,MAAM9iB,KACzBo2B,EAAW32B,EAAOO,KAEpBm2B,GAAeA,EAAY10B,KAAO20B,EAAS30B,IAC3C9C,EAAKykB,SAAS,CAAEpjB,KAAMo2B,EAAUC,SAAUF,KAxB/B,IAGPn2B,EAASrB,EAAKuf,MAAdle,KAHO,OAIfrB,EAAKmkB,MAAQ,CACTiU,cAAe/2B,EACfq2B,SAAU,KACVr2B,KAAMtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GAPrBrB,mFAYfD,IAAU0hB,GAAG,aAActhB,KAAKmB,6DAIhCvB,IAAUoC,eAAe,aAAchC,KAAKmB,4DA2B1BwjB,EAAWC,GAAW,IAAAb,EACb/jB,KAAKgkB,MAAxB9iB,EADgC6iB,EAChC7iB,KAAMq2B,EAD0BxT,EAC1BwT,SAEd,OAAI3S,EAAU1jB,OAASA,GAInB0jB,EAAU2S,WAAaA,mCAOtB,IACGr2B,EAASlB,KAAKgkB,MAAd9iB,KACR,IAAKA,EAAM,OAAO,KAElB,IAAM+/B,EAAsB//B,EAAK2B,OAAS3B,EAAK2B,MAAM2R,sBAC/C0sB,EAAoBhgC,EAAK2C,QAAU3C,EAAK2C,OAAO8Q,oBAE/CzI,EAAOE,YAAYlL,GACrB62B,EAAe,KACfkJ,EACAlJ,EAAexjB,YAAkBrT,GAC1BggC,IACPnJ,EAAerjB,YAAgBxT,IAGnC,IAAMigC,EAAapJ,EAAY,GAAA9sB,OAAM8sB,EAAN,KAAA9sB,OAAsBiB,GAAtB,GAAAjB,OAAkCiB,GAEjE,OACIwT,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAAA,YAAOw0B,uDAhDa/hB,EAAO4E,GAAO,IAClC9iB,EAASke,EAATle,KACA+2B,EAAkBjU,EAAlBiU,cAER,OAAI/2B,GAAQ+2B,GAAiB/2B,EAAKyB,KAAOs1B,EAAct1B,GAC5C,CACHs1B,cAAe/2B,EACfq2B,SAAU,KACVr2B,KAAMtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,GAIjC,YAzCc4e,IAAMC,YCG7BkM,2LACO,IAAA9M,EAC2Bnf,KAAKof,MAA7Bra,EADHoa,EACGpa,SAAUsa,EADbF,EACaE,UAClB,IAAKta,EAAU,OAAO,KAFjB,IAIG2B,EAAyB3B,EAAzB2B,UAAWmnB,EAAc9oB,EAAd8oB,UACb3sB,EAAO6D,EAASA,SAEtB,OACI2a,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,YACXD,EAAAlf,EAAAmM,cAAC2xB,EAAA,EAAD,CACI53B,UAAWA,EACXxF,KAAMA,EACNme,UAAWA,EACXuD,KAAMlD,EAAAlf,EAAAmM,cAACy0B,EAAA5gC,EAAD,MACNo4B,aAAclZ,EAAAlf,EAAAmM,cAAC00B,EAAA7gC,EAAD,QAElBkf,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACXD,EAAAlf,EAAAmM,cAAA,KACIgT,UAAU,gBACVE,QAASR,EACT1E,MAAOkT,EACPyT,YAAWzT,EACX0T,WAAU,IAAM1sB,YAAagZ,IAC5BA,IAGTnO,EAAAlf,EAAAmM,cAAC60B,EAAD,CAAgBtgC,KAAMA,aA5BnB4e,IAAMC,YA0CdkM,qMCtCTF,6BACF,SAAAA,EAAY3M,GAAO,IAAAvf,EAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAA+rB,IACflsB,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAF,OAAAme,EAAA,EAAAne,CAAAisB,GAAA5rB,KAAAH,KAAMof,KAmDVqiB,uBAAyB,SAAA9gC,GAAU,IAAAwe,EACDtf,EAAKuf,MAA3BnY,EADuBkY,EACvBlY,OAAQC,EADeiY,EACfjY,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SAAS,CACVod,QAAQ,EACR3Q,SAAS,EACTK,YAAa,KA3DNvxB,EAgEnB8hC,wBAA0B,SAAAhhC,GAAU,IAAA2f,EACOzgB,EAAKuf,MAApCnY,EADwBqZ,EACxBrZ,OAAQC,EADgBoZ,EAChBpZ,UADgBoZ,EACLyQ,QAEvB9pB,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UACjDrH,EAAKykB,SAAS,CAAEyM,SAAS,IAEzBlxB,EAAKykB,SAAS,CAAEyM,SAAS,KAtEdlxB,EA0EnB+hC,yBAA2B,SAAAjhC,GAAU,IAAAwnB,EACHtoB,EAAKuf,MAA3BnY,EADyBkhB,EACzBlhB,OAAQC,EADiBihB,EACjBjhB,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SAAS,CAAEyM,SAAS,KA9EdlxB,EAkFnBgiC,0BAA4B,SAAAlhC,GAAU,IAAAgoB,EACJ9oB,EAAKuf,MAA3BnY,EAD0B0hB,EAC1B1hB,OAAQC,EADkByhB,EAClBzhB,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UAC5CrH,EAAKmkB,MAAM0d,QACZ7hC,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,EACbL,SAAS,IAGVlxB,EAAKmkB,MAAM0d,QAClB7hC,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,EACbL,SAAS,KAjGF,IAGP9pB,EAAsBmY,EAAtBnY,OAAQC,EAAckY,EAAdlY,UAERqpB,EAA2BL,IAA3BK,KAAMhsB,EAAqB2rB,IAArB3rB,QAASwsB,EAAYb,IAAZa,QACjB2Q,EAASn9B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EANxD,OAQfrH,EAAKmkB,MAAQ,CACT0d,OAAQA,EACR3Q,UAAS2Q,GAAS3Q,EAClBK,YAAasQ,GAAUnR,EAAOA,EAAKa,YAAc,EACjDD,SAAUuQ,GAAUnR,EAAOA,EAAKY,SAAW,GAZhCtxB,qFAgBG8kB,EAAWC,EAAWC,GAAa,IAAAd,EACF/jB,KAAKgkB,MAAhD0d,EAD6C3d,EAC7C2d,OAAQ3Q,EADqChN,EACrCgN,QAASK,EAD4BrN,EAC5BqN,YAAaD,EADepN,EACfoN,SAEtC,OAAIvM,EAAU8c,SAAWA,IAIrB9c,EAAUmM,UAAYA,IAItBnM,EAAUwM,cAAgBA,GAI1BxM,EAAUuM,WAAaA,gDAQ3BjB,IAAY5O,GAAG,0BAA2BthB,KAAK6hC,2BAC/C3R,IAAY5O,GAAG,wBAAyBthB,KAAK2hC,yBAC7CzR,IAAY5O,GAAG,yBAA0BthB,KAAK4hC,0BAC9C1R,IAAY5O,GAAG,uBAAwBthB,KAAKyhC,uEAI5CvR,IAAYluB,eAAe,0BAA2BhC,KAAK6hC,2BAC3D3R,IAAYluB,eAAe,wBAAyBhC,KAAK2hC,yBACzDzR,IAAYluB,eAAe,yBAA0BhC,KAAK4hC,0BAC1D1R,IAAYluB,eAAe,uBAAwBhC,KAAKyhC,yDAqDnD,IAAAK,EAC2C9hC,KAAKof,MAA7CnY,EADH66B,EACG76B,OAAQC,EADX46B,EACW56B,UAAWvC,EADtBm9B,EACsBn9B,MAAO0a,EAD7ByiB,EAC6BziB,UAC1B0R,EAAY/wB,KAAKgkB,MAAjB+M,QACR,IAAKpsB,EAAO,OAAO,KAHd,IAKG2B,EAAiD3B,EAAjD2B,sBAAuB6qB,EAA0BxsB,EAA1BwsB,SAAiBjwB,EAASyD,EAAhBA,MAEnCgW,EAAQuT,YAAcvpB,GAE5B,OACIu3B,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,YACXuc,EAAA17B,EAAAmM,cAACo1B,EAAA,EAAD,CACIr7B,UAAWJ,EACXpF,KAAMA,EACNme,UAAWA,EACXuD,KAAMsZ,EAAA17B,EAAAmM,cAACq1B,EAAAxhC,EAAD,MACNo4B,aAAc7H,EAAUmL,EAAA17B,EAAAmM,cAACs1B,EAAAzhC,EAAD,MAAgB07B,EAAA17B,EAAAmM,cAACu1B,EAAA1hC,EAAD,QAE5C07B,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,oBACXuc,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,kBACXuc,EAAA17B,EAAAmM,cAAA,KAAGgT,UAAU,gBAAgBE,QAASR,EAAW1E,MAAOA,GACnDA,IAGTuhB,EAAA17B,EAAAmM,cAACw1B,EAAA,EAAD,CAAal7B,OAAQA,EAAQC,UAAWA,EAAWiqB,SAAUA,EAAUjwB,KAAMA,aA/H7E4e,IAAMC,YA6IXgM,qIClJTqW,sBACF,SAAAA,EAAYhjB,GAAO,IAAAvf,EAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAAoiC,IACfviC,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAF,OAAAme,EAAA,EAAAne,CAAAsiC,GAAAjiC,KAAAH,KAAMof,KA2DVqiB,uBAAyB,SAAA9gC,GAAU,IAAAwe,EACStf,EAAKuf,MAArCnY,EADuBkY,EACvBlY,OAAQC,EADeiY,EACfjY,UAAWiqB,EADIhS,EACJgS,SADIpN,EAENlkB,EAAKmkB,MAAd9iB,GAFe6iB,EAEvB2d,OAFuB3d,EAEf7iB,MAEZ+F,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,EACbiR,WAAYxiC,EAAKyiC,cAAc,EAAGnR,GAAU,EAAOjwB,MApE5CrB,EAyEnB0iC,wBAA0B,SAAA5hC,GAAU,IAAA2f,EACQzgB,EAAKuf,MAArCnY,EADwBqZ,EACxBrZ,OAAQC,EADgBoZ,EAChBpZ,UAAWiqB,EADK7Q,EACL6Q,SADKqR,EAEP3iC,EAAKmkB,MAAtB0d,EAFwBc,EAExBd,OAAQxgC,EAFgBshC,EAEhBthC,KAEZ+F,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SAAS,CACV8M,YAAazwB,EAAOywB,YACpBD,SAAUxwB,EAAOwwB,UAAYA,EAC7BkR,WAAYxiC,EAAKyiC,cAAc3hC,EAAOywB,YAAazwB,EAAOwwB,UAAYA,EAAUuQ,EAAQxgC,MAjFjFrB,EAsFnBgiC,0BAA4B,SAAAlhC,GAAU,IAAAwnB,EACMtoB,EAAKuf,MAArCnY,EAD0BkhB,EAC1BlhB,OAAQC,EADkBihB,EAClBjhB,UAAWiqB,EADOhJ,EACPgJ,SADOsR,EAEI5iC,EAAKmkB,MAAnC0d,EAF0Be,EAE1Bf,OAAQtQ,EAFkBqR,EAElBrR,YAAalwB,EAFKuhC,EAELvhC,KAEzB+F,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UACjDrH,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAasQ,EAAStQ,EAAc,EACpCiR,WAAYxiC,EAAKyiC,cAAcZ,EAAStQ,EAAc,EAAGD,GAAU,EAAMjwB,KAEtEwgC,GACP7hC,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,EACbiR,WAAYxiC,EAAKyiC,cAAc,EAAGnR,GAAU,EAAOjwB,MApG5CrB,EAyGnBsB,aAAe,SAAAR,GACX,IAAM02B,EAAcx3B,EAAKmkB,MAAM9iB,KACzBo2B,EAAW32B,EAAOO,KAEpBm2B,GAAeA,EAAY10B,KAAO20B,EAAS30B,IAC3C9C,EAAKykB,SAAS,CAAEpjB,KAAMo2B,EAAUC,SAAUF,KA9G/Bx3B,EAkHnByiC,cAAgB,SAAClR,EAAaD,EAAUuQ,EAAQxgC,GAC5C,IAAMq3B,EAAyBr3B,EAAK2B,OAAS3B,EAAK2B,MAAMG,yBAGlD0/B,GAFuBxhC,EAAK2C,QAAU3C,EAAK2C,OAAOE,uBAEjC4+B,YAAkBne,KAAKC,MAAM0M,GAAY,KAC1DyR,EAAoBD,YAAkBne,KAAKC,MAAM2M,GAAe,IAEtE,OAAOsQ,GAAUnJ,EAAV,GAAAttB,OAAsC23B,EAAtC,KAAA33B,OAA2Dy3B,GAA3D,GAAAz3B,OAAiFy3B,IAzHzE,IAGPn+B,EAAkB2rB,IAAlB3rB,QAASgsB,EAASL,IAATK,KAHF5H,EAI+B9oB,EAAKuf,MAA3CnY,EAJO0hB,EAIP1hB,OAAQC,EAJDyhB,EAICzhB,UAAWiqB,EAJZxI,EAIYwI,SAAUjwB,EAJtBynB,EAIsBznB,KAE/BwgC,EAASn9B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EACjEkqB,EAAcsQ,GAAUnR,EAAOA,EAAKa,YAAc,EAClDyR,EAAgBnB,GAAUnR,GAAQA,EAAKY,SAAWZ,EAAKY,SAAWA,EAClEkG,EAAcz3B,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAT/B,OAWfrB,EAAKmkB,MAAQ,CACT0d,OAAQA,EACRtQ,YAAaA,EACbD,SAAU0R,EACVR,WAAYxiC,EAAKyiC,cAAclR,EAAaD,EAAUuQ,EAAQrK,GAE9DE,SAAU,KACVr2B,KAAMm2B,GAlBKx3B,qFAsBG8kB,EAAWC,GAAW,IAAAke,EACO9iC,KAAKgkB,MAA5C0d,EADgCoB,EAChCpB,OAAQW,EADwBS,EACxBT,WAAYnhC,EADY4hC,EACZ5hC,KAAMq2B,EADMuL,EACNvL,SAElC,OAAI3S,EAAUyd,aAAeA,IAIzBzd,EAAU8c,SAAWA,IAIrB9c,EAAU1jB,OAASA,GAInB0jB,EAAU2S,WAAaA,gDAQ3B33B,IAAU0hB,GAAG,aAActhB,KAAKmB,cAEhC+uB,IAAY5O,GAAG,0BAA2BthB,KAAK6hC,2BAC/C3R,IAAY5O,GAAG,wBAAyBthB,KAAKuiC,yBAC7CrS,IAAY5O,GAAG,uBAAwBthB,KAAKyhC,uEAI5C7hC,IAAUoC,eAAe,aAAchC,KAAKmB,cAE5C+uB,IAAYluB,eAAe,0BAA2BhC,KAAK6hC,2BAC3D3R,IAAYluB,eAAe,wBAAyBhC,KAAKuiC,yBACzDrS,IAAYluB,eAAe,uBAAwBhC,KAAKyhC,yDAmEnD,IAAAsB,EACwB/iC,KAAKgkB,MAA1B9iB,EADH6hC,EACG7hC,KAAMmhC,EADTU,EACSV,WACd,IAAKnhC,EAAM,OAAO,KAElB,IAAM+/B,EAAsB//B,EAAK2B,OAAS3B,EAAK2B,MAAM2R,sBAC/C0sB,EAAoBhgC,EAAK2C,QAAU3C,EAAK2C,OAAO8Q,oBAC/C4jB,EAAyBr3B,EAAK2B,OAAS3B,EAAK2B,MAAMG,yBAGlDkJ,GAFuBhL,EAAK2C,QAAU3C,EAAK2C,OAAOE,uBAE3CqI,YAAYlL,IACrB62B,EAAe,KACfkJ,EACAlJ,EAAexjB,YAAkBrT,GAC1BggC,IACPnJ,EAAerjB,YAAgBxT,IAEnC,IAAMigC,EAAapJ,EAAY,GAAA9sB,OAAM8sB,EAAN,KAAA9sB,OAAsBiB,GAAtB,GAAAjB,OAAkCiB,GAEjE,OACIgwB,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,iBACT4Y,GAA0B2D,EAAA17B,EAAAmM,cAAA,eAAA1B,OAAUk2B,EAAV,OAC5BjF,EAAA17B,EAAAmM,cAAA,YAAO01B,WAlJGviB,IAAMC,YA+JjBqiB,+KC5JT9V,qNASF0W,iCAAmC,SAAAriC,GAAU,IACjC+F,EAAc7G,EAAKuf,MAAM7Z,MAAzBmB,UACAsB,EAAWrH,EAAXqH,OAEHtB,GAEDA,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1CnI,EAAKwhB,kGAdTzhB,IAAU0hB,GAAG,iCAAkCthB,KAAKgjC,iFAIpDpjC,IAAUoC,eAAe,iCAAkChC,KAAKgjC,mEAc3D,IAAA7jB,EAC8Bnf,KAAKof,MAAhCa,EADHd,EACGc,YAAaZ,EADhBF,EACgBE,UADhB4jB,EAEiDjjC,KAAKof,MAAM7Z,MAAzDmB,EAFHu8B,EAEGv8B,UAAWnB,EAFd09B,EAEc19B,MAAOkK,EAFrBwzB,EAEqBxzB,MAAOE,EAF5BszB,EAE4BtzB,OAAQwhB,EAFpC8R,EAEoC9R,SAEnChR,EAAeC,YAAW1Z,GAAa,CAAE+I,MAAOA,EAAOE,OAAQA,GAAUsQ,GAC/E,IAAKE,EAAc,OAAO,KAE1B,IAAMvT,EAAQ,CACV6C,MAAO0Q,EAAa1Q,MACpBE,OAAQwQ,EAAaxQ,QAGnBzO,EAAOwF,EAAYA,EAAU7B,MAAQ,KACrCuD,EAAOlH,EAAOtB,IAAUqI,QAAQ/G,EAAKyB,KAAOzB,EAAKkH,KAAO,KACxDmZ,EAAM3hB,IAAU4I,WAAWJ,GAC3BuxB,EAAY5E,YAAmBruB,GAErC,OACIw1B,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,QAAQ/S,MAAOA,EAAOiT,QAASR,GAC1C6c,EAAA17B,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,gBAAiB,CAAEqZ,gBAAiBJ,IAC1D/sB,MAAOA,EACP2U,IAAKA,EACLK,IAAI,KAERsa,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,cACXuc,EAAA17B,EAAAmM,cAACu1B,EAAA1hC,EAAD,OAEJ07B,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,cAAcgjB,YAAkBxR,GAAY,IAAM/kB,YAAY7G,YAhDzEua,IAAMC,YA+D1BuM,EAAMzL,aAAe,CACjB3U,KAAMgG,IACN+N,YAAaa,KAGFwL,+PC7DT2K,UAAc,CAChBC,OAAQ,+BAGN3K,cACF,SAAAA,EAAYnN,GAAO,IAAAvf,EAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAAusB,IACf1sB,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAF,OAAAme,EAAA,EAAAne,CAAAysB,GAAApsB,KAAAH,KAAMof,KA6FV0f,gBAAkB,WACd,IAAMnM,EAAS9yB,EAAKk/B,SAASzR,QAC7B,GAAIqF,EACA,GAAI9yB,EAAKm/B,QAAUn/B,EAAKo/B,UAAYp/B,EAAKq/B,kBAAoBr/B,EAAKs/B,uBAE9DxM,EAAOyM,WACJ,CACH,GAAIv/B,EAAKmkB,MAAM0d,OACX,OAIJ/O,EAAO0M,UA1GAx/B,EA+GnBy/B,wCAA0C,SAAA3+B,GACtCd,EAAKs/B,uBAAyBniB,QAAQ7E,IAAiBonB,2BAEvD1/B,EAAKi/B,mBAlHUj/B,EAqHnB2/B,iCAAmC,SAAA7+B,GAC/Bd,EAAKq/B,gBAAkBliB,QAAQ7E,IAAiBsnB,oBAEhD5/B,EAAKi/B,mBAxHUj/B,EA2HnB6/B,0BAA4B,SAAA/+B,GACxBd,EAAKo/B,QAAUt+B,EAAOs+B,QAEtBp/B,EAAKi/B,mBA9HUj/B,EAiInB8/B,6BAA+B,SAAAh/B,GAAU,IAAAwe,EACPtf,EAAKuf,MAA3BnY,EAD6BkY,EAC7BlY,OAAQC,EADqBiY,EACrBjY,UACVsQ,EAAG,GAAAvM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GAEzBrH,EAAKm/B,OAASr+B,EAAO6M,SAASzK,IAAIyU,GAElC3X,EAAKi/B,mBAvIUj/B,EA0InBqjC,iCAAmC,SAAAviC,GAAU,IAAA2f,EACXzgB,EAAKuf,MAA3BnY,EADiCqZ,EACjCrZ,OAAQC,EADyBoZ,EACzBpZ,UACZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,YAClCrH,EAAKk/B,SAASzR,SAEzBztB,EAAKykB,SAAS,CAAE6e,UAAWxiC,EAAO2wB,QAAU,WACxCzxB,EAAKujC,qBAhJFvjC,EAsJnB0iC,wBAA0B,SAAA5hC,GAAU,IAAAwnB,EACFtoB,EAAKuf,MAA3BnY,EADwBkhB,EACxBlhB,OAAQC,EADgBihB,EAChBjhB,UACZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,YAClCrH,EAAKk/B,SAASzR,SAEzBztB,EAAKykB,SAAS,CACV8M,YAAazwB,EAAOywB,YACpBiS,cAAe1iC,EAAOwwB,aA7JnBtxB,EAmKnB4hC,uBAAyB,SAAA9gC,GAAU,IAAAgoB,EACD9oB,EAAKuf,MAA3BnY,EADuB0hB,EACvB1hB,OAAQC,EADeyhB,EACfzhB,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SACD,CACIod,QAAQ,EACRyB,UAAW,KACX/R,YAAa,GAEjB,WACI,IAAMuB,EAAS9yB,EAAKk/B,SAASzR,QACxBqF,IAEL9yB,EAAKujC,iBAEAp5B,OAAO+1B,UACRpN,EAAO0M,YApLRx/B,EA2LnBgiC,0BAA4B,SAAAlhC,GAAU,IAAAmhC,EACJjiC,EAAKuf,MAA3BnY,EAD0B66B,EAC1B76B,OAAQC,EADkB46B,EAClB56B,UACErH,EAAKuf,MAAM5X,UAArBjC,MAEJ0B,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UAC7CrH,EAAKmkB,MAAM0d,QAEX7hC,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,OAGdvxB,EAAKmkB,MAAM0d,QAClB7hC,EAAKykB,SACD,CACIod,QAAQ,EACRyB,UAAW,KACX/R,YAAa,GAEjB,WACI,IAAMuB,EAAS9yB,EAAKk/B,SAASzR,QACxBqF,IAEL9yB,EAAKujC,iBAEAp5B,OAAO+1B,UACRpN,EAAO0M,YArNRx/B,EA4NnByjC,4BAA8B,SAAA3iC,GAAU,IAC5B4E,EAAU1F,EAAKuf,MAAM5X,UAArBjC,MACAyC,EAAWrH,EAAXqH,OAEHzC,GAEDA,EAAM5C,KAAOqF,GACbnI,EAAKykB,SACD,CACI/C,IAAKjN,YAAO/O,IAEhB,WACI1F,EAAKujC,oBAxOFvjC,EA8OnB0jC,qCAAuC,SAAA5iC,GAAU,IACrC+F,EAAc7G,EAAKuf,MAAM5X,UAAzBd,UACR,GAAKA,EAAL,CAF6C,IAIrCsB,EAAWrH,EAAXqH,OAEJtB,EAAU7B,OAAS6B,EAAU7B,MAAMlC,KAAOqF,GAC1CnI,EAAKwhB,gBArPMxhB,EAyPnB2jC,cAAgB,aAtPZ3jC,EAAKk/B,SAAWjf,IAAMggB,YAHP,IAKP74B,EAAsBmY,EAAtBnY,OAAQC,EAAckY,EAAdlY,UACR3B,EAAU6Z,EAAM5X,UAAhBjC,MAEAgrB,EAA+BL,IAA/BK,KAAMhsB,EAAyB2rB,IAAzB3rB,QAASisB,EAAgBN,IAAhBM,YACjBkR,EAASn9B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EATxD,OAWfrH,EAAKmkB,MAAQ,CACT0d,OAAQA,EACRyB,UAAWzB,EAASlR,EAAc,KAClCjP,IAAKjN,YAAO/O,GACZ6rB,YAAasQ,GAAUnR,EAAOA,EAAKa,YAAc,EACjDiS,cAAe3B,GAAUnR,EAAOA,EAAKY,SAAW,GAGpDtxB,EAAKo/B,QAAUj1B,OAAO+1B,SACtBlgC,EAAKm/B,QAAS,EACdn/B,EAAKq/B,gBAAkBliB,QAAQ7E,IAAiBsnB,oBAChD5/B,EAAKs/B,uBAAyBniB,QAAQ7E,IAAiBonB,2BAtBxC1/B,gFAyBF,IAAAkkB,EACc/jB,KAAKgkB,MAAxBmf,EADKpf,EACLof,UAAW5hB,EADNwC,EACMxC,IAEboR,EAAS3yB,KAAK++B,SAASzR,QAC7B,GAAKqF,EAEL,GAAIwQ,EAEAxQ,EAAOwQ,UAAYA,MAFvB,CAMA,IAAM7R,EAASqB,EAAOwQ,UACtB,GAAI7R,EAEeA,EAAOmS,YAEfpgC,QAAQ,SAAAqgC,GAEXA,EAAMniC,SAIVoxB,EAAOwQ,YAEPxQ,EAAOwQ,UAAY,MAEnBxQ,EAAOpR,MAAQA,IACfoR,EAAOpR,IAAMA,gDAKjBvhB,KAAKojC,iBAELxjC,IAAU0hB,GAAG,qCAAsCthB,KAAKujC,sCACxD3jC,IAAU0hB,GAAG,4BAA6BthB,KAAKsjC,6BAE/C51B,IAAa4T,GAAG,6BAA8BthB,KAAK2/B,8BAEnDxnB,IAAiBmJ,GAAG,0BAA2BthB,KAAK0/B,2BACpDvnB,IAAiBmJ,GAAG,iCAAkCthB,KAAKw/B,kCAC3DrnB,IAAiBmJ,GAAG,wCAAyCthB,KAAKs/B,yCAElEpP,IAAY5O,GAAG,0BAA2BthB,KAAK6hC,2BAC/C3R,IAAY5O,GAAG,iCAAkCthB,KAAKkjC,kCACtDhT,IAAY5O,GAAG,wBAAyBthB,KAAKuiC,yBAC7CrS,IAAY5O,GAAG,uBAAwBthB,KAAKyhC,uEAI5C7hC,IAAUoC,eAAe,qCAAsChC,KAAKujC,sCACpE3jC,IAAUoC,eAAe,4BAA6BhC,KAAKsjC,6BAE3D51B,IAAa1L,eAAe,6BAA8BhC,KAAK2/B,8BAE/DxnB,IAAiBnW,eAAe,0BAA2BhC,KAAK0/B,2BAChEvnB,IAAiBnW,eAAe,iCAAkChC,KAAKw/B,kCACvErnB,IAAiBnW,eACb,wCACAhC,KAAKs/B,yCAGTpP,IAAYluB,eAAe,0BAA2BhC,KAAK6hC,2BAC3D3R,IAAYluB,eAAe,iCAAkChC,KAAKkjC,kCAClEhT,IAAYluB,eAAe,wBAAyBhC,KAAKuiC,yBACzDrS,IAAYluB,eAAe,uBAAwBhC,KAAKyhC,yDA0KnD,IAAAkC,EACiD3jC,KAAKof,MAAtCnY,GADhB08B,EACG1jB,YADH0jB,EACgB18B,QAAQC,EADxBy8B,EACwBz8B,UAAWmY,EADnCskB,EACmCtkB,UADnCmjB,EAE0CxiC,KAAKgkB,MAA5C0d,EAFHc,EAEGd,OAAQtQ,EAFXoR,EAEWpR,YAAaiS,EAFxBb,EAEwBa,cAFxBO,EAGkC5jC,KAAKof,MAAM5X,UAA1Cd,EAHHk9B,EAGGl9B,UAAWnB,EAHdq+B,EAGcr+B,MAAO4rB,EAHrByS,EAGqBzS,SAG1B,IADgBzjB,IAAaxK,IAAI+D,EAAQC,GAC3B,OAAO,KAErB,IAAM0F,EAAQ,CAAE6C,MAAO,IAAKE,OAAQ,KACpC,IAAK/C,EAAO,OAAO,KAEnB,IAAMsrB,EAAe5jB,YAAO5N,EAAYA,EAAU7B,MAAQ,MACpD0c,EAAMjN,YAAO/O,GACbo0B,EAAY5E,YAAmBruB,GAEjCsyB,EAAW,EACXqK,GAAiBjS,IAEjB4H,GADqB5H,EAAc,KACRiS,EAAiB,KAGhD,OACInH,EAAA17B,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,aAAc,CAAEmjB,qBAAsBnC,IAC5D90B,MAAOA,EACPiT,QAASR,GACRkC,EACG2a,EAAA17B,EAAAmM,cAAAuvB,EAAA17B,EAAA2kB,SAAA,KACI+W,EAAA17B,EAAAmM,cAAA,SACIwzB,IAAKngC,KAAK++B,SACVpf,UAAWe,IAAW,6BAA8B,oBACpD0f,OAAQlI,EACRmI,OAAK,EACLC,UAAQ,EACRC,MAAI,EACJC,aAAW,EACX/wB,MAAO7C,EAAM6C,MACbE,OAAQ/C,EAAM+C,OACdm0B,UAAW9jC,KAAKwjC,gBAEpBtH,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,qBACXuc,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,uBACXuc,EAAA17B,EAAAmM,cAACo3B,EAAAvjC,EAAD,CACI+f,QAAS0W,EACTxQ,QAAQ,SACRjR,MAAOwjB,EACP9sB,KAAM,IACN4W,UAAW,KAGnBoZ,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,kBACVgjB,YAAkBjB,EAASld,KAAKC,MAAM2M,GAAeD,GACtD+K,EAAA17B,EAAAmM,cAACq3B,EAAA,EAAD,CAAa/8B,OAAQA,EAAQC,UAAWA,EAAW0b,KAAM,gBAE7DsZ,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,oBACXuc,EAAA17B,EAAAmM,cAACs3B,EAAAzjC,EAAD,SAKZ07B,EAAA17B,EAAAmM,cAAAuvB,EAAA17B,EAAA2kB,SAAA,KACI+W,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,oBACXuc,EAAA17B,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,oBAAqB,CAAEqZ,gBAAiBJ,IAC9D/sB,MAAOA,EACP2U,IAAK2W,EACLtW,IAAI,MAGZsa,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,kBACVgjB,YAAkBxR,GAAY,IAAM/kB,YAAY7G,GACjD22B,EAAA17B,EAAAmM,cAACq3B,EAAA,EAAD,CAAa/8B,OAAQA,EAAQC,UAAWA,EAAW0b,KAAM,gBAE7DsZ,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,oBACXuc,EAAA17B,EAAAmM,cAACs3B,EAAAzjC,EAAD,QAIZ07B,EAAA17B,EAAAmM,cAACu3B,EAAA,EAAD,CAAchjC,KAAMqE,EAAOyH,UAAQ,EAAC4qB,QAAM,EAACc,cAAY,EAAC9V,KAAMsZ,EAAA17B,EAAAmM,cAACw3B,EAAA3jC,EAAD,gBApVtDsf,IAAMC,WAmW9BwM,EAAU1L,aAAe,CACrB3U,KAAMgG,IACN+N,YAAaa,KAGFyL,oHCzXT6X,cACF,SAAAA,EAAYhlB,GAAO,IAAAvf,EAAAC,OAAAie,EAAA,EAAAje,CAAAE,KAAAokC,IACfvkC,EAAAC,OAAAke,EAAA,EAAAle,CAAAE,KAAAF,OAAAme,EAAA,EAAAne,CAAAskC,GAAAjkC,KAAAH,KAAMof,KAiBVilB,6BAA+B,SAAA1jC,GAAU,IAAAwe,EACPtf,EAAKuf,MAA3BnY,EAD6BkY,EAC7BlY,OAAQC,EADqBiY,EACrBjY,UAEZD,IAAWtG,EAAO0F,SAAWa,IAAcvG,EAAOud,YAClDre,EAAKykB,SAAS,CAAEggB,SAAUtW,YAAgB/mB,EAAQC,MAtBvC,IAAAoZ,EAGezgB,EAAKuf,MAA3BnY,EAHOqZ,EAGPrZ,OAAQC,EAHDoZ,EAGCpZ,UAHD,OAKfrH,EAAKmkB,MAAQ,CACTsgB,SAAUtW,YAAgB/mB,EAAQC,IANvBrH,mFAWf6N,IAAa4T,GAAG,6BAA8BthB,KAAKqkC,6EAInD32B,IAAa1L,eAAe,6BAA8BhC,KAAKqkC,+DAW1D,IAAAlc,EACwBnoB,KAAKof,MAA1BwD,EADHuF,EACGvF,KAAM2hB,EADTpc,EACSoc,WAGd,OAFqBvkC,KAAKgkB,MAAlBsgB,SAEUC,EAAa3hB,SA/Bb9C,IAAMC,WA0ChCqkB,EAAYvjB,aAAe,CACvB+B,KAAM,KACN2hB,WAAY,MAGDH,wMCnCTI,qNASFC,mBAAqB,SAAAr6B,GAAU,IAAA+U,EACGtf,EAAKuf,MAA3BnY,EADmBkY,EACnBlY,OAAQC,EADWiY,EACXjY,UAEZD,IAAWmD,EAAO/D,SAAWa,IAAckD,EAAOzH,IAClD9C,EAAKwhB,iBAIbkE,YAAc,SAAAja,GACVA,EAAMma,qBAGVif,WAAa,SAAAp5B,GACTA,EAAMma,kBADY,IAAAnF,EAGYzgB,EAAKuf,MAA3BnY,EAHUqZ,EAGVrZ,OAAQC,EAHEoZ,EAGFpZ,UAEV3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GACzC,OAAK3C,EACDkrB,YAAiBlrB,GAAiB,UAEtCquB,YAAS3rB,EAAQC,GAHI,yFAzBrBwG,IAAa4T,GAAG,mBAAoBthB,KAAKykC,mEAIzC/2B,IAAa1L,eAAe,mBAAoBhC,KAAKykC,qDA2BhD,IAAAtc,EACqCnoB,KAAKof,MAAvCmB,EADH4H,EACG5H,QAAShJ,EADZ4Q,EACY5Q,EAAGtQ,EADfkhB,EACelhB,OAAQC,EADvBihB,EACuBjhB,UAEtB3C,EAAUmJ,IAAaxK,IAAI+D,EAAQC,GAErCyT,EAASpW,EAAiBqmB,YAASrmB,GAAhB,KACnBC,EAAWD,EAAyBkT,YAAWlT,EAASgT,GAAnCA,EAAE,WACrBrR,EAAYwpB,YAAkBzoB,EAAQC,GAO5C,OALIuoB,YAAiBlrB,KACjBoW,EAAQ,KACRnW,EAAU+S,EAAE,mBAIZ6hB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,QAAQglB,YAAa3kC,KAAK0kC,WAAY7kB,QAAS7f,KAAKulB,aAC/D6T,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,iBACXyZ,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,eAAgBH,EAAQI,yBAClDza,GAAakzB,EAAA54B,EAAAmM,cAACi4B,EAAA,EAAD,CAAW39B,OAAQA,EAAQC,UAAWA,EAAWhB,UAAWA,IAC1EkzB,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,iBACVhF,GACGye,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,sBAAuBH,EAAQK,kBAAmBjG,GAEjFye,EAAA54B,EAAAmM,cAAA,OAAKgT,UAAU,0BAA0Bnb,aAxD7Csb,IAAMC,YAqEpB4G,EAAUC,YACZ7F,IA1EW,SAAAC,GAAK,OAAAlhB,OAAA+kC,EAAA,EAAA/kC,CAAA,GACbohB,YAAaF,KAyEG,CAAEmG,WAAW,IAChCC,eAGWT,MAAQ6d,mJClFjBM,qNAqBFrJ,wBAA0B,SAAA96B,GAAU,IAAAwe,EACStf,EAAKuf,MAAtCnY,EADwBkY,EACxBlY,OAAQC,EADgBiY,EAChBjY,UAAWhB,EADKiZ,EACLjZ,UAC3B,GAAKA,EAAL,CAFgC,IAIxBrB,EAAUqB,EAAVrB,MACHA,GAEDlE,EAAOsG,SAAWA,GAAUtG,EAAOuG,YAAcA,GAAavG,EAAOqH,SAAWnD,EAAMlC,IACtF9C,EAAKwhB,mGA3BTzhB,IAAU0hB,GAAG,qCAAsCthB,KAAKy7B,yBACxD77B,IAAU0hB,GAAG,iCAAkCthB,KAAKy7B,yBACpD77B,IAAU0hB,GAAG,oCAAqCthB,KAAKy7B,yBACvD77B,IAAU0hB,GAAG,wBAAyBthB,KAAKy7B,yBAC3C77B,IAAU0hB,GAAG,mCAAoCthB,KAAKy7B,yBACtD77B,IAAU0hB,GAAG,iCAAkCthB,KAAKy7B,yBACpD77B,IAAU0hB,GAAG,qCAAsCthB,KAAKy7B,wEAIxD77B,IAAUoC,eAAe,qCAAsChC,KAAKy7B,yBACpE77B,IAAUoC,eAAe,iCAAkChC,KAAKy7B,yBAChE77B,IAAUoC,eAAe,oCAAqChC,KAAKy7B,yBACnE77B,IAAUoC,eAAe,wBAAyBhC,KAAKy7B,yBACvD77B,IAAUoC,eAAe,mCAAoChC,KAAKy7B,yBAClE77B,IAAUoC,eAAe,iCAAkChC,KAAKy7B,yBAChE77B,IAAUoC,eAAe,qCAAsChC,KAAKy7B,0DAe/D,IAAAnb,EACoCtgB,KAAKof,MAAtCnY,EADHqZ,EACGrZ,OAAQC,EADXoZ,EACWpZ,UAAWhB,EADtBoa,EACsBpa,UAC3B,IAAKA,EAAW,OAAO,KAFlB,IAIGrB,EAAUqB,EAAVrB,MACR,IAAKA,EAAO,OAAO,KAEnB,IAAM0c,EAAMjN,YAAOzP,GACb80B,EAAY5E,YAAmBlwB,GAC/BkgC,EAAczW,YAAarnB,EAAQC,GAEzC,OACIg1B,EAAA17B,EAAAmM,cAAA,OAAKgT,UAAU,cACXuc,EAAA17B,EAAAmM,cAAA,OACIgT,UAAWe,IACP,mBACA,CAAEskB,yBAA0BD,GAC5B,CAAEE,4BAA6B1jB,GAC/B,CAAEwY,gBAAiBJ,IAEvBhY,WAAW,EACXJ,IAAKA,EACLK,IAAI,aAvDA9B,IAAMC,YAoEf+kB,4JCjETI,cACF,SAAAA,EAAY9lB,GAAO,IAAAvf,EAAAC,OAAAs3B,EAAA,EAAAt3B,CAAAE,KAAAklC,IACfrlC,EAAAC,OAAAqwB,EAAA,EAAArwB,CAAAE,KAAAF,OAAAswB,EAAA,EAAAtwB,CAAAolC,GAAA/kC,KAAAH,KAAMof,KAsCV+lB,iCAAmC,SAACxkC,GAAW,IACnCsG,EAAWpH,EAAKuf,MAAhBnY,OACR,GAAKtG,EAAO0F,SACR1F,EAAO0F,UAAYY,EAAvB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAIvC,EAAO0F,SAC7BrC,GAELnE,EAAKykB,SAAS,CAAE8gB,QAASttB,YAAY9T,OA/CtBnE,EAkDnBwlC,kCAAoC,SAAC1kC,GAAW,IACpCsG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAEL,OAAQrD,EAAO2kC,MAAM,UACjB,IAAK,sCAE0B,uBAAvBthC,EAAK6N,KAAK,UACa,uBAAvB7N,EAAK6N,KAAK,UAEVhS,EAAKykB,SAAS,CAAE8gB,QAASttB,YAAY9T,KAEzC,MAEJ,IAAK,wCAE0B,oBAAvBA,EAAK6N,KAAK,UACa,mBAAvB7N,EAAK6N,KAAK,UAEVhS,EAAKykB,SAAS,CAAE8gB,QAASttB,YAAY9T,OAtElCnE,EA6EnB0lC,2BAA6B,WACzB1lC,EAAKykB,SAAS,CAAE8gB,SAAUvlC,EAAKmkB,MAAMohB,UACrCvlC,EAAK2lC,wCA/EU3lC,EAkFnB4lC,4BAA8B,WAAM,IACxBx+B,EAAWpH,EAAKuf,MAAhBnY,OACAm+B,EAAYvlC,EAAKmkB,MAAjBohB,QACFphC,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,IACAA,EAAKgU,uBAEUF,YAAY9T,KACZohC,GAApB,CAIA,IAAMM,EAAUN,EAAUO,IAAkBC,IACtCC,EAAuB/lC,OAAAg6B,EAAA,EAAAh6B,CAAA,GACtBkE,EAAKgU,sBADiB,CAEzBD,sBAAsB,EACtBE,SAAUytB,IAGd7jC,IAAgBiJ,KAAK,CACjB/B,QAAS,8BACT1C,QAASY,EACT+Q,sBAAuB6tB,MAxGZ,IAGP5+B,EAAWmY,EAAXnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACrBm+B,EAAUttB,YAAY9T,GALb,OAOfnE,EAAKmkB,MAAQ,CACT8hB,WAAY7+B,EACZm+B,QAASA,GAGbvlC,EAAK2lC,qCAAuCO,YAASlmC,EAAK4lC,4BAA6BO,KAZxEnmC,mFA8BfgT,IAAUyO,GAAG,iCAAkCthB,KAAKmlC,kCACpDhtB,IAAiBmJ,GAAG,kCAAmCthB,KAAKqlC,kFAI5DxyB,IAAU7Q,eAAe,iCAAkChC,KAAKmlC,kCAChEhtB,IAAiBnW,eAAe,kCAAmChC,KAAKqlC,sFArB5CjmB,EAAO4E,GACnC,GAAI5E,EAAMnY,SAAW+c,EAAM8hB,WAAY,KAC3B7+B,EAAWmY,EAAXnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACrBm+B,EAAUttB,YAAY9T,GAE5B,MAAO,CACH8hC,WAAY1mB,EAAMnY,OAClBm+B,QAASA,GAGjB,OAAO,YA3BoBtlB,IAAMC,WA8G1BmlB,ykBCnGTe,8MACFjiB,MAAQ,CACJkiB,SAAU,QAGdC,gBAAkB,SAAA76B,GACdzL,EAAKykB,SAAS,CAAE4hB,SAAU56B,EAAM86B,mBAGpCC,gBAAkB,WACdxmC,EAAKykB,SAAS,CAAE4hB,SAAU,UAG9BI,kBAAoB,WAChBzmC,EAAKwmC,kBADiB,IAGdE,EAAkB1mC,EAAKuf,MAAvBmnB,cACHA,GAELtN,WAAW,kBAAMsN,KAAiBrN,SAGtCsN,qBAAuB,WACnB3mC,EAAKwmC,kBADoB,IAGjBI,EAAqB5mC,EAAKuf,MAA1BqnB,iBACHA,GAELxN,WAAW,kBAAMwN,KAAoBvN,SAGzCwN,iBAAmB,WACf7mC,EAAKwmC,kBADgB,IAGbM,EAAiB9mC,EAAKuf,MAAtBunB,aACHA,GAELA,6EAGK,IAAAxnB,EAC0Bnf,KAAKof,MAA5BmB,EADHpB,EACGoB,QAAShJ,EADZ4H,EACY5H,EAAGtQ,EADfkY,EACelY,OACZi/B,EAAalmC,KAAKgkB,MAAlBkiB,SAER,OACIxmB,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACImf,UAAWY,EAAQsmB,WACnBC,aAAW,SACX58B,KAAM8S,QAAQkpB,GACdrmB,QAAS7f,KAAKmmC,iBACdzmB,EAAAlf,EAAAmM,cAACo6B,EAAAvmC,EAAD,CAAgBmf,UAAU,0BAE9BD,EAAAlf,EAAAmM,cAACq6B,EAAAxmC,EAAD,CACImC,GAAG,cACHujC,SAAUA,EACVh8B,KAAM8S,QAAQkpB,GACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBzd,aAAc,CACVC,SAAU,MACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,SACVC,WAAY,SAEhBL,QAASvpB,KAAKqmC,iBACd3mB,EAAAlf,EAAAmM,cAACqd,EAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKsmC,kBAAmBc,UAAWlqB,aAAcjW,IAChEyY,EAAAlf,EAAAmM,cAAC06B,EAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC26B,EAAA9mC,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,EAAA/mC,EAAD,CAAcm+B,QAASpnB,EAAE,kBAE7BmI,EAAAlf,EAAAmM,cAACqd,EAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKwmC,qBAAsBY,UAAWjqB,aAAiBlW,IACtEyY,EAAAlf,EAAAmM,cAAC06B,EAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC00B,EAAA7gC,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,EAAA/mC,EAAD,CAAcm+B,QAASpnB,EAAE,sBAE3BkE,aAAcxU,IACZyY,EAAAlf,EAAAmM,cAACqd,EAAAxpB,EAAD,CAAUqf,QAAS7f,KAAK0mC,iBAAkBU,UAAWhqB,aAAanW,IAC9DyY,EAAAlf,EAAAmM,cAAC06B,EAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC66B,GAAAhnC,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,EAAA/mC,EAAD,CAAcm+B,QAASpnB,EAAE,oBAtF1BuI,IAAMC,WA2GlB4G,GALCC,YACZ7F,IA7GW,CACX8lB,WAAY,CACR/f,OAAQ,UA2GO,CAAEK,WAAW,IAChCC,cAGWT,CAAQsf,gICnIhB,SAASwB,GAAUC,GAAqB,IAAfC,EAAejmC,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GAC3C,GAAKgmC,EAAL,CAEA,GAAIC,GAASD,EAAKE,YAAcF,EAAKE,WAAW3hC,OAAS,EAAG,CACxD,IAAM4hC,EAAWH,EAAKE,WAAWF,EAAKE,WAAW3hC,OAAS,GACpD6hC,EAAQ/iC,SAASgjC,cACvBD,EAAME,SAASH,EAAUA,EAAS5hC,QAClC6hC,EAAMG,UAAS,GAEf,IAAMC,EAAYl+B,OAAOm+B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEnBJ,EAAKY,UAAYZ,EAAKa,aAG1Bb,EAAKc,sBCfHh3B,GACS,EADTA,GAEK,GAFLA,GAGI,GAHJA,GAIG,GAJHA,GAKM,GALNA,GAOS,GAPTA,GAQO,GARPA,GASU,GATVA,GAUS,GAGFi3B,GAAQ,CACjBC,QAAS,GACTC,aAAc,GACdC,UAHiB,SAGP7e,GACN,MAA0C,qBAA5B/pB,KAAK0oC,QAAQ3e,EAAE8e,UAEjCC,eANiB,SAMF/e,GACX,MAA+C,qBAAjC/pB,KAAK2oC,aAAa5e,EAAE8e,WAI1CJ,GAAMC,QAAQl3B,KAAqB,EACnCi3B,GAAMC,QAAQl3B,KAAiB,EAC/Bi3B,GAAMC,QAAQl3B,KAAgB,EAC9Bi3B,GAAMC,QAAQl3B,KAAe,EAC7Bi3B,GAAMC,QAAQl3B,KAAkB,EAEhCi3B,GAAME,aAAan3B,KAAmB,EACtCi3B,GAAME,aAAan3B,KAAqB,EACxCi3B,GAAME,aAAan3B,KAAqB,EACxCi3B,GAAME,aAAan3B,KAAsB,wBCFnCu3B,uBACF,SAAAA,EAAY3pB,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA+oC,IACflpC,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAipC,GAAA5oC,KAAAH,KAAMof,KASVsM,QAAU,WACN,OAAO7rB,EAAKmpC,cAAc1b,QAAQ2b,WAXnBppC,EAcnB2oC,MAAQ,WAAmB,IAAlBb,EAAkBjmC,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GAGvB+lC,GAFa5nC,EAAKmpC,cAAc1b,QAEhBqa,IAjBD9nC,EAoBnBqpC,aAAe,WAAM,IAAA/pB,EACYtf,EAAKuf,MAA1BwG,EADSzG,EACTyG,OAAQujB,EADChqB,EACDgqB,SACXvjB,GACAujB,GAELA,EAASvjB,EAAOjjB,KAzBD9C,EA4BnBupC,YAAc,SAAA99B,GAAS,IACXsa,EAAW/lB,EAAKuf,MAAhBwG,OAERta,EAAMkd,iBAEN,IAAMkf,EAAO7nC,EAAKmpC,cAAc1b,QAC1BrnB,EAASyhC,EAAK2B,QAAQpjC,OAEtBwX,GADYiqB,EAAK2B,QAAQC,UAClBzpC,EAAK6rB,WAElB7rB,EAAKykB,SAAS,CACVilB,aAActjC,EAASwX,EAAKxX,SAGhCpE,KAAgBiH,aAAa,CACzBC,QAAS,yBACTpG,GAAIijB,EAAOjjB,GACX8a,UA7CW5d,EAiDnB2pC,cAAgB,SAAAl+B,GACZ,IAAMo8B,EAAO7nC,EAAKmpC,cAAc1b,QAC1Bgc,EAAY5B,EAAK2B,QAAQC,UAEzBrjC,EADYpG,EAAK6rB,UACEzlB,OAErBwjC,GAAe,EACbvB,EAAYl+B,OAAOm+B,eACnBS,EAAYH,GAAMG,UAAUt9B,GAC5Bw9B,EAAiBL,GAAMK,eAAex9B,GAM5C,OAJI48B,IACAuB,IAAiBvB,EAAUwB,YAGvBp+B,EAAMkM,KACV,IAAK,YAED,IADa3X,EAAK6rB,UACP,KAAApL,EACsBzgB,EAAKuf,MAA1BwG,EADDtF,EACCsF,OAAQujB,EADT7oB,EACS6oB,SAMhB,OALIA,GACAA,EAASvjB,EAAOjjB,IAAI,GAGxB2I,EAAMkd,kBACC,EAGX,MAEJ,IAAK,QAAS,IAAAL,EACsBtoB,EAAKuf,MAA7BwG,EADEuC,EACFvC,OAAQ+jB,EADNxhB,EACMwhB,YAMhB,OALI/jB,GAAU+jB,GACVA,EAAY/jB,EAAOjjB,IAGvB2I,EAAMkd,kBACC,EAEX,IAAK,UACD,IAAM0f,EAAYl+B,OAAOm+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMC,EAAanC,EAAKE,YAAcF,EAAKE,WAAW3hC,OAAS,EAAIyhC,EAAKE,WAAW,GAAK,KAExF,IAAKiC,GAAe3B,EAAU4B,aAAeD,IAAe3B,EAAU6B,aAAe,KAAAphB,EACjD9oB,EAAKuf,MAA7BwG,EADyE+C,EACzE/C,OAAQokB,EADiErhB,EACjEqhB,YAMhB,OALIA,GACAA,EAAYpkB,EAAOjjB,IAGvB2I,EAAMkd,kBACC,EAGX,MAEJ,IAAK,YACD,IAAM0f,EAAYl+B,OAAOm+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMK,EACFvC,EAAKE,YAAcF,EAAKE,WAAW3hC,OAAS,EAAIyhC,EAAKE,WAAWF,EAAKE,WAAW3hC,OAAS,GAAK,KAElG,IAAKgkC,GAAc/B,EAAU4B,aAAeG,GAAa/B,EAAU6B,eAAiBE,EAAUhkC,OAAS,KAAA67B,EACnEjiC,EAAKuf,MAA7BwG,EAD2Fkc,EAC3Flc,OAAQ+jB,EADmF7H,EACnF6H,YAMhB,OALIA,GACAA,EAAY/jB,EAAOjjB,IAGvB2I,EAAMkd,kBACC,GAOnB,SAAIogB,IAAaE,OAIb7iC,GAAUqjC,IAAcG,KACxBn+B,EAAMkd,kBACC,KAvII3oB,EA6InBqqC,YAAc,SAAA5+B,GACVA,EAAMkd,iBAEN,IACM8gB,EADOzpC,EAAKmpC,cAAc1b,QACT+b,QAAQC,UAEzBpB,EAAYl+B,OAAOm+B,eACnBgC,EAAkBjC,EAAYA,EAAUwB,WAAa,GAErDT,EAAYppC,EAAK6rB,UACvB,KAAIud,EAAUhjC,OAASiiC,EAAUjiC,QAAUqjC,GAA3C,CAEA,IAAIc,EAAY9+B,EAAM++B,cAAcC,QAAQ,cACvCF,IAELA,EAAYA,EAAUG,QAAQ,OAAQ,MAAMA,QAAQ,KAAM,KAEtDtB,EAAUhjC,OAASkkC,EAAgBlkC,OAASmkC,EAAUnkC,OAASqjC,IAC/Dc,EAAYA,EAAUI,OAAO,EAAGlB,EAAYL,EAAUhjC,OAASkkC,EAAgBlkC,SAEnFlB,SAAS0lC,YAAY,cAAc,EAAOL,MA9J1CvqC,EAAKmpC,cAAgBlpB,IAAMggB,YAE3BjgC,EAAKmkB,MAAQ,CACTulB,aAAcmB,MANH7qC,wEAoKV,IAAA8jC,EACkB3jC,KAAKof,MAApBmB,EADHojB,EACGpjB,QAAShJ,EADZosB,EACYpsB,EACTgyB,EAAiBvpC,KAAKgkB,MAAtBulB,aAER,OACI7pB,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sBACXD,EAAAlf,EAAAmM,cAAA,OACIwzB,IAAKngC,KAAKgpC,cACVrmC,GAAG,0BACHgoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAatzB,EAAE,UACfuzB,cAAaC,KACbC,kBAAiBN,KACjBO,QAASjrC,KAAKopC,YACd8B,UAAWlrC,KAAKwpC,cAChB2B,QAASnrC,KAAKkqC,cAElBxqB,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oCACXD,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQsmB,WAAYhnB,QAAS7f,KAAKkpC,cACrDxpB,EAAAlf,EAAAmM,cAACy+B,GAAA5qC,EAAD,CAAWshB,SAAS,YAG5BpC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,mCAAD5gB,OAAAsmB,GAAA,EAAAtmB,CAAA,GAAwCygB,EAAQ8F,aAAc,MACvFkjB,GAAgBwB,KAAqBM,MAClC3rB,EAAAlf,EAAAmM,cAAC2+B,GAAA,EAAD,CACIC,MAAM,SACN5rB,UAAWY,EAAQirB,YACnBzpB,MAAOwnB,GAAgB,EAAI,gBAAkB,QAC7C9iB,QAAQ,aACP8iB,WAnMMzpB,IAAMC,YAyNtB4G,GAPCC,YACZ6kB,eACA1qB,IAlOW,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChB+mC,WAAY,CACRzjB,QAAS,GAEbooB,YAAa,CACTxoB,SAAU,WACV+D,MAAO,GACPC,OAAQ,EACR0kB,SAAU,GACVC,WAAY,SAEbzkB,aAAYlG,MAwNfoG,cACAwkB,eAGWjlB,CAAQoiB,ICtPhB,SAAS8C,GAAY/jB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,IAQJ,SAAyBD,GACrB,QAAKA,GAEEA,EAAS3iB,QAAU6lC,KAXrBC,CAAgBnjB,GAAW,OAAO,EAEvC,IAAMojB,EAAmBnjB,EAAQld,OAAO,SAAAD,GAAC,OAAIsR,QAAQtR,EAAE+R,QACvD,QAAIuuB,EAAiB/lC,QAAU,IAExB+lC,EAAiB9iB,MAAM+iB,IASlC,SAASA,GAAcrmB,GACnB,QAAKA,MACAA,EAAOnI,MAELmI,EAAOnI,KAAKxX,QAAU8kC,oBC8E3BprC,GAAQ,gBAlGV,SAAAusC,IAAc,IAAArsC,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAksC,IACVrsC,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAosC,GAAA/rC,KAAAH,QAQJI,SAAW,SAAAO,KATGd,EAWd8B,eAAiB,SAAAhB,GACb,OAAQA,EAAO,UACX,IAAK,sBACDd,EAAKoB,IAAI,CACL0B,GAAI6V,KAAKI,MACTgQ,SAAU,GACVC,QAAS,KAGbhpB,EAAKuB,KAAK,sBAAuBT,GACjC,MAEJ,IAAK,2BAA4B,IACrBioB,EAAajoB,EAAbioB,SAER/oB,EAAKy7B,OAAOz7B,EAAKioB,KAAM,CAAEc,aAEzB/oB,EAAKuB,KAAK,2BAA4BT,GACtC,MAEJ,IAAK,yBAA0B,IACnBgC,EAAahC,EAAbgC,GAAI8a,EAAS9c,EAAT8c,KACJoL,EAAYhpB,EAAKioB,KAAjBe,QAERhpB,EAAKy7B,OAAOz7B,EAAKioB,KAAM,CAAEe,QAASA,EAAQpb,IAAI,SAAA/B,GAAC,OAAKA,EAAE/I,KAAOA,EAAT7C,OAAAmhB,EAAA,EAAAnhB,CAAA,GAAmB4L,EAAnB,CAAsB+R,SAAtB3d,OAAAmhB,EAAA,EAAAnhB,CAAA,GAAoC4L,OAExF7L,EAAKuB,KAAK,yBAA0BT,GACpC,MAEJ,IAAK,4BAA6B,IACtBilB,EAAWjlB,EAAXilB,OACAiD,EAAYhpB,EAAKioB,KAAjBe,QAERhpB,EAAKy7B,OAAOz7B,EAAKioB,KAAM,CAAEe,QAAO,GAAA5d,OAAAnL,OAAAqpB,GAAA,EAAArpB,CAAM+oB,GAAN,CAAejD,MAC/C/lB,EAAKuB,KAAK,4BAA6BT,GACvC,MAEJ,IAAK,+BAAgC,IACzBgC,EAAOhC,EAAPgC,GACAkmB,EAAYhpB,EAAKioB,KAAjBe,QAERhpB,EAAKy7B,OAAOz7B,EAAKioB,KAAM,CAAEe,QAASA,EAAQld,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAOA,MAC/D9C,EAAKuB,KAAK,+BAAgCT,GAC1C,MAEJ,IAAK,yBACDd,EAAKoB,IAAI,MAETpB,EAAKuB,KAAK,yBAA0BT,KA3DlCd,EAmEd+B,iBAAmB,WACfC,KAAgBC,YAAY,SAAUjC,EAAKO,UAC3CyB,KAAgBC,YAAY,eAAgBjC,EAAK8B,iBArEvC9B,EAwEdkC,oBAAsB,WAClBF,KAAgBG,eAAe,SAAUnC,EAAKO,UAC9CyB,KAAgBG,eAAe,eAAgBnC,EAAK8B,iBAvEpD9B,EAAKioB,KAAO,KAEZjoB,EAAK+B,mBACL/B,EAAKmJ,gBAAgBC,KANXpJ,sEA6EPssC,EAASC,GACZpsC,KAAKiB,IAAInB,OAAOw7B,OAAO,GAAI6Q,EAASC,gCAGpCtkB,GACA9nB,KAAK8nB,KAAOA,gDAIZ,IAAK9nB,KAAK8nB,KAAM,OAAO,KACvB,IAAK+jB,GAAY7rC,KAAK8nB,MAAO,OAAO,KAFlB,IAAAukB,EAGYrsC,KAAK8nB,KAEnC,MAAO,CACH/e,QAAS,mBACT6f,SAPcyjB,EAGVzjB,SAKJC,QARcwjB,EAGAxjB,QAKGld,OAAO,SAAAD,GAAC,OAAIsR,QAAQtR,EAAE+R,QAAOhQ,IAAI,SAAA/B,GAAC,OAAIA,EAAE+R,qBA9F7CzR,eAoGxBhC,OAAO8d,KAAOnoB,GACCA,UCrDT2sC,uBACF,SAAAA,EAAYltB,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAssC,IACfzsC,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAwsC,GAAAnsC,KAAAH,KAAMof,KA8BVmtB,0BAA4B,SAAA5rC,GAAU,IAC1BmnB,EAASokB,GAATpkB,KAERjoB,EAAKykB,SAAS,CACVkoB,SAAS,EACTjD,aAAckD,KACd3kB,UArCWjoB,EAyCnB6sC,+BAAiC,SAAA/rC,GAAU,IAC/BmnB,EAASokB,GAATpkB,KAEF4f,EAAO7nC,EAAK8sC,YAAYrf,QACxBrnB,EAASyhC,EAAK2B,QAAQpjC,OACtBgjC,EAAYvB,EAAKuB,UAEvBppC,EAAKykB,SAAS,CACVilB,aAActjC,EAASgjC,EAAUhjC,OACjC6hB,UAlDWjoB,EAsDnB+sC,uBAAyB,SAAAjsC,GAAU,IACvBmnB,EAASokB,GAATpkB,KAERjoB,EAAKykB,SAAS,CAAEwD,UAzDDjoB,EA4DnBgtC,gCAAkC,SAAAlsC,GAAU,IAChCmnB,EAASokB,GAATpkB,KAERjoB,EAAKykB,SAAS,CAAEwD,QAAQ,WACpBmR,WAAW,WACMp5B,EAAKitC,cAAc5pC,IAAI4kB,EAAKe,QAAQ5iB,OAAS,GAErDuiC,OAAM,QAnEJ3oC,EAkFnB2pC,cAAgB,SAAAl+B,GACZ,IAAMo8B,EAAO7nC,EAAK8sC,YAAYrf,QACxBgc,EAAY5B,EAAK2B,QAAQC,UAEzBrjC,EADYyhC,EAAKuB,UACEhjC,OAErBwjC,GAAe,EACbvB,EAAYl+B,OAAOm+B,eACnBS,EAAYH,GAAMG,UAAUt9B,GAC5Bw9B,EAAiBL,GAAMK,eAAex9B,GAM5C,OAJI48B,IACAuB,IAAiBvB,EAAUwB,YAGvBp+B,EAAMkM,KACV,IAAK,QACD,IAAKlM,EAAMyhC,SAIP,OAHAltC,EAAKmtC,sBAAsB,GAE3B1hC,EAAMkd,kBACC,EAGX,MAEJ,IAAK,YACD,IAAM0f,EAAYl+B,OAAOm+B,eACzB,IAAKD,EAAW,MAChB,IAAKA,EAAU0B,YAAa,MAE5B,IAAMK,EACFvC,EAAKE,YAAcF,EAAKE,WAAW3hC,OAAS,EAAIyhC,EAAKE,WAAWF,EAAKE,WAAW3hC,OAAS,GAAK,KAElG,IAAKgkC,GAAc/B,EAAU4B,aAAeG,GAAa/B,EAAU6B,eAAiBE,EAAUhkC,OAI1F,OAHApG,EAAKmtC,sBAAsB,GAE3B1hC,EAAMkd,kBACC,EAOnB,SAAIogB,IAAaE,OAIb7iC,GAAUqjC,IAAcG,KACxBn+B,EAAMkd,kBACC,KArII3oB,EA2InBqqC,YAAc,SAAA5+B,GACVA,EAAMkd,iBAEN,IAAMkf,EAAO7nC,EAAK8sC,YAAYrf,QACxBgc,EAAY5B,EAAK2B,QAAQC,UAEzBpB,EAAYl+B,OAAOm+B,eACnBgC,EAAkBjC,EAAYA,EAAUwB,WAAa,GAErDT,EAAYvB,EAAKuB,UACvB,KAAIA,EAAUhjC,OAASiiC,EAAUjiC,QAAUqjC,GAA3C,CAEA,IAAIc,EAAY9+B,EAAM++B,cAAcC,QAAQ,cACvCF,IAEDnB,EAAUhjC,OAASkkC,EAAgBlkC,OAASmkC,EAAUnkC,OAASqjC,IAC/Dc,EAAYA,EAAUI,OAAO,EAAGlB,EAAYL,EAAUhjC,OAASkkC,EAAgBlkC,SAEnFlB,SAAS0lC,YAAY,cAAc,EAAOL,MA7J3BvqC,EAgKnBupC,YAAc,SAAA99B,GACVA,EAAMkd,iBAEN,IAAMkf,EAAO7nC,EAAK8sC,YAAYrf,QAGxB2b,EAAYvB,EAAKuB,UAGL,SAFAvB,EAAKuF,YAGnBvF,EAAKuB,UAAY,IAOrBpnC,KAAgBiH,aAAa,CACzBC,QAAS,2BACT6f,SAAUqgB,KAnLCppC,EAuLnBqtC,gBAAkB,WAAM,IACZplB,EAASjoB,EAAKmkB,MAAd8D,KACR,GAAKA,KAEeA,EAAZe,QACI5iB,QAAUknC,MAAtB,CAEA,IAAMvnB,EAAS,CACXjjB,GAAI6V,KAAKI,MACT6E,KAAM,IAGV5b,KAAgBiH,aAAa,CACzBC,QAAS,4BACT6c,aArMW/lB,EAyMnButC,mBAAqB,SAACzqC,GAA0BjB,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GAExC7B,EAAKwtC,wBAAwB1qC,GAE7B9C,EAAKqpC,aAAavmC,IA7MP9C,EAiNnBqpC,aAAe,SAAAvmC,GACXd,KAAgBiH,aAAa,CACzBC,QAAS,+BACTpG,QApNW9C,EAwNnBwtC,wBAA0B,SAAA1qC,GAAM,IACpBmlB,EAASjoB,EAAKmkB,MAAd8D,KACR,GAAKA,EAAL,CAOA,IAT4B,IAIpBe,EAAYf,EAAZe,QAEFrW,EAAQqW,EAAQ2I,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOA,IACxC2qC,EAAY96B,EAAQ,EACtB+6B,GAAe,EACVxnC,EAAIyM,EAAOzM,EAAI8iB,EAAQ5iB,OAAQF,IAAK,CAEzC,GADiB8iB,EAAQ9iB,GAAjB0X,KACE,CACN8vB,GAAe,EACf,OAIJA,GACA1tC,EAAKutC,mBAAmBzqC,GAG5B,IAAM6qC,EAAW3tC,EAAKitC,cAAc5pC,IAAIoqC,GACxC,GAAKE,EAOLA,EAAShF,OAAM,QAJXf,GAFgB5nC,EAAK8sC,YAAYrf,SAEd,KAjPRztB,EAwPnB4tC,sBAAwB,SAAA9qC,GAAM,IAClBmlB,EAASjoB,EAAKmkB,MAAd8D,KACR,GAAKA,EAAL,CAF0B,IAOpBwlB,EAHcxlB,EAAZe,QAEc2I,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOA,IACpB,EAEpB6qC,EAAW3tC,EAAKitC,cAAc5pC,IAAIoqC,GACxC,GAAKE,EAOLA,EAAShF,OAAM,QAJXf,GAFgB5nC,EAAK8sC,YAAYrf,SAEd,KArQRztB,EA4QnBmtC,sBAAwB,SAAArqC,GAAM,IAClBmlB,EAASjoB,EAAKmkB,MAAd8D,KACR,GAAKA,EAAL,CAF0B,IAIlBe,EAAYf,EAAZe,QAEFrW,EAAQqW,EAAQ2I,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOA,IACxCgvB,EAAYnf,EAAQ,EAEpBk7B,EAAW7tC,EAAKitC,cAAc5pC,IAAIyuB,GACxC,GAAK+b,EAULA,EAASlF,MAAMkF,GAAU,OAVzB,CACI,IAAMjwB,EAAOjL,GAAS,GAAKA,EAAQqW,EAAQ5iB,OAAS4iB,EAAQrW,GAAOiL,KAAO,GAC1E,GAAIoL,EAAQ5iB,SAAWwX,EACnB,OAGJ5d,EAAKqtC,qBA5RMrtC,EAmSnB8tC,QAAU,WAAM,IACJ7lB,EAASjoB,EAAKmkB,MAAd8D,KACR,GAAKA,EAAL,CAFY,IAIJe,EAAYf,EAAZe,QAEF+kB,EAAWT,KAAyBtkB,EAAQ5iB,OAElD,OAAI2nC,GAAY,EACL,gDAEM,IAAbA,EACO,6BAGX,eAAA3iC,OAAsBkiC,KAAyBtkB,EAAQ5iB,OAAvD,oBAlTepG,EAqTnBguC,YAAc,YF9UX,SAAqB/lB,GACxB,IAAKA,EAAM,OAAO,EADY,IAGtBc,EAAsBd,EAAtBc,SAAUC,EAAYf,EAAZe,QAClB,QAAID,GAEGC,EAAQpd,KAAK,SAAAC,GAAC,OAAIsR,QAAQtR,EAAE+R,QE2U3BqwB,CAFajuC,EAAKmkB,MAAd8D,MAKJjoB,EAAKkuC,yBAFLluC,EAAKykB,SAAS,CAAEkoB,SAAS,KAzTd3sC,EA+TnBmuC,WAAa,WAAM,IACPC,EAAWpuC,EAAKuf,MAAhB6uB,OAEFC,EAAmBhC,GAAUiC,sBAC9BD,IAELD,EAAOC,GAEPruC,EAAKkuC,2BAvUUluC,EA0UnBuuC,wBAA0B,WACtBvuC,EAAKykB,SAAS,CAAEkoB,SAAS,KA3UV3sC,EA8UnBkuC,uBAAyB,WACrBluC,EAAKuuC,0BAELvsC,KAAgBiH,aAAa,CACzBC,QAAS,4BA/UblJ,EAAK8sC,YAAc7sB,IAAMggB,YACzBjgC,EAAKitC,cAAgB,IAAIzjC,IAEzBxJ,EAAKmkB,MAAQ,CACT8D,KAAM,KACN0kB,SAAS,EACTjD,aAAckD,MATH5sC,mFAcfqsC,GAAU5qB,GAAG,yBAA0BthB,KAAK4sC,wBAC5CV,GAAU5qB,GAAG,+BAAgCthB,KAAK4sC,wBAClDV,GAAU5qB,GAAG,sBAAuBthB,KAAKusC,2BACzCL,GAAU5qB,GAAG,4BAA6BthB,KAAK6sC,iCAC/CX,GAAU5qB,GAAG,yBAA0BthB,KAAK4sC,wBAC5CV,GAAU5qB,GAAG,2BAA4BthB,KAAK0sC,+EAI9CR,GAAUlqC,eAAe,yBAA0BhC,KAAK4sC,wBACxDV,GAAUlqC,eAAe,+BAAgChC,KAAK4sC,wBAC9DV,GAAUlqC,eAAe,sBAAuBhC,KAAKusC,2BACrDL,GAAUlqC,eAAe,4BAA6BhC,KAAK6sC,iCAC3DX,GAAUlqC,eAAe,yBAA0BhC,KAAK4sC,wBACxDV,GAAUlqC,eAAe,2BAA4BhC,KAAK0sC,2EA4C3C3nB,EAAWC,EAAWC,GAAU,IAAAxa,EAAAzK,KAC9BA,KAAKgkB,MAAd8D,OAEK9C,EAAU8C,MACnBmR,WAAW,WACPwO,GAAUh9B,EAAKkiC,YAAYrf,SAAS,IACrC,oCAwQF,IAAA+gB,EAAAruC,KAAAmf,EACkBnf,KAAKof,MAApBmB,EADHpB,EACGoB,QAAShJ,EADZ4H,EACY5H,EADZwM,EAEmC/jB,KAAKgkB,MAArCulB,EAFHxlB,EAEGwlB,aAAciD,EAFjBzoB,EAEiByoB,QAAS1kB,EAF1B/D,EAE0B+D,KAC/B,IAAKA,EAAM,OAAO,KAElB,IAAMe,EAAUf,EAAOA,EAAKe,QAAU,GAEtC7oB,KAAK8sC,cAAc9tB,QACnB,IAAM/b,EAAQ4lB,EAAQpb,IAAI,SAAC/B,EAAG3F,GAAJ,OACtB2Z,EAAAlf,EAAAmM,cAAC2hC,GAAD,CACInO,IAAK,SAAAoO,GAAE,OAAIF,EAAKvB,cAAc7rC,IAAI8E,EAAGwoC,IACrC/2B,IAAK9L,EAAE/I,GACPijB,OAAQla,EACRy9B,SAAUkF,EAAKjB,mBACfpD,YAAaqE,EAAKZ,sBAClB9D,YAAa0E,EAAKrB,0BAIpBwB,EAAerB,KAAyBtkB,EAAQ5iB,OAAS,EACzDs1B,EAAOv7B,KAAK2tC,UAElB,OACIjuB,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACImf,UAAWY,EAAQkuB,WACnBvkC,MAAI,EACJggB,mBAAoB,EACpBX,QAASvpB,KAAK6tC,YACd1jB,kBAAgB,gBAChBzK,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,gBAAgB4U,EAAE,YAClCmI,EAAAlf,EAAAmM,cAAC0d,EAAA7pB,EAAD,CAAe+f,QAAS,CAAEgC,KAAMhC,EAAQmuB,cACpChvB,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,qCACXD,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYuhB,MAAM,UAAU0E,QAAQ,YAAY7Z,MAAO,CAAEgiC,SAAU,IAC9Dr3B,EAAE,aAENgyB,GAAgBuC,KAAuB+C,MACpCnvB,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYuhB,MAAOwnB,GAAgB,EAAI,gBAAkB,QAAS9iB,QAAQ,aACrE8iB,IAIb7pB,EAAAlf,EAAAmM,cAAA,OACIwzB,IAAKngC,KAAK2sC,YACVhqC,GAAG,8BACHgoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAatzB,EAAE,gBACfuzB,cAAagB,KACbd,kBAAiByB,KACjBtB,QAASnrC,KAAKkqC,YACdgB,UAAWlrC,KAAKwpC,cAChByB,QAASjrC,KAAKopC,cAElB1pB,EAAAlf,EAAAmM,cAACmiC,GAAAtuC,EAAD,CAASmf,UAAWY,EAAQwuB,cAC5BrvB,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYuhB,MAAM,UAAU0E,QAAQ,aAC/BlP,EAAE,gBAEPmI,EAAAlf,EAAAmM,cAACqiC,GAAAxuC,EAAD,CAAM+f,QAAS,CAAEgC,KAAMhC,EAAQ0uB,WAC1BhsC,EACAurC,GACG9uB,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CACIse,UAAU,EACVa,UAAWY,EAAQ4uB,SACnBC,QAAM,EACNvvB,QAAS7f,KAAKktC,iBACdxtB,EAAAlf,EAAAmM,cAAC46B,EAAA/mC,EAAD,CAAc6uC,mBAAiB,EAAC1Q,QAASpnB,EAAE,mBAIvDmI,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,KAAa+6B,IAEjB7b,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUlC,QAAS7f,KAAK6tC,aACjCt2B,EAAE,WAENs0B,GAAY/jB,IACTpI,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUlC,QAAS7f,KAAKguC,YACjCz2B,EAAE,WAKnBmI,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACImf,UAAWY,EAAQkuB,WACnBvkC,KAAMsiC,EACNtiB,mBAAoB,EACpBX,QAASvpB,KAAKouC,wBACdjkB,kBAAgB,gBAChBzK,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,gBAAgB4U,EAAE,yBAClCmI,EAAAlf,EAAAmM,cAAC0d,EAAA7pB,EAAD,CAAe+f,QAAS,CAAEgC,KAAMhC,EAAQmuB,cAAgBn3B,EAAE,wBAC1DmI,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUlC,QAAS7f,KAAKouC,yBACjC72B,EAAE,WAEPmI,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUlC,QAAS7f,KAAK+tC,wBACjCx2B,EAAE,iBAvbAuI,IAAMC,YA2ctB4G,GAPCC,YACZ6kB,eACA1qB,IA3dW,SAAAC,GAAK,MAAK,CACrBytB,WAAY,CACR1sB,MAAOf,EAAM0d,QAAQjhB,KAAKkhB,SAE9B+P,YAAa,CACTj/B,MAAO,KAEXs/B,YAAa,CACTjoB,OAAQ,aAEZmoB,SAAU,CACNnoB,OAAQ,WAEZqoB,SAAU,CACN/rB,QAAS,YACTrB,MAAO,UACPpS,OAAQ,IAEZ2/B,eAAgB,MA0chBloB,cACAwkB,eAGWjlB,CAAQ2lB,mCC1ejBiD,sNACF1B,YAAc,WACVhsC,KAAgBiH,aAAa,CACzBC,QAAS,oBACT9B,OAAQpH,EAAKuf,MAAMnY,OACnBC,UAAW,6EAIV,IAAAiY,EACkCnf,KAAKof,MAApCmB,EADHpB,EACGoB,QAAStZ,EADZkY,EACYlY,OAAQC,EADpBiY,EACoBjY,UACzB,OAAKD,GACAC,EAGDwY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,+BACXD,EAAAlf,EAAAmM,cAAC6iC,GAAAhvC,EAAD,CAAWmf,UAAWY,EAAQkvB,aAElC/vB,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iCACXD,EAAAlf,EAAAmM,cAAC+iC,GAAA,EAAD,CAAOzoC,OAAQA,EAAQC,UAAWA,KAEtCwY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gCACXD,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQovB,gBAAiB7I,aAAW,QAAQjnB,QAAS7f,KAAK6tC,aAC7EnuB,EAAAlf,EAAAmM,cAACy+B,GAAA5qC,EAAD,SAbI,YAXCsf,IAAMC,YAqCpBgB,OA/CA,SAAAC,GAAK,MAAK,CACrByuB,UAAW,CACPrsB,QAAS,GACTrB,MAAOf,EAAM0d,QAAQjpB,OAAOisB,QAEhCiO,gBAAiB,CACb7oB,OAAQ,KAyCD/F,CAAmBwuB,IC1BnBK,cA3BX,SAAAA,EAAY3oC,GAASnH,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA4vC,GACjB5vC,KAAKiH,OAASA,EACdjH,KAAK6vC,WAAa,2DAGZp6B,GACN,GAAKzV,KAAKiH,OAAV,CAEA,GAAIjH,KAAK6vC,YAAc7vC,KAAK6vC,WAAW,WAAap6B,EAAO,SAAU,CACjE,IAAImD,EAAM,IAAIJ,KAEd,GADAI,EAAIk3B,WAAWl3B,EAAIm3B,aAAeC,OAC9BhwC,KAAKiwC,gBAAkBjwC,KAAKiwC,eAAiBr3B,EAC7C,OAIR5Y,KAAK6vC,WAAap6B,EAClBzV,KAAKiwC,eAAiB,IAAIz3B,KAE1B3W,KAAgBiJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASrG,KAAKiH,OACdwO,OAAQA,wECKdy6B,WAAoBpwB,IAAMqwB,KAAK,kBAAMvmC,QAAA8J,IAAA,CAAAkK,EAAAmM,EAAA,GAAAnM,EAAAmM,EAAA,KAAA3e,KAAAwS,EAAAwyB,KAAA,cAYrCC,eACF,SAAAA,EAAYjxB,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAqwC,IACfxwC,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAuwC,GAAAlwC,KAAAH,KAAMof,KAgEVkxB,0BAA4B,SAAA3vC,GAAU,IACjB2C,EAAS3C,EAAlB0E,QACR,GAAK/B,EAAL,CAFkC,IAI1B+B,EAAsC/B,EAAtC+B,QAASqB,EAA6BpD,EAA7BoD,UAAW+I,EAAkBnM,EAAlBmM,MAAOE,EAAWrM,EAAXqM,OACnC,GAAKtK,EAAL,CAEAxF,EAAK0wC,cAAcjjB,QAAQ2b,UAAY,KACvCppC,EAAK0wC,cAAcjjB,QAAQkjB,YAAc,KACzC3wC,EAAKotC,UAAY,KAEjB,IAAMzoC,EAAU,CACZuE,QAAS,sBACT1D,QAAS,CACL0D,QAAS,cACTpG,GAAI0C,EAAQ1C,IAEhB8M,QACAE,UAGJ,GAAIjJ,EAAW,KACI+pC,EAAmD/pC,EAA1D+I,MAA+BihC,EAA2BhqC,EAAnCiJ,OAAyB9K,EAAU6B,EAAV7B,MAExDL,EAAQkC,UAAY,CAChBA,UAAW,CACPqC,QAAS,cACTpG,GAAIkC,EAAMlC,IAEd8M,MAAOghC,EACP9gC,OAAQ+gC,GAIhB7wC,EAAK8wC,eAAensC,GAAS,EAAM,SAAA4F,MAEnCvI,KAAgBiH,aAAa,CACzBC,QAAS,gCACTwyB,KAAM,UAvGK17B,EA2GnB+wC,oBAAsB,SAAAjwC,GAAU,IACZkwC,EAAkBhxC,EAAKmkB,MAA/B/c,OACAA,EAAsBtG,EAAtBsG,OAAQC,EAAcvG,EAAduG,UAEZ2pC,IAAkB5pC,IAItBpH,EAAKykB,SAAS,CAAE3G,iBAAkBzW,IAE9BA,GACArH,EAAKixC,kBAtHMjxC,EA0HnBkxC,qBAAuB,SAAApwC,GACAd,EAAKmkB,MAAhB/c,SACOtG,EAAOqwC,aAEtBnxC,EAAKotC,UAAY,KACjBptC,EAAKykB,SAAS,CACVrd,OAAQtG,EAAOqwC,WACfrzB,iBAAkBD,aAA6B/c,EAAOqwC,YACtDC,iBAAiB,MAlINpxC,EAsInBqxC,SAAW,WAAM,IACLjqC,EAAWpH,EAAKmkB,MAAhB/c,OAEFkqC,EAAUtxC,EAAK0wC,cAAcjjB,QAE7B8jB,EAAQ7zB,aAAatW,GACvBmqC,GACAD,EAAQlI,UAAYmI,EAAM3zB,KAC1B5d,EAAKotC,UAAYmE,EAAM3zB,OAEvB0zB,EAAQlI,UAAY,KACpBppC,EAAKotC,UAAY,OAjJNptC,EAsKnBixC,cAAgB,WACZ7X,WAAW,WACP,GAAIp5B,EAAK0wC,cAAcjjB,QAAS,CAC5B,IAAM6jB,EAAUtxC,EAAK0wC,cAAcjjB,QAEnC,GAAI6jB,EAAQvJ,WAAW3hC,OAAS,EAAG,CAC/B,IAAM6hC,EAAQ/iC,SAASgjC,cACvBD,EAAME,SAASmJ,EAAQvJ,WAAW,GAAIuJ,EAAQvJ,WAAW,GAAG3hC,QAC5D6hC,EAAMG,UAAS,GAEf,IAAMC,EAAYl+B,OAAOm+B,eACzBD,EAAUE,kBACVF,EAAUG,SAASP,GAEvBqJ,EAAQ3I,UAEb,MAtLY3oC,EAyLnBwxC,oBAAsB,SAAAC,GAClB,GAAKA,EAAL,CADsC,IAG9BrqC,EAAyBqqC,EAAzBrqC,OAAQsqC,EAAiBD,EAAjBC,aACXtqC,GAELpF,KAAgBiJ,KAAK,CACjB/B,QAAS,sBACT1C,QAASY,EACT6M,cAAey9B,MAlMJ1xC,EAsMnB2xC,uBAAyB,SAACvqC,EAAQ0W,GAC9B,IAAI3Z,EAAO6O,KAAU3P,IAAI+D,GACzB,GAAKjD,EAAL,CACA,IAAMytC,EAAW5xC,EAAK6xC,eAElBC,EAAgB,GAChBC,EAA2B,EACvB99B,EAAkB9P,EAAlB8P,cACR,GAAIA,GAAiBA,EAAc0J,oBAAsB1J,EAAc0J,mBAAmBC,KAAM,KACpFpM,EAA4CyC,EAA5CzC,oBAAqBmM,EAAuB1J,EAAvB0J,mBAE7Bo0B,EAA2BvgC,EACvBmM,GAAsBA,EAAmBC,OACzCk0B,EAAgBn0B,EAAmBC,KAAKA,MAIhD,OAAIg0B,IAAaE,GAAiBh0B,IAAqBi0B,EAgB5C,CAAE3qC,OAAQA,EAAQsqC,aAfJ,CACjBxoC,QAAS,eACTsI,oBAAqBsM,EACrBH,mBAAoB,CAChBzU,QAAS,mBACT0U,KAAM,CACF1U,QAAS,gBACT0U,KAAMg0B,EACNzmB,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,KAOlB,OA1OQjyC,EA6OnBkyC,aAAe,WACX,IAAIt0B,EAAO5d,EAAK6xC,eAMhB,GAJA7xC,EAAK0wC,cAAcjjB,QAAQ2b,UAAY,KACvCppC,EAAK0wC,cAAcjjB,QAAQkjB,YAAc,KACzC3wC,EAAKotC,UAAY,KAEZxvB,EAAL,CAEA,IAAMjZ,EAAU,CACZuE,QAAS,mBACT0U,KAAM,CACF1U,QAAS,gBACT0U,KAAMA,EACNuN,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,GAGjBjyC,EAAK8wC,eAAensC,GAAS,EAAO,SAAA4F,QAjQrBvK,EAoQnB6mC,iBAAmB,WACf7kC,KAAgBiH,aAAa,CACzBC,QAAS,yBAtQElJ,EA0QnBymC,kBAAoB,WACXzmC,EAAKmyC,gBAEVnyC,EAAKmyC,eAAe1kB,QAAQngB,SA7QbtN,EAgRnBoyC,0BAA4B,WACxB,IAAIC,EAAQryC,EAAKmyC,eAAe1kB,QAAQ4kB,MACnB,IAAjBA,EAAMjsC,SAEVksC,MAAMjuB,KAAKguB,GAAO7uC,QAAQ,SAAAnC,GACtBkxC,aAAclxC,EAAM,SAAAkJ,GAChBvK,EAAKwyC,gBAAgBjoC,OAI7BvK,EAAKmyC,eAAe1kB,QAAQ9X,MAAQ,KA1RrB3V,EA6RnB2mC,qBAAuB,WACd3mC,EAAKyyC,mBAEVzyC,EAAKyyC,kBAAkBhlB,QAAQngB,SAhShBtN,EAmSnB0yC,6BAA+B,WAC3B,IAAIL,EAAQryC,EAAKyyC,kBAAkBhlB,QAAQ4kB,MACtB,IAAjBA,EAAMjsC,SAEVksC,MAAMjuB,KAAKguB,GAAO7uC,QAAQ,SAAAnC,GACtBrB,EAAK2yC,mBAAmBtxC,KAG5BrB,EAAKyyC,kBAAkBhlB,QAAQ9X,MAAQ,KA3SxB3V,EAyTnB4yC,YAAc,WAAM,IACRxrC,EAAWpH,EAAKmkB,MAAhB/c,OAER,IAAIuT,aAASvT,GAAb,CAEA,IAAMjD,EAAO6O,KAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAEA,IAAMilC,EAAYppC,EAAK0wC,cAAcjjB,QAAQ2b,UACvCgE,EAAYptC,EAAK0wC,cAAcjjB,QAAQ2f,UAM7C,GAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEptC,EAAK0wC,cAAcjjB,QAAQ2f,UAAY,IAGtChE,GAEiBjlC,EAAK4rC,sBAAwB5rC,EAAK4rC,oBAAsB,IAAIA,GAAoB5rC,EAAKrB,MAE7F+vC,UAAU,CAAE3pC,QAAS,wBA5UpBlJ,EA+UnB2pC,cAAgB,SAAAzf,GACMlqB,EAAK0wC,cAAcjjB,QAAQ2b,UAA7C,IACMgE,EAAYptC,EAAK0wC,cAAcjjB,QAAQ2f,UAC7CptC,EAAKotC,UAAYA,EAEH,UAAVljB,EAAEvS,KAAoBuS,EAAEgjB,WACxBhjB,EAAEvB,iBACF3oB,EAAKkyC,iBAtVMlyC,EA0VnBwyC,gBAAkB,SAAAnxC,GACd,GAAKA,EAAL,CAEA,IAAMsD,EAAU,CACZuE,QAAS,oBACTlE,MAAO,CAAEkE,QAAS,gBAAiB4pC,KAAMzxC,EAAKyxC,KAAMznC,KAAMhK,GAC1DuO,MAAOvO,EAAK0xC,WACZjjC,OAAQzO,EAAK2xC,aAGjBhzC,EAAK8wC,eAAensC,GAAS,EAAM,SAAA4F,GAC/B,IAAM0oC,EAAgBplC,KAAaxK,IAAIkH,EAAO/D,QAAS+D,EAAOzH,IACzC,MAAjBmwC,GACAjzC,EAAKkzC,qBAAqBD,EAAe5xC,GAG7CtB,KAAUozC,WAAW5oC,EAAO5F,QAAQK,MAAMmB,MAAM,GAAGnB,MAAMlC,GAAIyH,OA1WlDvK,EA8WnBozC,eAAiB,SAAAnrB,GACbjoB,EAAK8wC,eAAe7oB,GAAM,EAAM,eA/WjBjoB,EAkXnB2yC,mBAAqB,SAAAtxC,GACjB,GAAKA,EAAL,CAEA,IAAMsD,EAAU,CACZuE,QAAS,uBACThE,SAAU,CAAEgE,QAAS,gBAAiB4pC,KAAMzxC,EAAKyxC,KAAMznC,KAAMhK,IAGjErB,EAAK8wC,eAAensC,GAAS,EAAM,SAAA4F,GAAM,OAAIxK,KAAUozC,WAAW5oC,EAAO5F,QAAQO,SAASA,SAASpC,GAAIyH,OA1XxFvK,EA6XnBqqC,YAAc,SAAA5+B,GAIV,IAHA,IAAMrI,GAASqI,EAAM++B,eAAiB/+B,EAAM4nC,cAAc7I,eAAepnC,MAEnEivC,EAAQ,GACLnsC,EAAI,EAAGA,EAAI9C,EAAMgD,OAAQF,IACQ,IAAlC9C,EAAM8C,GAAGotC,KAAKC,QAAQ,SACtBlB,EAAMzoC,KAAKxG,EAAM8C,GAAGstC,aAI5B,GAAInB,EAAMjsC,OAAS,EAKf,OAJAqF,EAAMkd,iBAEN3oB,EAAKqyC,MAAQA,OACbryC,EAAKykB,SAAS,CAAE2sB,iBAAiB,IAIrC,IAAMqC,EAAYhoC,EAAM++B,cAAcC,QAAQ,cAC9C,OAAIgJ,GACAhoC,EAAMkd,iBACNzjB,SAAS0lC,YAAY,cAAc,EAAO6I,QAC1CzzC,EAAKotC,UAAYqG,SAHrB,GAhZezzC,EAwZnB0zC,oBAAsB,WAClB1zC,EAAK2zC,mBAEL,IAAMtB,EAAQryC,EAAKqyC,MACdA,GACAA,EAAMjsC,SAEXisC,EAAM7uC,QAAQ,SAAAnC,GACVrB,EAAK2yC,mBAAmBtxC,KAG5BrB,EAAKqyC,MAAQ,OAnaEryC,EAsanB2zC,iBAAmB,WACf3zC,EAAKykB,SAAS,CAAE2sB,iBAAiB,KAvalBpxC,EA0anBkzC,qBAAuB,SAACxuC,EAAS6D,GAC7B,GAAI7D,GAAWA,EAAQoa,eAAoD,+BAAnCpa,EAAQoa,cAAc,UACtDpa,EAAQC,SAAwC,iBAA7BD,EAAQC,QAAQ,UAA+BD,EAAQC,QAAQK,MAAO,CACzF,IAAIqH,EAAO8D,aAAQzL,EAAQC,QAAQK,MAAMmB,MAAOkM,MAChD,IAAKhG,EAAM,OAEX,IAAIhL,EAAOgL,EAAKrH,MACZ3D,GAAQA,EAAK2B,OAAS3B,EAAK2B,MAAMG,2BAA6B9B,EAAKkH,OACnElH,EAAKkH,KAAOA,EACZxI,KAAUwG,gBAAgB7B,EAAQ8B,QAAS9B,EAAQ5B,GAAIzB,EAAKyB,OAnbzD9C,EAybnB8wC,eAzbmB,eAAAtwC,EAAAP,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAybF,SAAAC,EAAO8D,EAASkvC,EAAYpqC,GAA5B,IAAAya,EAAA9c,EAAA0W,EAAAvT,EAAA,OAAA6kB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAgjB,EACwBlkB,EAAKmkB,MAAlC/c,EADK8c,EACL9c,OAAQ0W,EADHoG,EACGpG,iBAEX1W,EAHQ,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIRmD,EAJQ,CAAA3D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAOHoX,KAAiBw7B,sBAAjB,mCAAA1oC,OAA0EhE,IAPvE,cAAApG,EAAAE,KAAA,GASUc,KAAgBiJ,KAAK,CACpC/B,QAAS,cACT1C,QAASY,EACToK,oBAAqBsM,EACrBi2B,sBAAuBpvC,IAblB,QASL4F,EATKvJ,EAAAmK,KAgBTnL,EAAKykB,SAAS,CAAE3G,iBAAkB,GAAK,WACnC,GAAI+1B,EAAY,CACZ,IAAMG,EAAsBh0C,EAAK2xC,uBAC7B3xC,EAAKmkB,MAAM/c,OACXpH,EAAKmkB,MAAMrG,kBAEf9d,EAAKwxC,oBAAoBwC,MAKjChyC,KAAgBiJ,KAAK,CACjB/B,QAAS,eACT1C,QAASY,EACT4E,YAAa,CAACzB,EAAOzH,MAGzB2G,EAASc,GAjCAvJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAA,SAmCTizC,MAAM,qBAAuBC,KAAKC,UAALnzC,EAAAG,KAnCpB,yBAAAH,EAAAU,SAAAb,EAAA,kBAzbE,gBAAAc,EAAAe,EAAA+vB,GAAA,OAAAjyB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAgenBo0C,kBAAoB,SAAAxmB,GACXA,IAEL5tB,EAAK0wC,cAAcjjB,QAAQ2b,WAAaxb,EAAMymB,OAC9Cr0C,EAAKupC,gBApeUvpC,EAuenBupC,YAvemB,eAAAnnC,EAAAnC,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAueL,SAAAyB,EAAMoJ,GAAN,IAAA29B,EAAAjoC,EAAAmzC,EAAAC,EAAAC,EAAAhjB,EAAA,OAAApC,EAAAzuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,WACJkoC,EAAYppC,EAAK0wC,cAAcjjB,QAAQ2b,cAC3BA,EAAUhjC,OAAS,IAF3B,CAAA9D,EAAApB,KAAA,eAGWi6B,KAATO,MAEJ15B,KAAgBiH,aAAa,CACzBC,QAAS,gCACTwyB,KAAM,OAPRp5B,EAAAd,OAAA,oBAcJL,EAAKszC,YAAY17B,MACjBu7B,EAAQI,MACVH,EAAQD,EAAMK,KAAKvL,GACjBoL,EAAKC,YAAY17B,MACvBjV,QAAQ4F,IAAI,YAAc8qC,EAAKrzC,GAAM,KAAMozC,GACtCA,GAASnL,IAAcmL,EAAM,GAnBxB,CAAAjyC,EAAApB,KAAA,gBAoBWi6B,KAATO,MAEJ15B,KAAgBiH,aAAa,CACzBC,QAAS,gCACTwyB,KAAM,OAxBRp5B,EAAAd,OAAA,kBA+BJgwB,EAAY7Y,KAAKI,MACvB/W,KAAgBiJ,KAAK,CACjB/B,QAAS,cACT0kB,MAAO2mB,EAAM,GACb/hB,MAAO,MACRjnB,KAAK,SAAA8I,GACJrS,KAAgBiH,aAAa,CACzBC,QAAS,gCACTwyB,KAAM,CACFlK,YACA5D,MAAO2mB,EAAM,GACblgC,gBAKZrS,KAAgBiJ,KAAK,CACjB/B,QAAS,iBACT0kB,MAAO2mB,EAAM,GACb/hB,MAAO,MACRjnB,KAAK,SAAA8I,GACJrS,KAAgBiH,aAAa,CACzBC,QAAS,iCACTwyB,KAAM,CACFlK,YACA5D,MAAO2mB,EAAM,GACblgC,gBAzDF,yBAAA/R,EAAAZ,SAAAW,MAveK,gBAAAiJ,GAAA,OAAAlJ,EAAAR,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKyyC,kBAAoBxyB,IAAMggB,YAC/BjgC,EAAKmyC,eAAiBlyB,IAAMggB,YAC5BjgC,EAAK0wC,cAAgBzwB,IAAMggB,YAE3B,IAAM74B,EAASkR,KAAiBs8B,YAPjB,OASf50C,EAAKotC,UAAY,KACjBptC,EAAKmkB,MAAQ,CACT/c,OAAQA,EACR0W,iBAAkBD,aAA6BzW,GAC/CgqC,iBAAiB,GAbNpxC,qFAiBG8kB,EAAWC,GAAW,IAAAzF,EACnBnf,KAAKof,MAAlB4B,EADgC7B,EAChC6B,MAAOzJ,EADyB4H,EACzB5H,EADyBirB,EAEcxiC,KAAKgkB,MAAnD/c,EAFgCu7B,EAEhCv7B,OAAQ0W,EAFwB6kB,EAExB7kB,iBAAkBszB,EAFMzO,EAENyO,gBAElC,OAAItsB,EAAU3D,QAAUA,IAIpB2D,EAAUpN,IAAMA,IAIhBqN,EAAU3d,SAAWA,IAIrB2d,EAAUjH,mBAAqBA,GAI/BiH,EAAUqsB,kBAAoBA,iDAUlC94B,KAAiBmJ,GAAG,qBAAsBthB,KAAK+wC,sBAC/CrjC,KAAa4T,GAAG,oBAAqBthB,KAAK4wC,qBAC1C5V,KAAa1Z,GAAG,0BAA2BthB,KAAKswC,2BAEhDtwC,KAAK8wC,gBACL9wC,KAAKkxC,WACLlxC,KAAKopC,6DAIL,IAAMyK,EAAsB7zC,KAAKwxC,uBAAuBxxC,KAAKgkB,MAAM/c,OAAQjH,KAAKgkB,MAAMrG,kBACtF3d,KAAKqxC,oBAAoBwC,GAEzB17B,KAAiBnW,eAAe,qBAAsBhC,KAAK+wC,sBAC3DrjC,KAAa1L,eAAe,oBAAqBhC,KAAK4wC,qBACtD5V,KAAah5B,eAAe,0BAA2BhC,KAAKswC,sEAuF7CvrB,EAAWC,EAAWC,GAErCjlB,KAAKqxC,oBAAoBpsB,GAErBD,EAAU/d,SAAWjH,KAAKgkB,MAAM/c,SAChCjH,KAAK8wC,gBACL9wC,KAAKkxC,WACLlxC,KAAKopC,+DAIWrkB,EAAWC,GAC/B,OAAIA,EAAU/d,SAAWjH,KAAKgkB,MAAM/c,OAAe,KAE5CjH,KAAKwxC,uBAAuBxsB,EAAU/d,OAAQ+d,EAAUrH,yDA4I/D,IAAIsrB,EAAYjpC,KAAKuwC,cAAcjjB,QAAQ2b,UACvCgE,EAAYjtC,KAAKuwC,cAAcjjB,QAAQ2f,UAM3C,OAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzEjtC,KAAKuwC,cAAcjjB,QAAQ2f,UAAY,IAGpChE,mCAgPF,IAAA3oB,EACkBtgB,KAAKof,MAApBmB,EADHD,EACGC,QAAShJ,EADZ+I,EACY/I,EADZkrB,EAEiDziC,KAAKgkB,MAAnD/c,EAFHw7B,EAEGx7B,OAAQ0W,EAFX8kB,EAEW9kB,iBAAkBszB,EAF7BxO,EAE6BwO,gBAE5BzsC,EAA6B,OAAnBxE,KAAKitC,UAAqBjtC,KAAKitC,UAAY,KAE3D,OACIvtB,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQ8F,YAAa,aAC5C3G,EAAAlf,EAAAmM,cAAC+nC,GAAD,CAAgBztC,OAAQA,EAAQC,UAAWyW,IAC3C+B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAC+S,EAAAlf,EAAMm0C,SAAP,CACIC,SACIl1B,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQsmB,WAAYC,aAAW,YAClDpnB,EAAAlf,EAAAmM,cAACkoC,EAAAr0C,EAAD,QAGRkf,EAAAlf,EAAAmM,cAACujC,GAAD,CAAmBvV,SAAU36B,KAAKi0C,sBAG1Cv0B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,0BACXD,EAAAlf,EAAAmM,cAAA,OACIhK,GAAG,mBACHw9B,IAAKngC,KAAKuwC,cACV/4B,IAAK,IAAIgB,KACTqyB,YAAatzB,EAAE,WACfozB,iBAAe,EACfC,gCAA8B,EAC9BM,UAAWlrC,KAAKwpC,cAChBsL,QAAS90C,KAAKyyC,YACdtH,QAASnrC,KAAKkqC,YACde,QAASjrC,KAAKopC,aACb5kC,IAGTkb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,yBACXD,EAAAlf,EAAAmM,cAAA,SACIwzB,IAAKngC,KAAKsyC,kBACV3yB,UAAU,yBACV9N,KAAK,OACLkjC,SAAS,WACT3yB,SAAUpiB,KAAKuyC,+BAEnB7yB,EAAAlf,EAAAmM,cAAA,SACIwzB,IAAKngC,KAAKgyC,eACVryB,UAAU,yBACV9N,KAAK,OACLkjC,SAAS,WACTC,OAAO,UACP5yB,SAAUpiB,KAAKiyC,4BAEnBvyB,EAAAlf,EAAAmM,cAACsoC,GAAD,CACIhuC,OAAQA,EACRs/B,cAAevmC,KAAKsmC,kBACpBG,iBAAkBzmC,KAAKwmC,qBACvBG,aAAc3mC,KAAK0mC,mBAMvBhnB,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQsmB,WAAYC,aAAW,OAAOjnB,QAAS7f,KAAK+xC,cACvEryB,EAAAlf,EAAAmM,cAACuoC,EAAA10C,EAAD,CAAUuhB,MAAM,iBAK9BtG,aAAcxU,IAAWyY,EAAAlf,EAAAmM,cAACwoC,GAAD,CAAkBlH,OAAQjuC,KAAKizC,iBAC1DvzB,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACI0pB,mBAAoB,EACpBhgB,KAAM+mC,EACN1nB,QAASvpB,KAAKwzC,iBACdrpB,kBAAgB,uBAChBzK,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,uBAAuB4U,EAAE,YACzCmI,EAAAlf,EAAAmM,cAAC0d,EAAA7pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC2d,EAAA9pB,EAAD,KACKR,KAAKkyC,OAASlyC,KAAKkyC,MAAMjsC,OAAS,EAC7B,uCACA,wCAGdyZ,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKwzC,iBAAkBzxB,MAAM,WACzCxK,EAAE,WAEPmI,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKuzC,oBAAqBxxB,MAAM,WAC5CxK,EAAE,iBA9nBDwI,aA4oBf4G,GALCC,YACZ7F,IAlpBW,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChB+mC,WAAY,CACR/f,OAAQ,SAEZ6oB,gBAAiB,CACb7oB,OAAQ,IAETI,aAAYlG,KA2oBI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQ0pB,yBCxqBjB+E,4LACO,IAAAj2B,EACmCnf,KAAKof,MAArCmB,EADHpB,EACGoB,QAASiL,EADZrM,EACYqM,QAAS6pB,EADrBl2B,EACqBk2B,UAE1B,OACI31B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQ8F,YAAa,2BAC5C3G,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,0BACXD,EAAAlf,EAAAmM,cAAC2oC,GAAA90C,EAAD,CAAQuhB,MAAM,UAAUpC,UAAWY,EAAQ6uB,OAAQvvB,QAASw1B,GACvD7pB,YARG1L,IAAMC,YAgBnBgB,OAxBA,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChBsvC,OAAQ,CACJtoB,OAAQ,OACR4kB,SAAU,UAEXxkB,aAAYlG,KAmBJD,CAAmBq0B,ICTnBG,eAjBX,SAAAA,EAAYn2B,GAAO,OAAAtf,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAu1C,GAAAz1C,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAy1C,GAAAp1C,KAAAH,KACTof,0EAGD,IAECoM,EADcxrB,KAAKgkB,MAAjBohB,QACkB,SAAW,OAErC,OACI1lB,EAAAlf,EAAAmM,cAAC6oC,GAAD,CACIhqB,QAASA,EACT6pB,UAAWr1C,KAAKulC,2CAZUL,uBCOpCuQ,uBACF,SAAAA,EAAYr2B,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAy1C,IACf51C,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA21C,GAAAt1C,KAAAH,KAAMof,KAqBVs2B,mBAAqB,SAAA/0C,GAAU,IACnBsG,EAAWpH,EAAKuf,MAAhBnY,OAEJmV,aAAgBnV,EAAQtG,EAAOs5B,YAAYt3B,KAC3C9C,EAAKwhB,eA1BMxhB,EA8BnB81C,mBAAqB,SAAAh1C,GAAU,IACnBsG,EAAWpH,EAAKuf,MAAhBnY,OAEJuV,aAAgBvV,EAAQtG,EAAOoZ,WAAWpX,KAC1C9C,EAAKwhB,eAlCMxhB,EAsCnB+1C,WAAa,WAAM,IACP3uC,EAAWpH,EAAKuf,MAAhBnY,OACHA,GAELpF,KAAgBiJ,KAAK,CACjB/B,QAAS,WACT1C,QAASY,KA5CEpH,EAgDnBg2C,oBAAsB,WAAM,IAChB5uC,EAAWpH,EAAKuf,MAAhBnY,OACHA,GAELpF,KAAgBiJ,KAAK,CACjB/B,QAAS,oBACT1C,QAASY,EACT6uC,uBAAuB,KAvDZj2C,qFAIG8kB,EAAWC,GAC7B,OAAID,EAAU1d,SAAWjH,KAAKof,MAAMnY,mDAQpCqS,KAAgBgI,GAAG,mBAAoBthB,KAAK01C,oBAC5C17B,KAAgBsH,GAAG,mBAAoBthB,KAAK21C,mEAI5Cr8B,KAAgBtX,eAAe,mBAAoBhC,KAAK01C,oBACxD17B,KAAgBhY,eAAe,mBAAoBhC,KAAK21C,qDA8CnD,IACG1uC,EAAWjH,KAAKof,MAAhBnY,OACFjD,EAAO6O,KAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMwH,EAAaC,KAAgBpW,IAAIc,EAAK6N,KAAK0H,gBACjD,GAAIF,GAAcA,EAAWG,OACzB,OAAQH,EAAWG,OAAO,UACtB,IAAK,gCACD,OAAOkG,EAAAlf,EAAAmM,cAACopC,GAAD,MAEX,IAAK,yBACD,OAAOr2B,EAAAlf,EAAAmM,cAAC6oC,GAAD,CAAehqB,QAAQ,kBAAkB6pB,UAAWr1C,KAAK61C,sBAEpE,IAAK,0BACD,OAAOn2B,EAAAlf,EAAAmM,cAACopC,GAAD,MAEX,IAAK,uBACD,OAAO,KAEX,IAAK,yBACD,OAAOr2B,EAAAlf,EAAAmM,cAACopC,GAAD,MAEX,IAAK,6BACD,OAAI18B,EAAWG,OAAOqC,UACbxC,EAAWG,OAAO8D,kBAIhBoC,EAAAlf,EAAAmM,cAACopC,GAAD,MAHI,KAKJr2B,EAAAlf,EAAAmM,cAAC6oC,GAAD,CAAehqB,QAAQ,OAAO6pB,UAAWr1C,KAAK41C,aAMrE,MAEJ,IAAK,kBAGL,IAAK,iBACD,OAAOl2B,EAAAlf,EAAAmM,cAACopC,GAAD,MAEX,IAAK,qBACD,IAAMh8B,EAAaC,KAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,GAAIF,GAAcA,EAAWP,OACzB,OAAQO,EAAWP,OAAO,UACtB,IAAK,gCACD,OAAOkG,EAAAlf,EAAAmM,cAACopC,GAAD,MAEX,IAAK,yBACD,OAAOr2B,EAAAlf,EAAAmM,cAAC6oC,GAAD,CAAehqB,QAAQ,kBAAkB6pB,UAAWr1C,KAAK61C,sBAEpE,IAAK,0BACD,OAAOn2B,EAAAlf,EAAAmM,cAACopC,GAAD,MAEX,IAAK,uBACD,OAAOr2B,EAAAlf,EAAAmM,cAAC6oC,GAAD,CAAehqB,QAAQ,OAAO6pB,UAAWr1C,KAAK41C,aAEzD,IAAK,yBACD,OAAI77B,EAAWG,WACJwF,EAAAlf,EAAAmM,cAACqpC,GAAD,CAA6B/uC,OAAQA,IAErCyY,EAAAlf,EAAAmM,cAACopC,GAAD,MAGf,IAAK,6BACD,OAAIh8B,EAAWP,OAAOqC,UACb9B,EAAWP,OAAO8D,kBAIhBoC,EAAAlf,EAAAmM,cAACopC,GAAD,MAHI,KAKJr2B,EAAAlf,EAAAmM,cAAC6oC,GAAD,CAAehqB,QAAQ,OAAO6pB,UAAWr1C,KAAK41C,cAQ7E,OAAO,YAzJM91B,IAAMC,YA6JZ01B,uOCjJTQ,sBACF,SAAAA,EAAY72B,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAi2C,IACfp2C,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAm2C,GAAA91C,KAAAH,KAAMof,KA2CV/c,MAAQ,WAAM,IACF8uB,EAAatxB,EAAKuf,MAAlB+R,SAGM,IAFItxB,EAAKmkB,MAAfxO,OAGJ3V,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,IAGjB6H,WAAW,WACiBp5B,EAAKmkB,MAArBoN,aAEJvxB,EAAKykB,SAAS,CACV9O,MAAO3V,EAAKq2C,SAAS,EAAG/kB,GAAU,MAG3CglB,MAEHt2C,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,EACb5b,MAAO3V,EAAKq2C,SAAS,EAAG/kB,GAAU,MAlE3BtxB,EAuEnB4hC,uBAAyB,SAAA9gC,GAAU,IAAAwe,EACDtf,EAAKuf,MAA3BnY,EADuBkY,EACvBlY,OAAQC,EADeiY,EACfjY,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKwC,SA3EMxC,EA+EnB0iC,wBAA0B,SAAA5hC,GAAU,IAAA2f,EACQzgB,EAAKuf,MAArCnY,EADwBqZ,EACxBrZ,OAAQC,EADgBoZ,EAChBpZ,UAAWiqB,EADK7Q,EACL6Q,SACnBuQ,EAAW7hC,EAAKmkB,MAAhB0d,OAEJz6B,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SAAS,CACV8M,YAAazwB,EAAOywB,YACpBD,SAAUxwB,EAAOwwB,UAAYA,EAC7B3b,MAAO3V,EAAKq2C,SAASv1C,EAAOywB,YAAazwB,EAAOwwB,UAAYA,EAAUuQ,MAvF/D7hC,EA4FnBgiC,0BAA4B,SAAAlhC,GAAU,IAAAwnB,EACMtoB,EAAKuf,MAArCnY,EAD0BkhB,EAC1BlhB,OAAQC,EADkBihB,EAClBjhB,UAAWiqB,EADOhJ,EACPgJ,SADOpN,EAEFlkB,EAAKmkB,MAA7B0d,EAF0B3d,EAE1B2d,OAAQtQ,EAFkBrN,EAElBqN,YAEZnqB,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UACjDrH,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAasQ,EAAStQ,EAAc,EACpC5b,MAAO3V,EAAKq2C,SAASxU,EAAStQ,EAAc,EAAGD,GAAU,KAEtDuQ,GACP7hC,EAAKwC,SAvGMxC,EA2GnBq2C,SAAW,SAAC9kB,EAAaD,EAAUuQ,GAC/B,OAAOA,EAAStQ,EAAcD,EAAW,GA5G1B,IAGP5sB,EAAkB2rB,IAAlB3rB,QAASgsB,EAASL,IAATK,KAHF5H,EAIyB9oB,EAAKuf,MAArCnY,EAJO0hB,EAIP1hB,OAAQC,EAJDyhB,EAICzhB,UAAWiqB,EAJZxI,EAIYwI,SAErBuQ,EAASn9B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EACjEkqB,EAAcsQ,GAAUnR,EAAOA,EAAKa,YAAc,EAClDyR,EAAgBnB,GAAUnR,GAAQA,EAAKY,SAAWZ,EAAKY,SAAWA,EARzD,OAUftxB,EAAKmkB,MAAQ,CACT0d,OAAQA,EACRtQ,YAAaA,EACbD,SAAU0R,EACVrtB,MAAO3V,EAAKq2C,SAAS9kB,EAAayR,EAAenB,IAdtC7hC,qFAkBG8kB,EAAWC,GAAW,IAAA4d,EACdxiC,KAAKgkB,MAAvB0d,EADgCc,EAChCd,OAAQlsB,EADwBgtB,EACxBhtB,MAEhB,OAAIoP,EAAUpP,QAAUA,GAIpBoP,EAAU8c,SAAWA,8CAQzBxR,IAAY5O,GAAG,0BAA2BthB,KAAK6hC,2BAC/C3R,IAAY5O,GAAG,wBAAyBthB,KAAKuiC,yBAC7CrS,IAAY5O,GAAG,uBAAwBthB,KAAKyhC,uEAI5CvR,IAAYluB,eAAe,0BAA2BhC,KAAK6hC,2BAC3D3R,IAAYluB,eAAe,wBAAyBhC,KAAKuiC,yBACzDrS,IAAYluB,eAAe,uBAAwBhC,KAAKyhC,yDAsEnD,IACGlhB,EAAYvgB,KAAKof,MAAjBmB,QACA/K,EAAUxV,KAAKgkB,MAAfxO,MAER,OACIkK,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,qBACXD,EAAAlf,EAAAmM,cAACypC,EAAA51C,EAAD,CACImf,UAAWY,EAAQ81B,OACnB91B,QAAS,CACLmjB,MAAOnjB,EAAQmjB,MACf4S,aAAc/1B,EAAQ+1B,aACtBC,MAAOh2B,EAAQg2B,OAEnBC,IAAK,EACL9vB,IAAK,EACLlR,MAAOA,YA/HGsK,IAAMC,YA4IrBgB,MA3JA,CACXs1B,OAAQ,CACJI,SAAU,KAEd/S,MAAO,CACHzc,WAAY,yEAEhBqvB,aAAc,CACVrvB,WAAY,4BAEhBsvB,MAAO,CACHtvB,WAAY,wDAgJLlG,CAAmBk1B,GCtJ5BzpB,6BACF,SAAAA,EAAYpN,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAwsB,IACf3sB,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA0sB,GAAArsB,KAAAH,KAAMof,KAmDVqiB,uBAAyB,SAAA9gC,GAAU,IAAAwe,EACDtf,EAAKuf,MAA3BnY,EADuBkY,EACvBlY,OAAQC,EADeiY,EACfjY,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SAAS,CACVod,QAAQ,EACR3Q,SAAS,EACTK,YAAa,KA3DNvxB,EAgEnB8hC,wBAA0B,SAAAhhC,GAAU,IAAA2f,EACOzgB,EAAKuf,MAApCnY,EADwBqZ,EACxBrZ,OAAQC,EADgBoZ,EAChBpZ,UADgBoZ,EACLyQ,QAEvB9pB,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UACjDrH,EAAKykB,SAAS,CAAEyM,SAAS,IAEzBlxB,EAAKykB,SAAS,CAAEyM,SAAS,KAtEdlxB,EA0EnB+hC,yBAA2B,SAAAjhC,GAAU,IAAAwnB,EACHtoB,EAAKuf,MAA3BnY,EADyBkhB,EACzBlhB,OAAQC,EADiBihB,EACjBjhB,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SAAS,CAAEyM,SAAS,KA9EdlxB,EAkFnBgiC,0BAA4B,SAAAlhC,GAAU,IAAAgoB,EACJ9oB,EAAKuf,MAA3BnY,EAD0B0hB,EAC1B1hB,OAAQC,EADkByhB,EAClBzhB,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UAC5CrH,EAAKmkB,MAAM0d,QACZ7hC,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,EACbL,SAAS,IAGVlxB,EAAKmkB,MAAM0d,QAClB7hC,EAAKykB,SAAS,CACVod,QAAQ,EACRtQ,YAAa,EACbL,SAAS,KAjGF,IAGP9pB,EAAsBmY,EAAtBnY,OAAQC,EAAckY,EAAdlY,UAERqpB,EAA2BL,IAA3BK,KAAMhsB,EAAqB2rB,IAArB3rB,QAASwsB,EAAYb,IAAZa,QACjB2Q,EAASn9B,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,EANxD,OAQfrH,EAAKmkB,MAAQ,CACT0d,OAAQA,EACR3Q,UAAS2Q,GAAS3Q,EAClBK,YAAasQ,GAAUnR,EAAOA,EAAKa,YAAc,EACjDD,SAAUuQ,GAAUnR,EAAOA,EAAKY,SAAW,GAZhCtxB,qFAgBG8kB,EAAWC,EAAWC,GAAa,IAAAd,EACF/jB,KAAKgkB,MAAhD0d,EAD6C3d,EAC7C2d,OAAQ3Q,EADqChN,EACrCgN,QAASK,EAD4BrN,EAC5BqN,YAAaD,EADepN,EACfoN,SAEtC,OAAIvM,EAAU8c,SAAWA,IAIrB9c,EAAUmM,UAAYA,IAItBnM,EAAUwM,cAAgBA,GAI1BxM,EAAUuM,WAAaA,gDAQ3BjB,IAAY5O,GAAG,0BAA2BthB,KAAK6hC,2BAC/C3R,IAAY5O,GAAG,wBAAyBthB,KAAK2hC,yBAC7CzR,IAAY5O,GAAG,yBAA0BthB,KAAK4hC,0BAC9C1R,IAAY5O,GAAG,uBAAwBthB,KAAKyhC,uEAI5CvR,IAAYluB,eAAe,0BAA2BhC,KAAK6hC,2BAC3D3R,IAAYluB,eAAe,wBAAyBhC,KAAK2hC,yBACzDzR,IAAYluB,eAAe,yBAA0BhC,KAAK4hC,0BAC1D1R,IAAYluB,eAAe,uBAAwBhC,KAAKyhC,yDAqDnD,IAAAK,EACwD9hC,KAAKof,MAA1DnY,EADH66B,EACG76B,OAAQC,EADX46B,EACW56B,UAAWG,EADtBy6B,EACsBz6B,UAAWgY,EADjCyiB,EACiCziB,UAC9B0R,GAFH+Q,EAC4CvhB,QAC7BvgB,KAAKgkB,MAAjB+M,SACR,IAAK1pB,EAAW,OAAO,KAHlB,IAKG8pB,EAA0B9pB,EAA1B8pB,SAAiBjwB,EAASmG,EAAhBC,MAIlB,OACIoY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,YACXD,EAAAlf,EAAAmM,cAAC2xB,EAAA,EAAD,CACI53B,UAAW,KACXxF,KAAMA,EACNme,UAAWA,EACXuD,KAAMlD,EAAAlf,EAAAmM,cAACy0B,EAAA5gC,EAAD,MACNo4B,aAAc7H,EAAUrR,EAAAlf,EAAAmM,cAAC+pC,EAAAl2C,EAAD,MAAgBkf,EAAAlf,EAAAmM,cAACgqC,EAAAn2C,EAAD,QAE5Ckf,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sBACXD,EAAAlf,EAAAmM,cAACiqC,EAAD,CAAiB3vC,OAAQA,EAAQC,UAAWA,EAAWiqB,SAAUA,EAAUjwB,KAAMA,IACjFwe,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAACy1B,EAAA,EAAD,CAAan7B,OAAQA,EAAQC,UAAWA,EAAWiqB,SAAUA,EAAUjwB,KAAMA,IAC7Ewe,EAAAlf,EAAAmM,cAACy3B,EAAA,EAAD,CAAan9B,OAAQA,EAAQC,UAAWA,EAAW0b,KAAM,yBA7HzD9C,IAAMC,YA4IfyM,u/DCrIAqqB,MAff,SAAmCC,GAAkB,IAC3CC,EAD2C,SAAAC,GAAA,SAAAD,IAAA,OAAAj3C,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA+2C,GAAAj3C,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAi3C,GAAAt1C,MAAAzB,KAAA0B,YAAA,OAAA5B,OAAAm3C,EAAA,EAAAn3C,CAAAi3C,EAAAC,GAAAl3C,OAAAo3C,EAAA,EAAAp3C,CAAAi3C,EAAA,EAAAv/B,IAAA,SAAAhC,MAAA,WAGzC,OACIkK,EAAAlf,EAAAmM,cAACwqC,EAAA,iBAAD,CAAkBC,SAAUC,KACxB33B,EAAAlf,EAAAmM,cAACmqC,EAAqB92C,KAAKof,YALM23B,EAAA,CACdj3B,IAAMC,WAWzC,OAFAg3B,EAAqBO,YAArB,6BAAArsC,OAAgEssC,YAAeT,GAA/E,KAEOC,0MCYLS,sBACF,SAAAA,EAAYp4B,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAw3C,IACf33C,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA03C,GAAAr3C,KAAAH,KAAMof,KAmBVq4B,mBAAqB,SAAA92C,GAAU,IACnBoL,EAAWlM,EAAKmkB,MAAhBjY,OAER,GADoBpL,EAAZoO,UACQhD,EAAhB,CAEA,IAAM1H,EAAO2K,IAAU9L,IAAI6I,GACtB1H,GAELxE,EAAKykB,SAAS,CACVozB,OAAQ18B,YAAa3W,OA1BzB,IAAM0H,EAASoH,YAAciM,EAAMnY,QAC7B5C,EAAO2K,IAAU9L,IAAI6I,GAJZ,OAMflM,EAAKmkB,MAAQ,CACTjY,OAAQA,EACR2rC,OAAQ18B,YAAa3W,IARVxE,mFAafmP,IAAUsS,GAAG,mBAAoBthB,KAAKy3C,mEAItCzoC,IAAUhN,eAAe,mBAAoBhC,KAAKy3C,qDAgB7C,IAAAt4B,EAC4Cnf,KAAKof,MAA9CmB,EADHpB,EACGoB,QAASrU,EADZiT,EACYjT,KAAMyrC,EADlBx4B,EACkBw4B,WAAYh4B,EAD9BR,EAC8BQ,UAEnC,OADmB3f,KAAKgkB,MAAhB0zB,OAIJh4B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWf,EAAWY,EAAQgC,MAAO3V,MAAO,CAAE6C,MAAOvD,EAAMyD,OAAQzD,IAC/EwT,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWY,EAAQqC,KAAMhW,MAAO,CAAEwW,QAASu0B,IAC5Cj4B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWY,EAAQq3B,kBALhB,YArCH93B,IAAMC,YAuD/By3B,EAAW32B,aAAe,CACtB3U,KAAM,GACNyrC,WAAY,GAGD52B,UAhFA,SAAAC,GAAK,MAAK,CACrBuB,KAAM,CACF4W,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQvF,WAAW0e,QAAU,UAC/EhZ,aAAc,MACdiZ,SAAU,UAEdl1B,KAAM,CACFuW,WAAY,cACZ1pB,MAAO,OACPE,OAAQ,OACRooC,UAAW,cAEfH,cAAe,CACXnoC,MAAO,OACPE,OAAQ,OACRkvB,aAAc,MACd1F,WAAY,aAgELpY,CAAmBy2B,8BCnE5BQ,qNA2BFC,uBAAyB,SAAAt3C,GACrBd,EAAKwhB,iBAGTkZ,uBAAyB,SAAA55B,GACFd,EAAKuf,MAAhBnY,SAEOtG,EAAOsG,QAClBpH,EAAKwhB,iBAIbmZ,kBAAoB,SAAA75B,GAAU,IAClBsG,EAAWpH,EAAKuf,MAAhBnY,OAGR,GAFoBtG,EAAZ0F,UAEQY,EAAhB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKtG,EAAOkE,MAEL,CACH,IAAMlF,EAAQC,IAAUwD,WACxBuQ,YAAgBhU,EAAOqE,QAHvBnE,EAAKwhB,kBAOboZ,kBAAoB,SAAA95B,GAAU,IAClBsG,EAAWpH,EAAKuf,MAAhBnY,OAER,GAAKtG,EAAO0F,SACR1F,EAAO0F,UAAYY,EAAvB,CAEA,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKtG,EAAOkE,MAEL,CACH,IAAMlF,EAAQC,IAAUwD,WACxBuQ,YAAgBhU,EAAOqE,QAHvBnE,EAAKwhB,kBAObqZ,aAAe,SAAApvB,GAAS,IAAA6T,EACStf,EAAKuf,MAA1BnY,EADYkY,EACZlY,OAAQ0zB,EADIxb,EACJwb,SACXA,IAELrvB,EAAMma,kBACNkV,EAAS1zB,0FAzES0d,EAAWC,GAC7B,OAAID,EAAU1d,SAAWjH,KAAKof,MAAMnY,QAIhC0d,EAAU3D,QAAUhhB,KAAKof,MAAM4B,kDAQnCnO,IAAUyO,GAAG,mCAAoCthB,KAAKi4C,wBACtDr4C,IAAU0hB,GAAG,uBAAwBthB,KAAKu6B,wBAC1C1nB,IAAUyO,GAAG,kBAAmBthB,KAAKw6B,mBACrC3nB,IAAUyO,GAAG,kBAAmBthB,KAAKy6B,kEAIrC5nB,IAAU7Q,eAAe,mCAAoChC,KAAKi4C,wBAClEr4C,IAAUoC,eAAe,uBAAwBhC,KAAKu6B,wBACtD1nB,IAAU7Q,eAAe,kBAAmBhC,KAAKw6B,mBACjD3nB,IAAU7Q,eAAe,kBAAmBhC,KAAKy6B,oDAqD5C,IAAAna,EACgEtgB,KAAKof,MAAlEmB,EADHD,EACGC,QAAStZ,EADZqZ,EACYrZ,OAAQixC,EADpB53B,EACoB43B,WAAY39B,EADhC+F,EACgC/F,kBAAmBogB,EADnDra,EACmDqa,SAExD,GAAIngB,YAASvT,IAAWsT,EAAmB,CACvC,IAAMoF,EAAYe,IAAW,aAAc,eAAgB,CAAEqa,QAASJ,IACtE,OACIjb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWA,EAAWE,QAAS7f,KAAK06B,cACrChb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAACwrC,EAAA33C,EAAD,QAMhB,IAAMwD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAfb,IAiBGa,EAAUb,EAAVa,MAEF+V,EAAUF,YAAe1W,GACzBoE,EAAOvD,GAASA,EAAMoO,MAAQrT,IAAUqI,QAAQpD,EAAMoO,MAAMtQ,IAAM,KAClE4e,EAAM3hB,IAAU4I,WAAWJ,GAE3BwyB,EAAS,cAAA3vB,OAAkBuZ,KAAKqW,IAAI5zB,GAAU,EAAK,GACnD0Y,EAAYe,IAAW,aAAD5gB,OAAAsmB,EAAA,EAAAtmB,CAAA,GAAkB86B,GAAaxyB,GAAQ,CAAE2yB,QAASJ,IAE9E,OACIjb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,YAAYE,QAAS7f,KAAK06B,cACpCnZ,EACG7B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWA,EAAW4B,IAAKA,EAAKI,WAAW,EAAOC,IAAI,KAE3DlC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWA,GACZD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,aAAa/E,IAGpCs9B,GAAcz8B,YAAcxU,IACzByY,EAAAlf,EAAAmM,cAACyrC,EAAD,CAAY73B,QAAS,CAAEgC,KAAMhC,EAAQ83B,WAAYz1B,KAAMrC,EAAQ+3B,YAAcrxC,OAAQA,YAjH3E8Y,cAgI9Bi4B,EAAgBn3B,aAAe,CAC3BtG,mBAAmB,EACnB29B,YAAY,GAGDn3B,UA/IA,CACXs3B,WAAY,CACRr1B,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR2R,OAAQ,GAEZ2f,WAAY,IAwIkB,CAAEnxB,WAAW,GAAhCpG,CAAwCi3B,GCrIjDO,4LACO,IAAAp5B,EAC2Cnf,KAAKof,MAA7CmB,EADHpB,EACGoB,QAAStZ,EADZkY,EACYlY,OAAQ6X,EADpBK,EACoBL,SAAU6b,EAD9Bxb,EAC8Bwb,SAE7B6d,EAAa37B,YAAkB5V,GAAQ,GAE7C,OACIyY,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,sBAAuB,CAAE+3B,+BAAgC35B,IAC/Ee,QAAS8a,GACTjb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,4BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oCACXD,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,EAAQsT,mBAAiB,KAErDuE,GAAYY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,gCAAiCH,EAAQo4B,UACjFj5B,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IACP,2BACA5B,EAAWyB,EAAQq4B,aAAer4B,EAAQs4B,kBAGlDn5B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mCAEnBD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,6BAA6B64B,WAvB5B14B,IAAMC,YAmCvBgB,OAjDA,SAAAC,GAAK,MAAK,CACrB23B,OAAQ,CACJtyB,YAAarF,EAAM0d,QAAQC,QAAQC,MAEvCga,aAAc,CACVE,UAAW,oBAAsB93B,EAAM0d,QAAQC,QAAQC,KACvD+Z,OAAQ,aAAe33B,EAAM0d,QAAQvF,WAAW4f,OAEpDF,eAAgB,CACZC,UAAW,iBAAmB93B,EAAM0d,QAAQC,QAAQC,KACpD+Z,OAAQ,2BAuCkB,CAAExxB,WAAW,GAAhCpG,CAAwCw3B,ICzDnDS,GAAgB,KAwCpB,SAASC,GAAiBC,GACtB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMjzC,OAAQ,OAAO,KAE1B+yC,GAAgBA,IAzCT,IAAI3vC,IAAI,CACX,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,KAAM,UACP,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,UACN,CAAC,IAAK,YAWV,IADA,IAAI8vC,EAAS,GACJpzC,EAAI,EAAGA,EAAImzC,EAAMjzC,OAAQF,IAAK,CACnC,IAAIizC,GAAcj2C,IAAIm2C,EAAMnzC,IAGxB,OAAO,KAFPozC,GAAUH,GAAc91C,IAAIg2C,EAAMnzC,IAM1C,MAAkB,KAAXozC,EAAgB,KAAOA,EAGlC,IAAIC,GAAa,KAwCjB,SAASC,GAAcH,GACnB,IAAKA,EAAO,OAAO,KACnB,IAAKA,EAAMjzC,OAAQ,OAAO,KAE1BmzC,GAAaA,IAzCN,IAAI/vC,IAAI,CACX,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,MACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,KACN,CAAC,SAAK,OAWV,IADA,IAAI8vC,EAAS,GACJpzC,EAAI,EAAGA,EAAImzC,EAAMjzC,OAAQF,IAAK,CACnC,IAAIqzC,GAAWr2C,IAAIm2C,EAAMnzC,IAGrB,OAAO,KAFPozC,GAAUC,GAAWl2C,IAAIg2C,EAAMnzC,IAMvC,MAAkB,KAAXozC,EAAgB,KAAOA,2CClE5BG,uBACF,SAAAA,EAAYl6B,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAs5C,IACfz5C,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAw5C,GAAAn5C,KAAAH,KAAMof,KAmBVm6B,YApBmBz5C,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAoBL,SAAAC,IAAA,IAAA84C,EAAAC,EAAAC,EAAAz3C,EAAAyI,EAAAivC,EAAAC,EAAAj6C,EAAA,OAAAsvB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACVlB,EAAKg6C,uBAECL,EAAW,GACXC,EAAkB53C,KAAgBiJ,KAAK,CACzC/B,QAAS,WACT+wC,aAAc,sBACdC,eAAgB,EAChB1nB,MAAO,MAEXmnB,EAAS/vC,KAAKgwC,GAERC,EAAuB73C,KAAgBiJ,KAAK,CAC9C/B,QAAS,oBACTgG,QAASC,IAAU+M,UACnBi+B,OAAO,IAEXR,EAAS/vC,KAAKiwC,GAjBJ74C,EAAAE,KAAA,EAmB2B6I,QAAQ8J,IAAI8lC,EAAS/rC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAogB,GAAC,OAAI,UAnBtE,OAAA9nB,EAAApB,EAAAmK,KAAAN,EAAA5K,OAAAm6C,EAAA,EAAAn6C,CAAAmC,EAAA,GAmBH03C,EAnBGjvC,EAAA,GAmBIkvC,EAnBJlvC,EAAA,GAqBV7K,EAAKykB,SAAS,CACV41B,QAASP,EAAMQ,SACfP,cAAeA,IAGbj6C,EAAQC,IAAUwD,WACxBwQ,YAAiBjU,EAAOg6C,EAAMQ,UA3BpB,yBAAAt5C,EAAAU,SAAAb,MApBKb,EAkDnBg6C,qBAlDmB/5C,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAkDI,SAAAyB,IAAA,IAAAid,EAAAlY,EAAAsG,EAAAnD,EAAA,OAAA6kB,EAAAzuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAoe,EACYtf,EAAKuf,MAA5BnY,EADWkY,EACXlY,OAAQsG,EADG4R,EACH5R,WACXtG,EAFc,CAAA9E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAGdkM,EAHc,CAAApL,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,sBAIfkM,EAAWtH,OAAS,GAJL,CAAA9D,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAKdib,YAAarV,GALC,CAAA9E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,oBAMd6Z,YAAgBjU,GANF,CAAA9E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,yBAAAc,EAAApB,KAAA,GAQEc,KAAgBiJ,KAAK,CACtC/B,QAAS,uBACT1C,QAASY,EACTiX,WAAY3Q,EAAW,GACvB6sC,WAAW,IAZI,QAQbhwC,EARajI,EAAA6I,KAenBnL,EAAKykB,SAAS,CACV+1B,kBAAmBjwC,IAhBJ,yBAAAjI,EAAAZ,SAAAW,MAlDJrC,EAsEnBguC,YAAc,WACVhsC,KAAgBiH,aAAa,CACzBC,QAAS,sBACTuxC,KAAM,QAzEKz6C,EA6EnB06C,eAAiB,WAAM,IACXhjC,EAAM1X,EAAKuf,MAAX7H,EACA8iC,EAAsBx6C,EAAKmkB,MAA3Bq2B,kBAER,GAAKA,GACAA,EAAkBG,KAAvB,CAEA,IAAMhjC,EAAG,aAAAvM,OAAgBovC,EAAkBG,MACrCj2C,EAAUgT,EAAE,cAGlBkjC,IAAKJ,EAAkBG,MAEvB36C,EAAK66C,sBAAsBljC,EAAKjT,EAJjB,QAtFA1E,EA6FnB66C,sBAAwB,SAACljC,EAAKjT,EAASkR,GACnC,GAAK+B,EAAL,CAD8C,IAAA8I,EAGTzgB,EAAKuf,MAAlCu7B,EAHsCr6B,EAGtCq6B,gBAAiBp6B,EAHqBD,EAGrBC,QACzB,GAAKo6B,EAAL,CAIIxiC,KAAiByiC,mBAAmBpjC,EAAKqjC,IAAqC,IAAsBplC,IAEpGklC,EAAgBp2C,EAAS,CACrBu2C,iBAAkBD,IAClBplC,OAAQ,CACJiK,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACIgX,IAAI,QACJsvB,aAAW,QACX/kB,MAAM,UACNpC,UAAWY,EAAQ8P,MACnBxQ,QAAS,kBAAM1H,KAAiB4iC,sBAAsBvjC,KACtDkI,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,aAhHDX,EAuHnBm7C,oBAAsB,SAAC/zC,EAAQsG,GAC3B,GAA0B,IAAtBA,EAAWtH,OAAc,OAAO,KAEpC,IAAM1B,EAAUmJ,KAAaxK,IAAI+D,EAAQsG,EAAW,IACpD,IAAKhJ,EAAS,OAAO,KAJqB,IAMlC02C,EAA8B12C,EAA9B02C,iBAAkBz2C,EAAYD,EAAZC,QAC1B,IAAKy2C,GAAyC,2BAArBz2C,EAAQ,SAAuC,KAC5DK,EAAUL,EAAVK,MACR,IAAKA,EAAO,OAAO,KAFiD,IAI5DmB,EAAUnB,EAAVmB,MACR,GAAIA,GAASA,EAAMC,OACf,OAAOD,EAAMA,EAAMC,OAAS,GAIpC,OAAO,MAxIQpG,EA2InBmuC,WAAa,WACTnuC,EAAKguC,cADU,IAAA1lB,EAGiCtoB,EAAKuf,MAA7CnY,EAHOkhB,EAGPlhB,OAAQsG,EAHD4a,EAGC5a,WAAYrH,EAHbiiB,EAGajiB,UAAWs0C,EAHxBryB,EAGwBqyB,KACvC,GAAKvzC,GAAWsG,GAAeA,GAAerH,GAAcs0C,EAA5D,CAEA,IAAM/8B,EAAO5d,EAAKq7C,aAAar7C,EAAKs7C,WAAW7tB,SAE/CztB,EAAKu7C,YAAY/3C,QAAQ,SAAAg4C,GACrB,GAAIb,EAyCA,OAxCI/8B,GACA5b,KAAgBiJ,KAAK,CACjB/B,QAAS,cACT1C,QAASg1C,EACThqC,oBAAqB,EACrBiqC,uBAAuB,EACvBC,iBAAiB,EACjBp9B,aAAc,KACdy1B,sBAAuB,CACnB7qC,QAAS,mBACT0U,KAAM,CACF1U,QAAS,gBACT0U,KAAMA,EACNuN,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,UAKzBjwC,KAAgBiJ,KAAK,CACjB/B,QAAS,cACT1C,QAASg1C,EACThqC,oBAAqB,EACrBiqC,uBAAuB,EACvBC,iBAAiB,EACjBp9B,aAAc,KACdy1B,sBAAuB,CACnB7qC,QAAS,mBACT0U,KAAM,CACF1U,QAAS,gBACT0U,KAAM+8B,EACNxvB,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,KAOzB,IAAM5lC,EAAOhG,GAAarG,EAAKm7C,oBAAoB/zC,EAAQsG,GAC3D,GAAIrB,EAAJ,CAAU,IACEuD,EAAyBvD,EAAzBuD,MAAOE,EAAkBzD,EAAlByD,OAAQ9K,EAAUqH,EAAVrH,MAEvBhD,KAAgBiJ,KAAK,CACjB/B,QAAS,cACT1C,QAASg1C,EACThqC,oBAAqB,EACrBiqC,uBAAuB,EACvBC,iBAAiB,EACjBp9B,aAAc,KACdy1B,sBAAuB,CACnB7qC,QAAS,oBACTlE,MAAO,CACHkE,QAAS,cACTpG,GAAIkC,EAAMlC,IAEd+D,UAAW,KACX80C,uBAAwB,GACxB/rC,MAAOA,EACPE,OAAQA,EACRgc,QAAS,CACL5iB,QAAS,gBACT0U,KAAMA,EACNuN,SAAU,MAEduC,IAAK,UAOb9P,GACA5b,KAAgBiJ,KAAK,CACjB/B,QAAS,cACT1C,QAASg1C,EACThqC,oBAAqB,EACrBiqC,uBAAuB,EACvBC,iBAAiB,EACjBp9B,aAAc,KACdy1B,sBAAuB,CACnB7qC,QAAS,mBACT0U,KAAM,CACF1U,QAAS,gBACT0U,KAAMA,EACNuN,SAAU,MAEd6mB,0BAA0B,EAC1BC,aAAa,KAKzBjwC,KAAgBiJ,KAAK,CACjB/B,QAAS,kBACT1C,QAASg1C,EACTI,aAAcx0C,EACd4E,YAAa0B,EACb+tC,uBAAuB,EACvBC,iBAAiB,EACjBG,UAAU,QA7PH77C,EAkQnB87C,sBAAwB,SAAA10C,GAChBpH,EAAKu7C,YAAYr4C,IAAIkE,GACrBpH,EAAKu7C,YAAYj4C,OAAO8D,GAExBpH,EAAKu7C,YAAYn6C,IAAIgG,EAAQA,GAGjCtD,QAAQ4F,IAAI1J,EAAKu7C,aAEjBv7C,EAAKwhB,eA3QUxhB,EA8QnBq7C,aAAe,SAAAU,GACX,IAAM3S,EAAY2S,EAAI3S,UAChBgE,EAAY2O,EAAI3O,UAMtB,OAJIhE,GAA2B,OAAdA,GAAsBgE,IAA4B,SAAdA,GAAsC,oBAAdA,KACzE2O,EAAI3O,UAAY,IAGbhE,GAtRQppC,EAyRnBg8C,oBAAsB,SAAAvwC,GACI,KAAlBA,EAAMu9B,SACNv9B,EAAMkd,kBA3RK3oB,EA+RnBi8C,kBAAoB,WAAM,IAAA/3B,EACalkB,EAAKmkB,MAAhCk2B,EADcn2B,EACdm2B,QAASN,EADK71B,EACL61B,cAEX3M,EAAYptC,EAAKk8C,UAAUzuB,QAAQ2f,WACrCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtCptC,EAAKk8C,UAAUzuB,QAAQ2f,UAAY,IAGvC,IAAMhE,EAAYppC,EAAKq7C,aAAar7C,EAAKk8C,UAAUzuB,SAAS6H,OAC5D,GAAK8T,EAAL,CAKA,IAAM+S,EAAY3C,GAAcpQ,GAC1BgT,EAAehD,GAAiBhQ,GAMhCiT,GAJctC,EACd,CAACA,EAAcj3C,IAAIsI,OAAOivC,EAAQvuC,OAAO,SAAAD,GAAC,OAAIA,IAAMkuC,EAAcj3C,MAAKgJ,OAAO,SAAAD,GAAC,OAAI2R,YAAgB3R,KACnGwuC,GAE4BvuC,OAC9B,SAAAD,GAAC,OACG7L,EAAKs8C,cAAczwC,EAAGu9B,IACrB+S,GAAan8C,EAAKs8C,cAAczwC,EAAGswC,IACnCC,GAAgBp8C,EAAKs8C,cAAczwC,EAAGuwC,KAG/Cp8C,EAAKykB,SAAS,CAAE83B,WAAYnT,EAAWiT,cAAeA,SAlBlDr8C,EAAKykB,SAAS,CAAE83B,WAAY,KAAMF,cAAe,MAzStCr8C,EA8TnBw8C,kBAAoB,SAAA/wC,GAChB,IAAMgoC,EAAYhoC,EAAM++B,cAAcC,QAAQ,cAC1CgJ,IACAhoC,EAAMkd,iBACNzjB,SAAS0lC,YAAY,cAAc,EAAO6I,KAlU/BzzC,EAsUnBy8C,mBAAqB,WACjB,IAAMrP,EAAYptC,EAAKs7C,WAAW7tB,QAAQ2f,WACtCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtCptC,EAAKs7C,WAAW7tB,QAAQ2f,UAAY,KAzUzBptC,EA6UnB08C,mBAAqB,SAAAjxC,GACjB,IAAMgoC,EAAYhoC,EAAM++B,cAAcC,QAAQ,cAC1CgJ,IACAhoC,EAAMkd,iBACNzjB,SAAS0lC,YAAY,cAAc,EAAO6I,KAjV/BzzC,EAqVnBs8C,cAAgB,SAACl1C,EAAQm1C,GAAe,IAC5B7kC,EAAM1X,EAAKuf,MAAX7H,EACAqiC,EAAkB/5C,EAAKmkB,MAAvB41B,cAER,GAAIA,GAAiB3yC,IAAW2yC,EAAcj3C,KAE2B,KADvDmZ,YAAa7U,GAAQ,EAAMsQ,IAAM,IACrCilC,oBAAoBpJ,QAAQgJ,EAAW/nC,eAC7C,OAAO,EAKf,OAAsE,KADvDyH,YAAa7U,GAAQ,EAAOsQ,IAAM,IACtCilC,oBAAoBpJ,QAAQgJ,EAAW/nC,iBAKsB,KADvD6G,YAAgBjU,IAAW,IAC/Bu1C,oBAAoBpJ,QAAQgJ,EAAW/nC,gBAtWrCxU,EA6WnB48C,eAAiB,WACbxjB,WAAW,WACHp5B,EAAKk8C,UAAUzuB,SACCztB,EAAKk8C,UAAUzuB,QAEvBkb,SAEb,MAjXH3oC,EAAKmkB,MAAQ,CACTk2B,QAAS,GACTN,cAAe,MAGnB/5C,EAAKk8C,UAAYj8B,IAAMggB,YACvBjgC,EAAKs7C,WAAar7B,IAAMggB,YAExBjgC,EAAKu7C,YAAc,IAAI/xC,IAXRxJ,mFAefG,KAAKu5C,cAELv5C,KAAKy8C,kDAsWA,IAAAhyC,EAAAzK,KAAA2oB,EACkB3oB,KAAKof,MAApBmB,EADHoI,EACGpI,QAAShJ,EADZoR,EACYpR,EADZirB,EAE4ExiC,KAAKgkB,MAA9Ek2B,EAFH1X,EAEG0X,QAASkC,EAFZ5Z,EAEY4Z,WAAYF,EAFxB1Z,EAEwB0Z,cAAetC,EAFvCpX,EAEuCoX,cAAeS,EAFtD7X,EAEsD6X,kBAMrDV,GAJcC,EACd,CAACA,EAAcj3C,IAAIsI,OAAOivC,EAAQvuC,OAAO,SAAAD,GAAC,OAAIA,IAAMkuC,EAAcj3C,MAAKgJ,OAAO,SAAAD,GAAC,OAAI2R,YAAgB3R,KACnGwuC,GAEoBzsC,IAAI,SAAA/B,GAAC,OAC3BgU,EAAAlf,EAAAmM,cAAC+vC,GAAD,CACIllC,IAAK9L,EACLzE,OAAQyE,EACRoT,SAAUrU,EAAK2wC,YAAYr4C,IAAI2I,GAC/BivB,SAAU,kBAAMlwB,EAAKkxC,sBAAsBjwC,QAI7CixC,GAAcT,GAAiB,IAAIzuC,IAAI,SAAA/B,GAAC,OAC1CgU,EAAAlf,EAAAmM,cAAC+vC,GAAD,CACIllC,IAAK9L,EACLzE,OAAQyE,EACRoT,SAAUrU,EAAK2wC,YAAYr4C,IAAI2I,GAC/BivB,SAAU,kBAAMlwB,EAAKkxC,sBAAsBjwC,QAInD,OACIgU,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACI0J,MAAI,EACJqf,QAASvpB,KAAK6tC,YACd1jB,kBAAgB,uBAChByyB,mBAAiB,6BACjBj9B,UAAWY,EAAQ+G,QACnB5H,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,wBAAwB4U,EAAE,gBAC1CmI,EAAAlf,EAAAmM,cAAA,OACIwzB,IAAKngC,KAAK+7C,UACVp5C,GAAG,wBACHgoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAatzB,EAAE,UACf2zB,UAAWlrC,KAAK67C,oBAChB/G,QAAS90C,KAAK87C,kBACd3Q,QAASnrC,KAAKq8C,oBAElB38B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQ8F,YAAa,2BAC5C3G,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBAAuBg6B,GACrCyC,GACG18B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQs8B,WAAY,+BAAgCF,IAGtF38C,KAAKo7C,YAAYlvC,KAAO,GACrBwT,EAAAlf,EAAAmM,cAAA,OACIwzB,IAAKngC,KAAKm7C,WACVx4C,GAAG,yBACHgoC,iBAAe,EACfC,gCAA8B,EAC9BC,YAAatzB,EAAE,gBACfu9B,QAAS90C,KAAKs8C,mBACdnR,QAASnrC,KAAKu8C,qBAGtB78B,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAK6tC,YAAa9rB,MAAM,WACpCxK,EAAE,WAENvX,KAAKo7C,YAAYlvC,KAAO,GACrBwT,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKguC,WAAYjsB,MAAM,UAAU+6B,WAAS,GACtDvlC,EAAE,UAGTvX,KAAKo7C,YAAYlvC,MAAQmuC,GACvB36B,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKu6C,eAAgBx4B,MAAM,WACvCxK,EAAE,sBAhcHuI,IAAMC,YAqdnB4G,GANCC,YACZ7F,IAleW,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChBuwB,MAAO,CACHjN,QAASpC,EAAM+7B,QAAQC,KAAO,GAElC11B,OAAQ,CACJvF,MAAOf,EAAM0d,QAAQjhB,KAAKkhB,SAE9Bse,cAAe,CACX75B,QAAS,EACTvW,QAAS,OACTmW,SAAU,YAEd65B,WAAY,CACR1jB,WAAYnY,EAAM0d,QAAQvF,WAAW4f,QAEtC7xB,aAAYlG,KAmdI,CAAEmG,WAAW,IAChCC,cACA81B,eAGWv2B,CAAQ2yB,qWChcR6D,uBA7DX,SAAAA,EAAY/9B,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAm9C,IACft9C,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAq9C,GAAAh9C,KAAAH,KAAMof,KAeVg+B,YAAc,WACV,IAAMxkC,EAAM,IAAIJ,KACV2kB,EAAUt9B,EAAKw9C,OAASzkC,EACxBpD,EAAQ,IAAO2nB,EAAUt9B,EAAKuf,MAAMk+B,QAAW,IAErDz9C,EAAKykB,SAAS,CACV6Y,QAASA,EAAU,EAAIA,EAAU,EACjC3nB,MAAOA,EAAQ,IAAM,IAAMA,IAG3BoD,GAAO/Y,EAAKw9C,QACRx9C,EAAK09C,UACLC,cAAc39C,EAAK09C,SACnB19C,EAAK09C,QAAU,OA1BvB19C,EAAKmkB,MAAQ,CACTmZ,QAASt9B,EAAKuf,MAAMk+B,QAAU,IAC9B9nC,MAAO,GALI3V,mFAUfG,KAAKikB,UAAY,IAAIzL,KACrBxY,KAAKq9C,OAASr9C,KAAKikB,UACnBjkB,KAAKq9C,OAAOI,gBAAgBz9C,KAAKq9C,OAAOK,kBAAoB19C,KAAKof,MAAMk+B,SACvEt9C,KAAKu9C,QAAUI,YAAY39C,KAAKo9C,YAAa,oDAsBzCp9C,KAAKu9C,UACLC,cAAcx9C,KAAKu9C,SACnBv9C,KAAKu9C,QAAU,uCAId,IAAAx5B,EACsB/jB,KAAKgkB,MAAxBxO,EADHuO,EACGvO,MAAO2nB,EADVpZ,EACUoZ,QAEf,OACIzd,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,2BACXD,EAAAlf,EAAAmM,cAAC2+B,GAAA,EAAD,CAAYvpB,MAAM,YAAYob,EAAU,KAAMhxB,YAElDuT,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,+BACXD,EAAAlf,EAAAmM,cAACkW,GAAAriB,EAAD,CAAkB0L,KAAM,GAAIsJ,MAAO,IAAMA,EAAOiR,QAAQ,oBAnD5C3G,IAAMC,sBCwBhC69B,WAAmB,CACrBj0B,SAAU,SACVC,WAAY,UAGVi0B,GAAsB,CACxBl0B,SAAU,MACVC,WAAY,SAGVk0B,8MACFC,oBAAsB,SAAA92C,GAClB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,8CAAA5G,OAA+CjH,EAAK2W,MAApD,KAEJ,IAAK,qBACD,IAAMZ,EAAaC,KAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,OAAIF,EACOA,EAAWG,WAAX,0CAAAjP,OACyCjH,EAAK2W,MAD9C,6CAAA1P,OAEuCjH,EAAK2W,MAF5C,KAKJ,KAEX,IAAK,kBACL,IAAK,iBACD,mDAAA1P,OAAoD4R,YAAkB5V,GAAtE,KAIR,OAAO,8EAGF,IAAAkY,EACiCnf,KAAKof,MAAnCmK,EADHpK,EACGoK,QAAStiB,EADZkY,EACYlY,OAAW+2C,EADvBl+C,OAAAm+C,GAAA,EAAAn+C,CAAAqf,EAAA,sBAGL,OACIO,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAADV,OAAAw7B,OAAA,CACIpR,mBAAoB,EACpBX,QAAS,kBAAMA,GAAQ,IACvBY,kBAAgB,uBACZ6zB,GACJt+B,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,uBAAuBka,YAAkB5V,IACzDyY,EAAAlf,EAAAmM,cAAC0d,GAAA7pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,yBACXD,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,IACzByY,EAAAlf,EAAAmM,cAAC2d,GAAA9pB,EAAD,CAAmBmC,GAAG,6BACjB3C,KAAK+9C,oBAAoB92C,MAItCyY,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS,kBAAM0J,GAAQ,IAAQxH,MAAM,WAA7C,UAGArC,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS,kBAAM0J,GAAQ,IAAOxH,MAAM,UAAU+6B,WAAS,GAA/D,eAnDUh9B,IAAMC,WA4D9Bm+B,oLACO,IAAA59B,EACiCtgB,KAAKof,MAAnCmK,EADHjJ,EACGiJ,QAAStiB,EADZqZ,EACYrZ,OAAW+2C,EADvBl+C,OAAAm+C,GAAA,EAAAn+C,CAAAwgB,EAAA,sBAGL,OACIZ,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAADV,OAAAw7B,OAAA,CACIpR,mBAAoB,EACpBX,QAAS,kBAAMA,GAAQ,IACvBY,kBAAgB,uBACZ6zB,GACJt+B,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,uBAAuBka,YAAkB5V,IACzDyY,EAAAlf,EAAAmM,cAAC0d,GAAA7pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,yBACXD,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,IACzByY,EAAAlf,EAAAmM,cAAC2d,GAAA9pB,EAAD,CAAmBmC,GAAG,6BAAtB,0CAKR+c,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS,kBAAM0J,GAAQ,IAAQxH,MAAM,WAA7C,UAGArC,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS,kBAAM0J,GAAQ,IAAOxH,MAAM,UAAU+6B,WAAS,GAA/D,eAvBah9B,IAAMC,WAgCjCo+B,eACF,SAAAA,EAAY/+B,GAAO,IAAA3U,EAAA,OAAA3K,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAm+C,IACf1zC,EAAA3K,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAq+C,GAAAh+C,KAAAH,KAAMof,KASVg/B,kBAAoB,SAAA9yC,GAChBb,EAAK6Z,SAAS,CAAE4hB,SAAU56B,EAAM86B,iBAXjB37B,EAcnB47B,gBAAkB,WACd57B,EAAK6Z,SAAS,CAAE4hB,SAAU,QAfXz7B,EAkBnB4zC,eAAiB,WACb5zC,EAAK47B,kBACLpN,WAAW,kBAAMxuB,EAAK2U,MAAMk/B,mBAAmB,MApBhC7zC,EAuBnB8zC,mBAAqB,WACjB9zC,EAAK47B,kBAEL57B,EAAK6Z,SAAS,CAAEk6B,kBAAkB,KA1BnB/zC,EA6BnBg0C,2BAA6B,SAAAr0C,GAGzB,GAFAK,EAAK6Z,SAAS,CAAEk6B,kBAAkB,IAE7Bp0C,EAAL,CAEA,IAAMnD,EAASkR,KAAiBs8B,YAE1B1qC,EAAU,CACZhB,QAAS,oBACT1C,QAASY,EACT6uC,uBAAuB,GAG3BrrC,EAAKiwC,sBAAsBzzC,EAAQ,2BAPnB,mBAOwD8C,KA1CzDU,EA6CnBi0C,YAAc,WACVj0C,EAAK47B,kBAEL57B,EAAK6Z,SAAS,CAAEq6B,YAAY,KAhDbl0C,EAmDnBm0C,oBAAsB,SAAAx0C,GAGlB,GAFAK,EAAK6Z,SAAS,CAAEq6B,YAAY,IAEvBv0C,EAAL,CAEA,IAAMnD,EAASkR,KAAiBs8B,YAC1BlwC,EAAUkG,EAAKo0C,yBAAyB53C,GACxC8C,EAAU0R,YAAcxU,GACxB,CAAE8B,QAAS,oBAAqB1C,QAASY,EAAQ6uC,uBAAuB,GACxE,CAAE/sC,QAAS,YAAa1C,QAASY,GAEvCwD,EAAKiwC,sBAAsBzzC,EAAQ,wBAAyB1C,EAASwF,KA9DtDU,EAiEnBiwC,sBAAwB,SAACzzC,EAAQ63C,EAAkBv6C,EAASwF,GACxD,GAAK+0C,EAAL,CAEA,IAAMtnC,EAAG,GAAAvM,OAAM6zC,EAAN,YAAA7zC,OAAiChE,GACpCwO,EAAM,eAAApV,EAAAP,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAAG,SAAAC,IAAA,OAAAuuB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEDc,KAAgBiJ,KAAKf,GAFpB,cAAAlJ,EAAAC,KAAA,EAIPe,KAAgBiH,aAAa,CAAEC,QAAS+1C,EAAkB73C,OAAQA,EAAQ8xB,YAAY,IAJ/El4B,EAAAk+C,OAAA,2BAAAl+C,EAAAU,SAAAb,EAAA,oBAAH,yBAAAL,EAAAoB,MAAAzB,KAAA0B,YAAA,GAJwDs9C,EAe/Bv0C,EAAK2U,MAAlCu7B,EAf4DqE,EAe5DrE,gBAf4DqE,EAe3Cz+B,QACzB,GAAKo6B,EAAL,CAGIxiC,KAAiByiC,mBAAmBpjC,EAAKqjC,IAAoCplC,EARlE,WACX5T,KAAgBiH,aAAa,CAAEC,QAAS+1C,EAAkB73C,OAAQA,EAAQ8xB,YAAY,QAQtFl3B,KAAgBiH,aAAa,CAAEC,QAAS+1C,EAAkB73C,OAAQA,EAAQ8xB,YAAY,IACtF4hB,EAAgBp2C,EAAS,CACrBu2C,iBAAkBD,IAAqC,IACvDplC,OAAQ,CACJiK,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYgX,IAAI,WAAWuK,MAAM,UAAUpC,UAAU,mBACjDD,EAAAlf,EAAAmM,cAACsyC,GAAD,CAAmB3B,QAASzC,OAEhCn7B,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CACIgX,IAAI,OACJuK,MAAM,UACN7V,KAAK,QACL2T,QAAS,kBAAM1H,KAAiB4iC,sBAAsBvjC,KAJ1D,eA5FG/M,EAwGnBy0C,kBAAoB,SAAAj4C,GAChB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAClB,IAAKA,EAAK6N,KAAM,OAAO,KAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,MAAO,kBAEX,IAAK,qBACD,IAAMkI,EAAaC,KAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,OAAIF,EACOA,EAAWG,WAAa,gBAAkB,cAG9C,KAEX,IAAK,kBACL,IAAK,iBACD,MAAO,sBAIf,OAAO,MA/HQzP,EAkInBo0C,yBAA2B,SAAA53C,GACvB,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,MAAO,eAClB,IAAKA,EAAK6N,KAAM,MAAO,eAEvB,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,MAAO,eAEX,IAAK,qBACD,IAAMkI,EAAaC,KAAgB9W,IAAIc,EAAK6N,KAAKoI,eACjD,OAAIF,EACOA,EAAWG,WAAa,eAAiB,aAG7C,eAEX,IAAK,kBACL,IAAK,iBACD,MAAO,eAIf,MAAO,gBAtJPzP,EAAKuZ,MAAQ,CACTkiB,SAAU,KACVyY,YAAY,EACZH,kBAAkB,GANP/zC,wEA4JV,IACG8V,EAAYvgB,KAAKof,MAAjBmB,QADHwD,EAE8C/jB,KAAKgkB,MAAhDkiB,EAFHniB,EAEGmiB,SAAUyY,EAFb56B,EAEa46B,WAAYH,EAFzBz6B,EAEyBy6B,iBAExBv3C,EAASkR,KAAiBs8B,YAC1B0K,EAAepiC,YAAgB9V,GAC/Bm4C,EAAaniC,YAAchW,GAC3Bo4C,EAAiBr/C,KAAKk/C,kBAAkBj4C,GAE9C,OACIyY,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACI8+C,YAAWpZ,EAAW,cAAgB,KACtCqZ,gBAAc,OACd5/B,UAAWY,EAAQi/B,eACnB1Y,aAAW,OACXjnB,QAAS7f,KAAKo+C,mBACd1+B,EAAAlf,EAAAmM,cAAC8yC,GAAAj/C,EAAD,OAEJkf,EAAAlf,EAAAmM,cAACq6B,GAAAxmC,EAAD,CACImC,GAAG,YACHujC,SAAUA,EACVh8B,KAAM8S,QAAQkpB,GACd3c,QAASvpB,KAAKqmC,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBzd,aAAck0B,GACd/zB,gBAAiBg0B,IACjBn+B,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKq+C,gBAAxB,aACCc,GAAgBz/B,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKu+C,oBAAxB,iBAChBa,GAAcC,GAAkB3/B,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAK0+C,aAAcW,IAE3E3/B,EAAAlf,EAAAmM,cAAC+yC,GAAD,CAAiBz4C,OAAQA,EAAQiD,KAAMy0C,EAAYp1B,QAASvpB,KAAK4+C,sBACjEl/B,EAAAlf,EAAAmM,cAACgzC,GAAD,CAAoB14C,OAAQA,EAAQiD,KAAMs0C,EAAkBj1B,QAASvpB,KAAKy+C,qCA/L7D3+B,IAAMC,WA0MpB4G,GALCC,YACZ7F,IAlTW,SAAAC,GAAK,MAAK,CACrBw+B,eAAgB,CACZ14B,OAAQ,qBAiTZo2B,eAGWv2B,CAAQw3B,cC9TjByB,uBACF,SAAAA,EAAYxgC,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA4/C,IACf//C,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA8/C,GAAAz/C,KAAAH,KAAMof,KA0DVq4B,mBAAqB,SAAA92C,GAAU,IACnBoL,EAAWlM,EAAKuf,MAAhBrT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAEvBA,IAAWpL,EAAOoO,SAClBlP,EAAKykB,SAAS,CAAE9K,OAAQM,YAAczV,GAAOw7C,SAAU7kC,YAAa3W,MAhEzD,IAGP0H,EAAWlM,EAAKuf,MAAhBrT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAJZ,OAMflM,EAAKmkB,MAAQ,CACT87B,WAAY/zC,EACZyN,OAAQM,YAAczV,GACtBw7C,SAAU7kC,YAAa3W,IATZxE,qFA4BG8kB,EAAWC,GAAW,IAAAzF,EACdnf,KAAKof,MAAvBrT,EADgCoT,EAChCpT,OAAQiV,EADwB7B,EACxB6B,MADwB+C,EAEX/jB,KAAKgkB,MAA1BxK,EAFgCuK,EAEhCvK,OAAQqmC,EAFwB97B,EAExB87B,SAEhB,OAAIl7B,EAAU3D,QAAUA,IAIpB2D,EAAU5Y,SAAWA,IAIrB6Y,EAAUpL,SAAWA,GAIrBoL,EAAUi7B,WAAaA,gDAQ3B7wC,IAAUsS,GAAG,mBAAoBthB,KAAKy3C,mEAItCzoC,IAAUhN,eAAe,mBAAoBhC,KAAKy3C,qDAY7C,IACGl3B,EAAYvgB,KAAKof,MAAjBmB,QADHiiB,EAEwBxiC,KAAKgkB,MAA1BxK,EAFHgpB,EAEGhpB,OAAQqmC,EAFXrd,EAEWqd,SAEhB,OACIngC,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,iBAAkBH,EAAQw/B,mBAA3BjgD,OAAAsmB,EAAA,EAAAtmB,CAAA,CACjBkgD,eAAgBH,GACft/B,EAAQ0/B,yBAA2BJ,KAEvCrmC,sDAjEmB4F,EAAO4E,GACnC,GAAI5E,EAAMrT,SAAWiY,EAAM87B,WAAY,KAC3B/zC,EAAWqT,EAAXrT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAE3B,MAAO,CACH+zC,WAAY/zC,EACZyN,OAAQM,YAAczV,GACtBw7C,SAAU7kC,YAAa3W,IAI/B,OAAO,YA1BiByb,IAAMC,YAqFvBgB,OA9FA,SAAAC,GAAK,MAAK,CACrB++B,mBAAoB,CAChBh+B,MAA8B,SAAvBf,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQjhB,KAAKyiC,UAAY,WAE1ED,yBAA0B,CACtBl+B,MAAOf,EAAM0d,QAAQC,QAAQwhB,KAAO,gBAyFV,CAAEh5B,WAAW,GAAhCpG,CAAwC6+B,ICnDxCQ,sNArCX76B,YAAc,SAAAja,GAAS,IAAA6T,EACUtf,EAAKuf,MAA1BrT,EADWoT,EACXpT,OAAQ4uB,EADGxb,EACHwb,SACXA,IAELrvB,EAAMma,kBACNkV,EAAS5uB,0FATS4Y,EAAWC,GAC7B,OAAOD,EAAU5Y,SAAW/L,KAAKof,MAAMrT,wCAWlC,IACGA,EAAW/L,KAAKof,MAAhBrT,OACF1H,EAAO2K,IAAU9L,IAAI6I,GAErBwT,EAAWtI,YAAgB5S,GAEjC,OACIqb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,OAAOE,QAAS7f,KAAKulB,aAChC7F,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACXD,EAAAlf,EAAAmM,cAACiT,GAAA,EAAD,CAAiB7T,OAAQA,IACzB2T,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgBJ,IAEnCG,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAAC0zC,GAAD,CAAmBt0C,OAAQA,eA5B7B+T,IAAMC,YCD1BugC,sNAuBFrI,uBAAyB,SAAAt3C,GACrBd,EAAKwhB,iBAGToZ,kBAAoB,SAAA95B,GAAU,IAClBsG,EAAWpH,EAAKuf,MAAhBnY,OAEJtG,EAAO0F,UAAYY,GAEvBpH,EAAKwhB,oGA/BasD,EAAWC,GAC7B,OAAID,EAAU1d,SAAWjH,KAAKof,MAAMnY,QAIhC0d,EAAUpN,IAAMvX,KAAKof,MAAM7H,8CAQ/B1E,IAAUyO,GAAG,mCAAoCthB,KAAKi4C,wBACtDplC,IAAUyO,GAAG,kBAAmBthB,KAAKy6B,kEAIrC5nB,IAAU7Q,eAAe,mCAAoChC,KAAKi4C,wBAClEplC,IAAU7Q,eAAe,kBAAmBhC,KAAKy6B,oDAe5C,IAAAtb,EACoCnf,KAAKof,MAAtC7H,EADH4H,EACG5H,EAAGtQ,EADNkY,EACMlY,OAAQsT,EADd4E,EACc5E,kBAEbI,EAAQmB,YAAa7U,EAAQsT,EAAmBhD,GAEtD,OAAOmI,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgBhF,UAxCbmF,IAAMC,YAiDvCugC,GAAmBz/B,aAAe,CAC9BtG,mBAAmB,GAGR6M,qBAAkBk5B,cCzC3BC,uBACF,SAAAA,EAAYnhC,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAugD,IACf1gD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAygD,GAAApgD,KAAAH,KAAMof,KA8DVq4B,mBAAqB,SAAA92C,GAAU,IACnBsG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAAV,CAEA,IAAI2uC,GAAiB,EACrB,OAAQx8C,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMsI,EAAWb,KAAgBc,YAAYpW,EAAK6N,KAAK0H,gBACvD,GAAIY,GAAYA,EAAS+B,QACN/B,EAAS+B,QAAQukC,KAAK,SAAA/0C,GAAC,OAAIA,EAAEqD,UAAYpO,EAAOoO,YAE3DyxC,GAAiB,GAGzB,MAEJ,IAAK,kBAML,IAAK,iBACGx8C,EAAK6N,KAAK9C,UAAYpO,EAAOoO,UAC7ByxC,GAAiB,GASzBA,GACA3gD,EAAK2gD,eAAex8C,KAnGTnE,EAuGnB2gD,eAAiB,SAAAx8C,GACbnE,EAAKykB,SAAS,CACVo8B,SAAUtnC,YAA6BpV,EAAKrB,IAC5Ck9C,SAAU9kC,YAAkC/W,EAAKrB,OA1GtC9C,EA8GnB8gD,qBAAuB,SAAAhgD,GAAU,IACrBsG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYpO,EAAOoO,SAE7BlP,EAAK2gD,eAAex8C,KAxHTnE,EA4HnB+gD,2BAA6B,SAAAjgD,GAAU,IAC3BsG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK0H,iBAAmB5Y,EAAO4Y,gBAEpC1Z,EAAK2gD,eAAex8C,IAtITnE,EA0InBghD,2BAA6B,SAAAlgD,GAAU,IAC3BsG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKoI,gBAAkBtZ,EAAOsZ,eAEnCpa,EAAK2gD,eAAex8C,IApJTnE,EAwJnB61C,mBAAqB,SAAA/0C,GAAU,IACnBsG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK0H,iBAAmB5Y,EAAOs5B,YAAYt3B,IAEhD9C,EAAK2gD,eAAex8C,IAlKTnE,EAsKnB81C,mBAAqB,SAAAh1C,GAAU,IACnBsG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKoI,gBAAkBtZ,EAAOoZ,WAAWpX,IAE9C9C,EAAK2gD,eAAex8C,IAhLT,IAGPiD,EAAWpH,EAAKuf,MAAhBnY,OAHO,OAKfpH,EAAKmkB,MAAQ,CACT8hB,WAAY7+B,EACZy5C,SAAUtnC,YAA6BnS,GACvC44C,SAAU9kC,YAAkC9T,IARjCpH,qFA0BG8kB,EAAWC,GAAW,IAChC3d,EAAWjH,KAAKof,MAAhBnY,OADgC8c,EAET/jB,KAAKgkB,MAA5B08B,EAFgC38B,EAEhC28B,SAAUb,EAFsB97B,EAEtB87B,SAElB,OAAIl7B,EAAU1d,SAAWA,IAIrB2d,EAAU87B,WAAaA,GAIvB97B,EAAUi7B,WAAaA,+CAQ3B7wC,IAAUsS,GAAG,mBAAoBthB,KAAKy3C,oBACtCn+B,KAAgBgI,GAAG,mBAAoBthB,KAAK01C,oBAC5C17B,KAAgBsH,GAAG,mBAAoBthB,KAAK21C,oBAC5C3mC,IAAUsS,GAAG,qBAAsBthB,KAAK2gD,sBACxCrnC,KAAgBgI,GAAG,2BAA4BthB,KAAK4gD,4BACpD5mC,KAAgBsH,GAAG,2BAA4BthB,KAAK6gD,2EAIpD7xC,IAAUhN,eAAe,mBAAoBhC,KAAKy3C,oBAClDn+B,KAAgBtX,eAAe,mBAAoBhC,KAAK01C,oBACxD17B,KAAgBhY,eAAe,mBAAoBhC,KAAK21C,oBACxD3mC,IAAUhN,eAAe,qBAAsBhC,KAAK2gD,sBACpDrnC,KAAgBtX,eAAe,2BAA4BhC,KAAK4gD,4BAChE5mC,KAAgBhY,eAAe,2BAA4BhC,KAAK6gD,6DAwH3D,IACGtgC,EAAYvgB,KAAKof,MAAjBmB,QADHiiB,EAE0BxiC,KAAKgkB,MAA5B08B,EAFHle,EAEGke,SAAUb,EAFbrd,EAEaqd,SAElB,OACIngC,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IACP,gBACAm/B,EAAWt/B,EAAQugC,qBAAuBvgC,EAAQwgC,iBAErDL,sDAlLmBthC,EAAO4E,GACnC,GAAI5E,EAAMnY,SAAW+c,EAAM8hB,WAAY,KAC3B7+B,EAAWmY,EAAXnY,OAER,MAAO,CACH6+B,WAAY7+B,EACZy5C,SAAUtnC,YAA6BnS,GACvC44C,SAAU9kC,YAAkC9T,IAIpD,OAAO,YAxBmB6Y,IAAMC,YAqMzBgB,OA9MA,SAAAC,GAAK,MAAK,CACrB+/B,eAAgB,CACZh/B,MAA8B,SAAvBf,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQjhB,KAAKyiC,UAAY,WAE1EY,qBAAsB,CAClB/+B,MAAOf,EAAM0d,QAAQC,QAAQwhB,KAAO,gBAyMV,CAAEh5B,WAAW,GAAhCpG,CAAwCw/B,IChNjDS,uBACF,SAAAA,EAAY5hC,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAghD,IACfnhD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAkhD,GAAA7gD,KAAAH,KAAMof,KAaVmG,YAAc,WAAM,IAAApG,EACatf,EAAKuf,MAA1BnY,EADQkY,EACRlY,OAAQ0zB,EADAxb,EACAwb,SAChB,GAAKA,EAAL,CAEA,IAAM32B,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GAEL22B,EAAS32B,KArBMnE,qFAUG8kB,EAAWC,GAC7B,OAAOD,EAAU1d,SAAWjH,KAAKof,MAAMnY,wCAalC,IAAAqZ,EAC2DtgB,KAAKof,MAA7DnY,EADHqZ,EACGrZ,OAAQg6C,EADX3gC,EACW2gC,aAAcC,EADzB5gC,EACyB4gC,WAAY3mC,EADrC+F,EACqC/F,kBAE1C,OACImF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,OAAOE,QAAS7f,KAAKulB,aAChC7F,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACXD,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,EAAQ0zB,SAAUsmB,EAAc1mC,kBAAmBA,IAC5EmF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACXD,EAAAlf,EAAAmM,cAACw0C,GAAD,CAAoBl6C,OAAQA,EAAQsT,kBAAmBA,KAE1D2mC,IAAe3mC,GACZmF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAACy0C,GAAD,CAAqBn6C,OAAQA,eAtCnC6Y,IAAMC,YAwDhCihC,GAAYngC,aAAe,CACvBtG,mBAAmB,EACnB2mC,YAAY,GAGDF,+BClDTK,uBACF,SAAAA,EAAYjiC,GAAQ,OAAAtf,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAqhD,GAAAvhD,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAuhD,GAAAlhD,KAAAH,KACVof,0EAGD,IAAAD,EACwDnf,KAAKof,MAA1DmB,EADHpB,EACGoB,QAAStZ,EADZkY,EACYlY,OAAQsQ,EADpB4H,EACoB5H,EAAG+pC,EADvBniC,EACuBmiC,WAAYzhC,EADnCV,EACmCU,QAAS0J,EAD5CpK,EAC4CoK,QAE7C+wB,EAAO/iC,EAAE,YAOb,OANIkE,YAAcxU,GACdqzC,EAAO/iC,EAAE,QACFoE,YAAc1U,KACrBqzC,EAAO/iC,EAAE,gBAITmI,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBACV2hC,GACG5hC,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQghC,eAAgB1hC,QAAS0J,GACpD7J,EAAAlf,EAAAmM,cAAC60C,GAAAhhD,EAAD,OAGRkf,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oCAAoCE,QAASA,GACxDH,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,yBAAyB26B,KAE3CgH,GACE5hC,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQkhC,gBAAiB5hC,QAAS0J,GACrD7J,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,eA3BQsf,IAAMC,YAwCvB4G,GALCC,YACZQ,cACArG,IA9CW,CACXwgC,eAAgB,CACZz6B,OAAQ,qBAEZ26B,gBAAiB,CACb36B,OAAQ,sBAyCO,CAAEK,WAAW,IAGrBR,CAAQ06B,wFCvCjBK,eACF,SAAAA,EAAYtiC,GAAQ,OAAAtf,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA0hD,GAAA5hD,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA4hD,GAAAvhD,KAAAH,KACVof,0EAGD,IAAAD,EACkBnf,KAAKof,MAApBmB,EADHpB,EACGoB,QAAShJ,EADZ4H,EACY5H,EACT6tB,EAAYplC,KAAKgkB,MAAjBohB,QAER,OACI1lB,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAAS7f,KAAKulC,4BACxD7lB,EAAAlf,EAAAmM,cAAC06B,GAAA7mC,EAAD,KAAgB4kC,EAAwC1lB,EAAAlf,EAAAmM,cAACg1C,GAAAnhD,EAAD,MAA9Bkf,EAAAlf,EAAAmM,cAACi1C,GAAAphD,EAAD,OAC1Bkf,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIm+B,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYimB,QAAQ,UAAUo7B,QAAM,GAC/BtqC,EAAE,oBAIfmI,EAAAlf,EAAAmM,cAACm1C,GAAAthD,EAAD,KACIkf,EAAAlf,EAAAmM,cAACo1C,GAAAvhD,EAAD,CAAQuhB,MAAM,UAAUK,SAAUpiB,KAAKulC,2BAA4B9iB,SAAU2iB,oBApB7DF,GAgCrBve,GALCC,YACZQ,cACArG,IAnCW,CACXouB,SAAU,CACN/rB,QAAS,cAiCM,CAAE+D,WAAW,IAGrBR,CAAQ+6B,wFC3BjBM,eACF,SAAAA,EAAY5iC,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAgiD,IACfniD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAkiD,GAAA7hD,KAAAH,KAAMof,KAoBV6iC,gBAAkB,WACdpiD,EAAKykB,SAAS,CAAE49B,UAAWriD,EAAKmkB,MAAMk+B,YAtBvBriD,EAyBnBsiD,kBAAoB,WAChB,IAAMtR,EAAgB14B,KAAiBs8B,YAC/BxtC,EAAWpH,EAAKuf,MAAhBnY,OACJ4pC,IAAkB5pC,GAGlBpF,KAAgBugD,UAAUn7C,IA/BfpH,EAmCnBwiD,YAAc,WAAM,IACRp7C,EAAWpH,EAAKmkB,MAAhB/c,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,GACAA,EAAK6N,KAAV,CALgB,IAOR9C,EAAY/K,EAAK6N,KAAjB9C,QACHA,GAELlN,KAAgBiJ,KAAK,CACjB/B,QAASkqB,YAAclkB,GAAW,cAAgB,YAClDA,QAASA,MA/CE,IAGP9H,EAAWpH,EAAKuf,MAAhBnY,OAHO,OAIfpH,EAAKmkB,MAAQ,CACT8hB,WAAY7+B,EACZi7C,UAAU,GANCriD,wEAmDV,IAAAsf,EAC0Bnf,KAAKof,MAA5B7H,EADH4H,EACG5H,EAAGtQ,EADNkY,EACMlY,OAAQsZ,EADdpB,EACcoB,QACX2hC,EAAaliD,KAAKgkB,MAAlBk+B,SAEFl+C,EAAO6O,IAAU3P,IAAI+D,GAErBq7C,EAAU5mC,YAAYzU,GACxBs7C,GAAY,GACXD,GAAWt+C,EAAK6N,OACjB0wC,EAAYtvB,YAAcjvB,EAAK6N,KAAK9C,UAExC,IAAMyzC,EAAW5mC,YAAa3U,GACxB61B,EAAYnhB,YAAc1U,GAEhC,OACIyY,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAAS7f,KAAKiiD,iBACxDviC,EAAAlf,EAAAmM,cAAC06B,GAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC81C,GAAAjiD,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIm+B,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYimB,QAAQ,UAAUo7B,QAAM,GAC/BtqC,EAAE,WAId2qC,EAAWxiC,EAAAlf,EAAAmM,cAAC+1C,GAAAliD,EAAD,MAAiBkf,EAAAlf,EAAAmM,cAACg2C,GAAAniD,EAAD,OAEjCkf,EAAAlf,EAAAmM,cAACi2C,GAAApiD,EAAD,CAAUqiD,GAAIX,EAAU5E,QAAQ,OAAOwF,eAAa,GAChDpjC,EAAAlf,EAAAmM,cAACqiC,GAAAxuC,EAAD,CAAMuiD,UAAU,MAAMC,gBAAc,IAC9BV,GACE5iC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAAS7f,KAAKmiD,mBACxDziC,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIyiD,OAAK,EACLtkB,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYimB,QAAQ,UAAUo7B,QAAM,GAC/BtqC,EAAE,mBAKnBmI,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAAS7f,KAAKqiD,aACxD3iC,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIyiD,OAAK,EACLtkB,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYuhB,MAAM,YAAY0E,QAAQ,UAAUo7B,QAAM,GACrCtqC,EAAZgrC,EAAc,UAAe,qBAOrDD,GAAWE,GACR9iC,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,UAChCzvB,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIyiD,OAAK,EACLtkB,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYuhB,MAAM,YAAY0E,QAAQ,UAAUo7B,QAAM,GACrCtqC,EAAZulB,EAAc,eAAoB,kBAMtDwlB,IAAYE,GACT9iC,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,UAChCzvB,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIyiD,OAAK,EACLtkB,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYuhB,MAAM,YAAY0E,QAAQ,UAAUo7B,QAAM,GACjDtqC,EAAE,wEAlHX6H,EAAO4E,GACnC,OAAI5E,EAAMnY,SAAW+c,EAAM8hB,WAChB,CACHA,WAAY1mB,EAAMnY,OAClBi7C,UAAU,GAIX,YAnBYpiC,IAAMC,WA+IlB4G,GALCC,YACZQ,cACArG,IAlJW,CACXouB,SAAU,CACN/rB,QAAS,cAgJM,CAAE+D,WAAW,IAGrBR,CAAQq7B,gCCjGjBkB,uBACF,SAAAA,EAAY9jC,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAkjD,IACfrjD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAojD,GAAA/iD,KAAAH,KAAMof,KAmGVwhC,2BAA6B,SAAAjgD,GACzB,IAAMqD,EAAO6O,IAAU3P,IAAIrD,EAAKuf,MAAMnY,QACjCjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK0H,iBAAmB5Y,EAAO4Y,iBAEpC1Z,EAAKsjD,mBAELtjD,EAAKwhB,gBA/GMxhB,EAmHnBghD,2BAA6B,SAAAlgD,GACzB,IAAMqD,EAAO6O,IAAU3P,IAAIrD,EAAKuf,MAAMnY,QACjCjD,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKoI,gBAAkBtZ,EAAOsZ,eAEnCpa,EAAKwhB,eA5HMxhB,EAgInB8gD,qBAAuB,SAAAhgD,GACnB,IAAMqD,EAAO6O,IAAU3P,IAAIrD,EAAKuf,MAAMnY,QACjCjD,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYpO,EAAOoO,SAE7BlP,EAAKwhB,gBAzIMxhB,EA6InB43C,mBAAqB,SAAA92C,GACbd,EAAKqc,QAAQnZ,IAAIpC,EAAOoO,UACxBlP,EAAKwhB,eA/IMxhB,EAmJnBsjD,iBAAmB,WACftjD,EAAKua,cAELva,EAAKujD,oBAELvjD,EAAKwjD,oBAxJUxjD,EA2JnBwjD,iBAAmB,WAAM,IACbp8C,EAAWpH,EAAKuf,MAAhBnY,OAEFtH,EAAQC,IAAUwD,WAExBwQ,YAAiBjU,EAAO,CAACsH,IACzB,IAAMiV,EAAUF,YAAoB/U,GAAQwG,IAAI,SAAA/B,GAAC,OAAIA,EAAEqD,UACvD0C,YAAiB9R,EAAOuc,IAlKTrc,EAqKnBua,YAAc,WAAM,IACRnT,EAAWpH,EAAKuf,MAAhBnY,OAERkV,YAAgBlV,IAxKDpH,EA2KnBujD,kBA3KmBtjD,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KA2KC,SAAAC,IAAA,IAAAuG,EAAAmD,EAAA,OAAA6kB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACRkG,EAAWpH,EAAKuf,MAAhBnY,QAEQyU,YAAYzU,GAHZ,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,qBAMHmZ,YAASvT,GANN,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EASKc,KAAgBiJ,KAAK,CACtC/B,QAAS,oBACTgG,QAASoE,YAAclM,GACvB8yC,eAAgB,EAChB1nB,MAAO,IAbK,OASVjoB,EATUvJ,EAAAmK,KAgBhBnL,EAAKykB,SAAS,CAAEg/B,kBAAmBl5C,EAAO+vC,SAASl0C,OAAS,IAhB5C,yBAAApF,EAAAU,SAAAb,MA3KDb,EA8LnB0jD,mBAAqB,WAAM,IAAApkC,EACDtf,EAAKuf,MAAnB7H,EADe4H,EACf5H,EAAGtQ,EADYkY,EACZlY,OACLkU,EAAWD,YAAgBjU,GACjC,GAAKkU,EAAL,CAEA,IAAMqoC,EAAoBC,KAAYvgD,IAAI,YACpCwgD,EAAeF,EAAoBA,EAAkBhuC,MAAQ,wBAEnEilC,IAAKiJ,EAAevoC,GAEpB,IAAM3D,EAAG,GAAAvM,OAAMhE,EAAN,kBACH1C,EAAUgT,EAAE,cAGlB1X,EAAK66C,sBAAsBljC,EAAKjT,EAFjB,QA1MA1E,EA+MnB66C,sBAAwB,SAACljC,EAAKjT,EAASkR,GACnC,GAAK+B,EAAL,CAD8C,IAAA8I,EAGTzgB,EAAKuf,MAAlCu7B,EAHsCr6B,EAGtCq6B,gBAAiBp6B,EAHqBD,EAGrBC,QACzB,GAAKo6B,EAAL,CAIIxiC,KAAiByiC,mBAAmBpjC,EAAKqjC,IAAqC,IAAsBplC,IAEpGklC,EAAgBp2C,EAAS,CACrBu2C,iBAAkBD,IAClBplC,OAAQ,CACJiK,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACIgX,IAAI,QACJsvB,aAAW,QACX/kB,MAAM,UACNpC,UAAWY,EAAQ8P,MACnBxQ,QAAS,kBAAM1H,KAAiB4iC,sBAAsBvjC,KACtDkI,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,aAlODX,EAyOnB8jD,gBAAkB,WAAM,IAAAx7B,EACEtoB,EAAKuf,MAAnB7H,EADY4Q,EACZ5Q,EAAGtQ,EADSkhB,EACTlhB,OACL28C,EAAcxoC,YAAmBnU,GACvC,GAAK28C,EAAL,CAEAnJ,IAAKh7B,aAAkBmkC,IAEvB,IAAMpsC,EAAG,GAAAvM,OAAMhE,EAAN,eACH1C,EAAUgT,EAAE,eAGlB1X,EAAK66C,sBAAsBljC,EAAKjT,EAFjB,QAlPA1E,EAuPnBgkD,kBAAoB,WAChBhkD,EAAKikD,mBAAmBx2B,QAAQgb,UAAY,GAxP7BzoC,EA2PnBkkD,iBAAmB,WAAM,IACb98C,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GACtBjD,GACAA,EAAKa,OAEVsT,KAAiB6rC,6BAA6B,CAAE/8C,OAAQA,KAjQzCpH,EAoQnBokD,eAAiB,WAAM,IAAAt7B,EACO9oB,EAAKuf,MAAvBnY,EADW0hB,EACX1hB,OAAQ+rB,EADGrK,EACHqK,MAEhBJ,aAAS3rB,EAAQ,MAAM,GAEnB+rB,GACAnxB,KAAgBiH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,KA5QDpH,EAiRnBqkD,iBAAmB,SAAAn4C,GACfujB,aAASvjB,GAAQ,IAlRFlM,EAqRnBskD,iBAAmB,WACf,OAAKtkD,EAAKikD,mBAEHjkD,EAAKikD,mBAAmBx2B,QAAQ82B,aAFF,GAnRrCvkD,EAAKikD,mBAAqBhkC,IAAMggB,YAHjB,IAKP74B,EAAWpH,EAAKuf,MAAhBnY,OALO,OAOfpH,EAAKqc,QAAU,IAAI7S,IACnBxJ,EAAKmkB,MAAQ,CACT8hB,WAAY7+B,EACZq8C,mBAAmB,GAVRzjD,uFAyBKklB,EAAWC,GAAW,IAClC/d,EAAWjH,KAAKof,MAAhBnY,OAEFo1B,EAAOr8B,KAAK8jD,mBAAmBx2B,QAC7Bgb,EAA0CjM,EAA1CiM,UAAWC,EAA+BlM,EAA/BkM,aAAc8b,EAAiBhoB,EAAjBgoB,aAC3Bp/B,EAAW,CACbqjB,UAAWA,EACXC,aAAcA,EACd8b,aAAcA,GAOlB,OAJA1gD,QAAQ4F,IAAR,gDAAA0B,OACoDhE,EADpD,eAAAgE,OACwEq9B,EADxE,kBAAAr9B,OACkGs9B,EADlG,kBAAAt9B,OAC+Ho5C,IAGxHp/B,gDAGWN,EAAWC,GAAW,IAAAkd,EACd9hC,KAAKof,MAAvBnY,EADgC66B,EAChC76B,OAAQ+Z,EADwB8gB,EACxB9gB,MACRsiC,EAAsBtjD,KAAKgkB,MAA3Bs/B,kBAER,OAAI3+B,EAAU1d,SAAWA,IAIrB0d,EAAU3D,QAAUA,GAIpB4D,EAAU0+B,oBAAsBA,8CAOrBv+B,EAAWC,EAAWC,GAAU,IACvChe,EAAWjH,KAAKof,MAAhBnY,OACJ8d,EAAU9d,SAAWA,GACrBjH,KAAKmjD,mBAGTx/C,QAAQ4F,IAAI,qBAAsBvJ,KAAK8jD,oBACvC,IAAMznB,EAAOr8B,KAAK8jD,mBAAmBx2B,QAC7Bgb,EAA0CrjB,EAA1CqjB,UAAWC,EAA+BtjB,EAA/BsjB,aAA+BtjB,EAAjBo/B,aACjC1gD,QAAQ4F,IAAR,kDAAA0B,OACsDhE,EADtD,oBAAAgE,OAEQoxB,EAAKiM,UAFb,uBAAAr9B,OAG0BoxB,EAAKgoB,aAH/B,uBAAAp5C,OAGiEoxB,EAAKkM,eAEtElM,EAAKiM,UAAYA,GAAajM,EAAKkM,aAAeA,GAClD5kC,QAAQ4F,IAAR,iDAAA0B,OACqDhE,EADrD,oBAAAgE,OAEQoxB,EAAKiM,UAFb,uBAAAr9B,OAG0BoxB,EAAKgoB,aAH/B,uBAAAp5C,OAGiEoxB,EAAKkM,2DAKtEvoC,KAAKmjD,mBAELn0C,IAAUsS,GAAG,mBAAoBthB,KAAKy3C,oBACtCzoC,IAAUsS,GAAG,qBAAsBthB,KAAK2gD,sBACxCrnC,KAAgBgI,GAAG,2BAA4BthB,KAAK4gD,4BACpD5mC,KAAgBsH,GAAG,2BAA4BthB,KAAK6gD,2EAIpD7xC,IAAUhN,eAAe,mBAAoBhC,KAAKy3C,oBAClDzoC,IAAUhN,eAAe,qBAAsBhC,KAAK2gD,sBACpDrnC,KAAgBtX,eAAe,2BAA4BhC,KAAK4gD,4BAChE5mC,KAAgBhY,eAAe,2BAA4BhC,KAAK6gD,6DA0L3D,IAAAp2C,EAAAzK,KAAA2jC,EAWD3jC,KAAKof,MATL7H,EAFCosB,EAEDpsB,EACAoI,EAHCgkB,EAGDhkB,UACA1Y,EAJC08B,EAID18B,OACAsZ,EALCojB,EAKDpjB,QACA+jC,EANC3gB,EAMD2gB,kBACAC,EAPC5gB,EAOD4gB,qBACAvxB,EARC2Q,EAQD3Q,MACAsuB,EATC3d,EASD2d,WACA/3B,EAVCoa,EAUDpa,QAEI+5B,EAAsBtjD,KAAKgkB,MAA3Bs/B,kBAEFt/C,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EACD,OACI0b,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACXD,EAAAlf,EAAAmM,cAAC63C,GAAD,CAAmBj7B,QAASA,IAC5B7J,EAAAlf,EAAAmM,cAAA,OAAKwzB,IAAKngC,KAAK8jD,mBAAoBnkC,UAAU,uBAKzD,IAAMxE,EAAWD,YAAgBjU,GAC3B28C,EAAcxoC,YAAmBnU,GACjCsU,EAAMD,YAAWrU,GACjBq7C,EAAU5mC,YAAYzU,GACtBw9C,EAAOjqC,YAASvT,GAEhBiV,EAAUF,YAAoB/U,GAC9BiK,EAAQ,GACdlR,KAAKkc,QAAU,IAAI7S,IACnB6S,EAAQ7Y,QAAQ,SAAAqhD,GACZ,IAAMrgD,EAAO2K,IAAU9L,IAAIwhD,EAAO31C,SAC9B1K,IACAoG,EAAKyR,QAAQjb,IAAIoD,EAAK1B,GAAI0B,EAAK1B,IAC/BuO,EAAMzH,KAAKpF,MAInB,IAGMpB,EAHciO,EAAMyzC,KAAK,SAACj5C,EAAGk5C,GAC/B,OAAOzxB,YAAmByxB,GAAKzxB,YAAmBznB,KAE5B+B,IAAI,SAAApJ,GAAI,OAC9Bqb,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAU33B,IAAKnT,EAAK1B,IACpD+c,EAAAlf,EAAAmM,cAACk4C,GAAD,CAAa94C,OAAQ1H,EAAK1B,GAAIg4B,SAAUlwB,EAAKy5C,sBAI7Cr/C,EAAUb,EAAVa,MAEFL,EACFkb,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAC63C,GAAD,CACIv9C,OAAQA,EACRq6C,WAAYA,EACZ/3B,QAASA,EACT1J,QAAS7f,KAAK6jD,oBAElBnkC,EAAAlf,EAAAmM,cAAA,OAAKwzB,IAAKngC,KAAK8jD,mBAAoBnkC,UAAU,qBACzCD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,qBACXD,EAAAlf,EAAAmM,cAACm4C,GAAD,CACI79C,OAAQA,EACRi6C,WAAYluB,EACZzY,mBAAoByY,EACpBiuB,aAAcp8C,EAAQ7E,KAAK+jD,iBAAmB,SAGpD5oC,GAAYyoC,GAAeroC,IACzBmE,EAAAlf,EAAAmM,cAACqiC,GAAAxuC,EAAD,KACK2a,GACGuE,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAAS7f,KAAKujD,oBACxD7jC,EAAAlf,EAAAmM,cAAC06B,GAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAACo4C,GAAAvkD,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIm+B,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYimB,QAAQ,UAAUo7B,QAAM,GAC/B1mC,MAMpByoC,GACGlkC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAAS7f,KAAK2jD,iBACxDjkC,EAAAlf,EAAAmM,cAAC06B,GAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAACq4C,GAAAxkD,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIm+B,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYimB,QAAQ,UAAUo7B,QAAM,GAC/BpiC,aAAkBmkC,QAO1CroC,GACGmE,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAUmf,UAAWY,EAAQ4uB,UACzBzvB,EAAAlf,EAAAmM,cAAC06B,GAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAACs4C,GAAAzkD,EAAD,CAAkBmf,UAAU,4BAEhCD,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIm+B,QAASpjB,EACT3O,MAAO,CAAEs4C,WAAY,WAAYC,SAAU,kBAM/DzlC,EAAAlf,EAAAmM,cAACmiC,GAAAtuC,EAAD,MACAkf,EAAAlf,EAAAmM,cAACqiC,GAAAxuC,EAAD,MACMikD,GAAQ/kC,EAAAlf,EAAAmM,cAACy4C,GAAD,CAAuBn+C,OAAQA,IACxCq7C,GAAW5iC,EAAAlf,EAAAmM,cAAC04C,GAAD,CAAcp+C,OAAQA,IACjC+rB,IAAUsvB,GACP5iC,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAAS7f,KAAKikD,gBACxDvkC,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIyiD,OAAK,EACLtkB,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYuhB,MAAM,UAAU0E,QAAQ,UAAUo7B,QAAM,GAC/CtqC,EAAE,eAAe+tC,mBAO1C5lC,EAAAlf,EAAAmM,cAACmiC,GAAAtuC,EAAD,MACAkf,EAAAlf,EAAAmM,cAACqiC,GAAAxuC,EAAD,KACIkf,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAAChI,UAAQ,EAACznB,UAAWY,EAAQ4uB,SAAUtvB,QAASykC,GAC5D5kC,EAAAlf,EAAAmM,cAAC06B,GAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC26B,GAAA9mC,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIm+B,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYimB,QAAQ,UAAUo7B,QAAM,GAC/BtqC,EAAE,mBAKlB+rC,GACG5jC,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAAS0kC,GACnD7kC,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CACIyiD,OAAK,EACLtkB,QACIjf,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYimB,QAAQ,UAAUo7B,QAAM,GAC/BtqC,EAAE,uBAO1BtU,EAAMgD,OAAS,GACZyZ,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACmiC,GAAAtuC,EAAD,MACAkf,EAAAlf,EAAAmM,cAACqiC,GAAAxuC,EAAD,KAAOyC,MAO3B,OAAO+vB,EAAQtT,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KAAG3gB,GAAckb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,eAAgBf,IAAanb,sDArb5D4a,EAAO4E,GACnC,OAAI5E,EAAMnY,SAAW+c,EAAM8hB,WAChB,CACHA,WAAY1mB,EAAMnY,OAClBq8C,mBAAmB,GAIpB,YAvBWxjC,IAAMC,YAwdjB4G,GARCC,YACZ6kB,cACArkB,cACArG,IAleW,SAAAC,GAAK,MAAK,CACrB2uB,gBAAiB,CACb7oB,OAAQ,qBAEZy+B,OAAQ,GAGRl1B,MAAO,CACHjN,QAASpC,EAAM+7B,QAAQC,KAAO,GAElC7N,SAAU,CACN/rB,QAAS,eAudM,CAAE+D,WAAW,IAChC+1B,eACAtR,cAGWjlB,CAAQu8B,IClhBjBsC,uBACF,SAAAA,EAAYpmC,GAAQ,OAAAtf,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAwlD,GAAA1lD,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA0lD,GAAArlD,KAAAH,KACVof,0EAGD,IAAAD,EACwBnf,KAAKof,MAA1BmB,EADHpB,EACGoB,QAASgJ,EADZpK,EACYoK,QAEjB,OACI7J,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBACXD,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQklC,eAAgB5lC,QAAS0J,GACpD7J,EAAAlf,EAAAmM,cAAC60C,GAAAhhD,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,qCACXD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,yBAAhB,6BAdeG,IAAMC,YAyB1BgB,OA/BA,CACX0kC,eAAgB,CACZ3+B,OAAQ,sBA6BD/F,CAAmBykC,IC1B5BE,uBACF,SAAAA,EAAYtmC,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA0lD,IACf7lD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA4lD,GAAAvlD,KAAAH,KAAMof,KA0BVsb,aAAe,SAAA12B,GAAQ,IACXgvB,EAAUnzB,EAAKuf,MAAf4T,MAERJ,aAAS5uB,EAAKrB,IAEVqwB,GACAnxB,KAAgBiH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,KAhChBpH,EAAKmkB,MAAQ,CACTk2B,QAAS,IAJEr6C,mFAQC,IAAA4K,EAAAzK,KACRiH,EAAWjH,KAAKof,MAAhBnY,OAEF8E,EAASoH,YAAclM,GACxB8E,GAELlK,KAAgBiJ,KAAK,CACjB/B,QAAS,oBACTgG,QAAShD,EACTguC,eAAgB,EAChB1nB,MAAO,MACRjnB,KAAK,SAAAhB,GACJ,IAAMzK,EAAQC,IAAUwD,WACxBwQ,YAAiBjU,EAAOyK,EAAO+vC,UAE/B1vC,EAAK6Z,SAAS,CAAE41B,QAAS9vC,EAAO+vC,8CAiB/B,IAAA9L,EAAAruC,KAAAmf,EACiCnf,KAAKof,MAAnCumC,EADHxmC,EACGwmC,UAAWp8B,EADdpK,EACcoK,QAASyJ,EADvB7T,EACuB6T,MAGtB2mB,EAFc35C,KAAKgkB,MAAjBk2B,QAEczsC,IAAI,SAAA/B,GAAC,OACvBgU,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAAC53B,IAAK9L,GAClBgU,EAAAlf,EAAAmM,cAACm4C,GAAD,CAAa79C,OAAQyE,EAAGivB,SAAU0T,EAAK3T,kBAIzCl2B,EACFkb,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACi5C,GAAD,CAAsBr8B,QAASA,IAC/B7J,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwB/S,MAAO,CAAE+4C,cAC3ChM,IAKb,OAAO3mB,EAAQtT,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KAAG3gB,GAAckb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBAAoBnb,UA5D9Csb,IAAMC,YAuEnC2lC,GAAe7kC,aAAe,CAC1BmS,OAAO,EACP2yB,UAAW,GAGAD,oDC5ETG,uBACF,SAAAA,EAAYzmC,GAAQ,OAAAtf,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA6lD,GAAA/lD,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA+lD,GAAA1lD,KAAAH,KACVof,0EAGD,IAAAD,EACsBnf,KAAKof,MAAxBmB,EADHpB,EACGoB,QAAS8P,EADZlR,EACYkR,MAEjB,OACI3Q,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBACXD,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQklC,eAAgB5lC,QAASwQ,GACpD3Q,EAAAlf,EAAAmM,cAAC60C,GAAAhhD,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,qCACXD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,yBAAhB,yBAdmBG,IAAMC,YAqB9BgB,OA3BA,CACX0kC,eAAgB,CACZ3+B,OAAQ,sBAyBD/F,CAAmB8kC,ICzB5BC,sNACF9hC,MAAQ,CACJxO,MAAO,KAGXuwC,aAAe,SAACz6C,EAAOkK,GACnB3V,EAAKykB,SAAS,CAAE9O,mFAGX,IAAA2J,EACsBnf,KAAKof,MAAxBmK,EADHpK,EACGoK,QAASyJ,EADZ7T,EACY6T,MACTxd,EAAUxV,KAAKgkB,MAAfxO,MAEFhR,EACFkb,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACq5C,GAAD,CAA0B31B,MAAO9G,IACjC7J,EAAAlf,EAAAmM,cAACs5C,GAAAzlD,EAAD,CACIgV,MAAOA,EACP4M,SAAUpiB,KAAK+lD,aACfG,eAAe,UACfC,UAAU,UACVC,YAAU,EACVC,cAAc,MACdC,WAAS,GACT5mC,EAAAlf,EAAAmM,cAAC45C,GAAA/lD,EAAD,CAAKgmD,MAAM,QAAQ55C,MAAO,CAAE8+B,SAAU,UACtChsB,EAAAlf,EAAAmM,cAAC45C,GAAA/lD,EAAD,CAAKgmD,MAAM,OAAO55C,MAAO,CAAE8+B,SAAU,UACrChsB,EAAAlf,EAAAmM,cAAC45C,GAAA/lD,EAAD,CAAKgmD,MAAM,QAAQ55C,MAAO,CAAE8+B,SAAU,UACtChsB,EAAAlf,EAAAmM,cAAC45C,GAAA/lD,EAAD,CAAKgmD,MAAM,QAAQ55C,MAAO,CAAE8+B,SAAU,YAKlD,OAAO1Y,EAAQtT,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KAAG3gB,GAAckb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgBnb,UAhC7Csb,IAAMC,YA2ChC+lC,GAAYjlC,aAAe,CACvBmS,OAAO,EACP2yB,UAAW,GAGAG,UCrCTW,uBACF,SAAAA,EAAYrnC,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAymD,IACf5mD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA2mD,GAAAtmD,KAAAH,KAAMof,KAmBV2xB,qBAAuB,SAAApwC,GACDd,EAAKuf,MAAf4T,OAGRnzB,EAAKykB,SAAS,CACVrd,OAAQtG,EAAOqwC,WACf0V,WAAY,KACZC,iBAAiB,EACjBC,oBAAoB,KA5BT/mD,EAgCnBgnD,sBAAwB,WACpBhnD,EAAKykB,SAAS,CAAEqiC,iBAAiB,KAjClB9mD,EAoCnBinD,uBAAyB,WACrBjnD,EAAKykB,SAAS,CAAEqiC,iBAAiB,KArClB9mD,EAwCnBknD,yBAA2B,SAAAp3C,GACvBhM,QAAQ4F,IAAI,oCAAqCoG,GACjD9P,EAAKykB,SAAS,CAAEsiC,oBAAoB,KA1CrB/mD,EA6CnBmnD,0BAA4B,WACxBnnD,EAAKykB,SAAS,CAAEsiC,oBAAoB,KA9CrB/mD,EAiDnBonD,uBAAyB,WAAM,IACnBj0B,EAAUnzB,EAAKuf,MAAf4T,MACenzB,EAAKmkB,MAApB0iC,WAEJ7mD,EAAKykB,SAAS,CAAEoiC,WAAY,OACrB1zB,EACPnxB,KAAgBiH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,IAGZkR,KAAiB+uC,6BAA4B,IA5DlCrnD,EAgEnBqkD,iBAhEmB,eAAA7jD,EAAAP,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAgEA,SAAAC,EAAM2D,GAAN,IAAAL,EAAA,OAAAirB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVsD,EADU,CAAAxD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAGEc,KAAgBiJ,KAAK,CAClC/B,QAAS,oBACTgG,QAAS1K,EAAK1B,GACdq3C,OAAO,IANI,UAGXh2C,EAHWnD,EAAAmK,KASfhH,EAAO6O,IAAU3P,IAAIc,EAAKrB,KAAOqB,EATlB,CAAAnD,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,iBAYfxB,EAAKykB,SAAS,CAAEoiC,WAAY1iD,EAAKrB,KAZlB,wBAAA9B,EAAAU,SAAAb,MAhEA,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKsnD,WAAarnC,IAAMggB,YAHT,IAKP9M,EAAU5T,EAAV4T,MALO,OAOfnzB,EAAKmkB,MAAQ,CACT/c,OAAQ+rB,EAAQ7a,KAAiBivC,aAAejvC,KAAiBlR,QARtDpH,mFAafsY,KAAiBmJ,GAAG,qBAAsBthB,KAAK+wC,qEAI/C54B,KAAiBnW,eAAe,qBAAsBhC,KAAK+wC,uDA8DtD,IAAA5xB,EACiCnf,KAAKof,MAAnCmB,EADHpB,EACGoB,QAASZ,EADZR,EACYQ,UAAWqT,EADvB7T,EACuB6T,MADvBjP,EAE+D/jB,KAAKgkB,MAAjE/c,EAFH8c,EAEG9c,OAAQy/C,EAFX3iC,EAEW2iC,WAAYC,EAFvB5iC,EAEuB4iC,gBAAiBC,EAFxC7iC,EAEwC6iC,mBACvC/V,EAAgB5pC,GAAUy/C,EAC1Bf,EAAY3lD,KAAKmnD,YAAcnnD,KAAKmnD,WAAW75B,QAAUttB,KAAKmnD,WAAW75B,QAAQ62B,mBAAqB,EAExG3/C,EAAU,KAiCd,OA/BIA,EADAmiD,EAEIjnC,EAAAlf,EAAAmM,cAAC06C,GAAD,CACIpgD,OAAQ4pC,EACR7d,MAAOA,EACP2yB,UAAWA,EACXp8B,QAASvpB,KAAK8mD,yBAGfF,EAEHlnC,EAAAlf,EAAAmM,cAAC26C,GAAD,CACIrgD,OAAQ4pC,EACR7d,MAAOA,EACP2yB,UAAWA,EACXp8B,QAASvpB,KAAKgnD,4BAKlBtnC,EAAAlf,EAAAmM,cAAC46C,GAAD,CACIpnB,IAAKngC,KAAKmnD,WACVlgD,OAAQ4pC,EACR7d,MAAOA,EACPsuB,WAAYoF,IAAez/C,EAC3Bq9C,kBAAmBtkD,KAAK6mD,sBACxBtC,qBAAsBvkD,KAAK+mD,yBAC3Bx9B,QAASvpB,KAAKinD,yBAKnBj0B,EACHtT,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KAAG3gB,GAEHkb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQ8F,YAAa,CAAEmhC,gBAAiBx0B,GAASrT,IAAanb,UA1H9Esb,IAAMC,YAqI7B0mC,GAAS5lC,aAAe,CACpBlB,UAAW,KACXY,QAAS,KACTyS,OAAO,GAGIjS,WAAWmG,KAAXnG,CAAwB0lC,cC9IjCgB,4LACO,IAAAtoC,EACoDnf,KAAKof,MAA7CnY,GADZkY,EACGoB,QADHpB,EACYlY,QAAQ0zB,EADpBxb,EACoBwb,SAAUpgB,EAD9B4E,EAC8B5E,kBAE7Bi+B,EAAa37B,YAAkB5V,EAAQsT,GAE7C,OACImF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,YACXD,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,EAAQ0zB,SAAUA,EAAUpgB,kBAAmBA,EAAmB29B,YAAU,IACrGx4B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkB64B,WAT3B14B,IAAM4nC,gBAqB5BD,GAAQ5mC,aAAe,CACnBtG,mBAAmB,GAGRwG,WAlCA,CACX4mC,eAAgB,CACZ3kC,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR2R,OAAQ,IA6BD5X,CAAmB0mC,IC3B5BG,4LACO,IAAAzoC,EACgCnf,KAAKof,MAAlCnY,EADHkY,EACGlY,OAAQ4Y,EADXV,EACWU,QAASU,EADpBpB,EACoBoB,QAEzB,OACIb,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAASA,GACnDH,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACXD,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,EAAQsT,mBAAiB,IAClDmF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACXD,EAAAlf,EAAAmM,cAACw0C,GAAD,CAAoBl6C,OAAQA,gBAX5B6Y,IAAM4nC,gBA0BvB3mC,OAhCA,CACXouB,SAAU,CACN/rB,QAAS,QA8BFrC,CAAmB6mC,ICjB5BC,uBACF,SAAAA,EAAYzoC,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA6nD,IACfhoD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA+nD,GAAA1nD,KAAAH,KAAMof,KAkCV2xB,qBAAuB,SAAApwC,GAAU,IACrBqwC,EAA+BrwC,EAA/BqwC,WAAY8W,EAAmBnnD,EAAnBmnD,eAEpBjoD,EAAKykB,SAAS,CACV0sB,WAAYA,EACZ8W,eAAgBA,KAxCLjoD,EA4CnB0lB,YAAc,WAAM,IAAApG,EACatf,EAAKuf,MAA1BnY,EADQkY,EACRlY,OAAQ0zB,EADAxb,EACAwb,SACXA,GAELA,EAAS1zB,IA7CTpH,EAAKmkB,MAAQ,CACTgtB,WAAY74B,KAAiBs8B,YAC7BqT,eAAgB,MALLjoD,qFASG8kB,EAAWC,GAAW,IAAAtE,EACdtgB,KAAKof,MAAvBnY,EADgCqZ,EAChCrZ,OAAQ+Z,EADwBV,EACxBU,MAEhB,OAAI4D,EAAUosB,aAAe/pC,IAIzB2d,EAAUkjC,iBAAmB7gD,GAI7B0d,EAAU3D,QAAUA,+CAQxB7I,KAAiBmJ,GAAG,qBAAsBthB,KAAK+wC,qEAI/C54B,KAAiBnW,eAAe,qBAAsBhC,KAAK+wC,uDAmBtD,IAAAgX,EAAA5/B,EACgCnoB,KAAKof,MAAlCnY,EADHkhB,EACGlhB,OAAQ4Y,EADXsI,EACWtI,QAASU,EADpB4H,EACoB5H,QACnBynC,EAAiBhoD,KAAKgkB,MAAMgtB,WAE5B71B,EAAWD,YAAgBjU,GAC3BghD,EAAenrC,YAAyB7V,GAC1CihD,EAAoB,GAKxB,OAJID,EAAe,IACfC,EAAqC,IAAjBD,EAAqB,iBAArB,KAAAh9C,OAA6Cg9C,EAA7C,iBAIpBvoC,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAAC7uB,QAAS,CAAEgC,KAAMhC,EAAQ4uB,UAAYtvB,QAASA,GAC3DH,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,qBAADqnC,EAAA,GAAAjoD,OAAAsmB,EAAA,EAAAtmB,CAAAioD,EAChBxnC,EAAQ4nC,iBAAmBlhD,IAAW+gD,GADtBloD,OAAAsmB,EAAA,EAAAtmB,CAAAioD,EAEjB,oBAAqB9gD,IAAW+gD,GAFfD,IAIrBloC,QAAS7f,KAAKulB,aACd7F,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,IACzByY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACXD,EAAAlf,EAAAmM,cAACw0C,GAAD,CAAoBl6C,OAAQA,KAEhCyY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,iBAAkBH,EAAQ6nC,0BAArD,IACMjtC,EACD+sC,cA/EHpoC,IAAMC,YA8FrBgB,OA1GA,SAAAC,GAAK,MAAK,CACrBmuB,SAAU,CACN/rB,QAAS,GAEb+kC,iBAAkB,CACdthC,gBAAiB7F,EAAM0d,QAAQC,QAAQC,KAAO,cAElDwpB,wBAAyB,CACrBrmC,MAA8B,SAAvBf,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQjhB,KAAKyiC,UAAY,aAkG5C,CAAE/4B,WAAW,GAAhCpG,CAAwC8mC,cCzFjDQ,uBACF,SAAAA,EAAYjpC,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAqoD,IACfxoD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAuoD,GAAAloD,KAAAH,KAAMof,KAkCV2xB,qBAAuB,SAAApwC,GACnBd,EAAKykB,SAALxkB,OAAAmhB,EAAA,EAAAnhB,CAAA,GACOa,KAlCPd,EAAKmkB,MAAQ,CACTgtB,WAAY74B,KAAiBs8B,YAC7B6T,cAAenwC,KAAiBowC,gBALrB1oD,qFASG8kB,EAAWC,GAAW,IAAAzF,EACHnf,KAAKof,MAAlCnY,EADgCkY,EAChClY,OAAQC,EADwBiY,EACxBjY,UAAW8Z,EADa7B,EACb6B,MAE3B,OAAI4D,EAAUosB,aAAe/pC,GAAU2d,EAAU0jC,gBAAkBphD,IAI/D0d,EAAUkjC,iBAAmB7gD,GAAU2d,EAAU4jC,oBAAsBthD,GAIvEyd,EAAU3D,QAAUA,+CAQxB7I,KAAiBmJ,GAAG,qBAAsBthB,KAAK+wC,qEAI/C54B,KAAiBnW,eAAe,qBAAsBhC,KAAK+wC,uDAStD,IAAAzwB,EAC0DtgB,KAAKof,MAA5DnY,EADHqZ,EACGrZ,OAAQC,EADXoZ,EACWpZ,UAAWuhD,EADtBnoC,EACsBmoC,WAAY5oC,EADlCS,EACkCT,QAASU,EAD3CD,EAC2CC,QAAShJ,EADpD+I,EACoD/I,EACnDywC,EAAiBhoD,KAAKgkB,MAAMgtB,WAC5B0X,EAAoB1oD,KAAKgkB,MAAMskC,cAC/B/jD,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAEjCkK,EAAmB7M,EAAnB6M,eAEFmH,EAAOD,YAAe/T,GACtBokD,EAAazxC,YAAqB3S,GAClCqkD,EAAiB7xC,YAAyBxS,GAC1CC,EAAUiT,aAAWlT,EAASgT,IAAM,OAEpCsxC,EACFz3C,GAAkBq3C,EACd/oC,EAAAlf,EAAAmM,cAACiT,GAAA,EAAD,CAAiB7T,OAAQqF,IAEzBsO,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,IAGjC,OACIyY,EAAAlf,EAAAmM,cAACuiC,GAAA1uC,EAAD,CAAU4uC,QAAM,EAACzvB,UAAWY,EAAQ4uB,SAAUtvB,QAASA,GACnDH,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IACP,gBADiB5gB,OAAAsmB,EAAA,EAAAtmB,CAAA,GAEdygB,EAAQuoC,iBAAmB7hD,IAAW+gD,GAAkB9gD,IAAcwhD,GACzE,CAAEK,oBAAqB9hD,IAAW+gD,GAAkB9gD,IAAcwhD,KAErEG,EACDnpC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACV8oC,GAAcG,EACXlpC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgBipC,GAE/BlpC,EAAAlf,EAAAmM,cAACw0C,GAAD,CAAoBl6C,OAAQA,IAEhCyY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,mBAAoBH,EAAQyoC,uBAAwBzwC,IAEnFmH,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,iBAAkBH,EAAQyoC,uBAE7CtpC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,MACMsjC,GAAcE,GACZjpC,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,yBAAyBgpC,EAAzC,MAEHnkD,eAvFdsb,IAAMC,YA+GlB4G,GALCC,YACZ7F,IAvHW,SAAAC,GAAK,MAAK,CACrBmuB,SAAU,CACN/rB,QAAS,GAEb0lC,iBAAkB,CACd3vB,WAAYnY,EAAM0d,QAAQC,QAAQC,KAAO,cAE7CoqB,qBAAsB,CAClBjnC,MAA8B,SAAvBf,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQjhB,KAAKyiC,UAAY,aA+GvD,CAAE/4B,WAAW,IAChCC,cAGWT,CAAQ0hC,WCtGRtnC,WA/BA,SAAAC,GAAK,MAAK,CACrBioC,cAAe,CACX9vB,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQwqB,KAAK,KAAO,aAAe,UACrFnnC,MAA8B,SAAvBf,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQjhB,KAAKkhB,QAAU,aAAe,WAEvFwqB,qBAAsB,CAClBpnC,MAA8B,SAAvBf,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQjhB,KAAKkhB,QAAU,aAAe,aAyBzD,CAAExX,WAAW,GAAhCpG,CArBf,SAAuB3B,GAAO,IAClBuM,EAAuCvM,EAAvCuM,QAASH,EAA8BpM,EAA9BoM,QAAS3L,EAAqBT,EAArBS,QAASU,EAAYnB,EAAZmB,QAEnC,OACIb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,iBAAkBH,EAAQ0oC,gBACjDvpC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBgM,GACtC3O,QAAQwO,IACL9L,EAAAlf,EAAAmM,cAAA,KAAGgT,UAAWY,EAAQ4oC,qBAAsBtpC,QAASA,GAChD2L,MCef49B,uBACF,SAAAA,EAAYhqC,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAopD,IACfvpD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAspD,GAAAjpD,KAAAH,KAAMof,KA6CViqC,yBAA2B,SAAA1oD,GAAU,IAG3B2oD,EAFW3oD,EAAT8c,KAEiB0X,OAEpBm0B,EAGDzpD,EAAKu8C,WAAWkN,GAFhBzpD,EAAK05C,eApDM15C,EA0DnB0pD,oBAAsB,SAAAC,GAIlB,IAHA,IAAM9mD,EAAM,GACN+K,EAAM,IAAIpE,IAEPtD,EAAI,EAAGA,EAAIyjD,EAAQvjD,OAAQF,IAAK,CACrC,IAAIqE,EAASo/C,EAAQzjD,IAAMyjD,EAAQzjD,GAAGo0C,SACtC,GAAI/vC,EACA,IAAK,IAAIq/C,EAAI,EAAGA,EAAIr/C,EAAOnE,OAAQwjD,IAC1Bh8C,EAAI1K,IAAIqH,EAAOq/C,MAChBh8C,EAAIxM,IAAImJ,EAAOq/C,GAAIr/C,EAAOq/C,IAC1B/mD,EAAI+G,KAAKW,EAAOq/C,KAUhC,OAJA/mD,EAAIiiD,KAAK,SAACnkD,EAAGkpD,GACT,OAAOC,aAAa92C,IAAU3P,IAAIwmD,GAAGE,MAAO/2C,IAAU3P,IAAI1C,GAAGopD,SAG1DlnD,GA9EQ7C,EAiFnBu8C,WAjFmB,eAAA/7C,EAAAP,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAiFN,SAAAC,EAAM+c,GAAN,IAAAosC,EAAAlqD,EAAAsH,EAAA2yC,EAAAJ,EAAAsQ,EAAA9N,EAAA+N,EAAA9N,EAAA+N,EAAAR,EAAA3mD,EAAA0U,EAAA6kC,EAAA6N,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA98C,EAAAmsC,EAAAzoC,EAAAnL,EAAA,OAAAkpB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACTlB,EAAKgqD,UAAY,IAAIrxC,KACrB3Y,EAAK4d,KAAOA,EACNosC,EAAYhqD,EAAKgqD,UACnBlqD,EAAQ,KAEJsH,EAAWpH,EAAKuf,MAAhBnY,OACA2yC,EAAkB/5C,EAAKmkB,MAAvB41B,cAEH3yC,EATI,CAAApG,EAAAE,KAAA,gBAUCy4C,EAAW,GACXsQ,EAAejoD,KAAgBiJ,KAAK,CACtC/B,QAAS,cACTopB,MAAO1U,EACP4U,MAAO,MAEXmnB,EAAS/vC,KAAKqgD,IAER9N,EAAY3C,GAAc57B,MAEtBssC,EAAoBloD,KAAgBiJ,KAAK,CAC3C/B,QAAS,cACTopB,MAAO6pB,EACP3pB,MAAO,MAEXmnB,EAAS/vC,KAAKsgD,KAGZ9N,EAAehD,GAAiBx7B,MAE5BusC,EAAuBnoD,KAAgBiJ,KAAK,CAC9C/B,QAAS,cACTopB,MAAO8pB,EACP5pB,MAAO,MAEXmnB,EAAS/vC,KAAKugD,IAnCbnpD,EAAAE,KAAA,GAsCiB6I,QAAQ8J,IAAI8lC,EAAS/rC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAogB,GAAC,OAAI,UAtC5D,WAsCCy/B,EAtCD3oD,EAAAmK,KAuCCnI,EAAQhD,EAAK0pD,oBAAoBC,GAEnCK,IAAchqD,EAAKgqD,UAzClB,CAAAhpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,qBA6CDu4C,IACQriC,EAAM1X,EAAKuf,MAAX7H,EAEF6kC,EAAa3+B,EAAK6nC,gBAClB2E,EAAuB,CAAC,iBAAkB1yC,EAAE,iBAAiB+tC,gBAG1C75C,KAAK,SAAA8iC,GAAE,OAAIA,EAAGhS,SAAS6f,MAC3CJ,GAAaiO,EAAqBx+C,KAAK,SAAA8iC,GAAE,OAAIA,EAAGhS,SAASyf,EAAUsJ,mBAEpEziD,EAAM0nD,OAAO,EAAG,EAAG3Q,EAAcj3C,KAIzC9C,EAAKykB,SAAS,CACVrB,IAAK,KACLunC,cAAe,KACf3nD,MAAOA,EACPynD,OAAQ,KACR98C,SAAU,OAGd7N,EAAQC,IAAUwD,WAClBwQ,YAAiBjU,EAAOkD,KAEpB4a,EAAKxX,QAAUwkD,MAtEd,CAAA5pD,EAAAE,KAAA,gBAuEKmpD,EAAiB,GAEjBC,EAAgBtoD,KAAgBiJ,KAAK,CACvC/B,QAAS,oBACTopB,MAAO1U,IAEXysC,EAAezgD,KAAK0gD,GAEhBnO,IACMoO,EAAqBvoD,KAAgBiJ,KAAK,CAC5C/B,QAAS,oBACTopB,MAAO6pB,IAEXkO,EAAezgD,KAAK2gD,IApFvBvpD,EAAAE,KAAA,GAuF2B6I,QAAQ8J,IAAIw2C,EAAez8C,IAAI,SAAA/B,GAAC,OAAIA,EAAE/B,MAAM,SAAAogB,GAAC,OAAI,UAvF5E,WAuFKsgC,EAvFLxpD,EAAAmK,KAwFKs/C,EAASzqD,EAAK0pD,oBAAoBc,GAEpCR,IAAchqD,EAAKgqD,UA1FtB,CAAAhpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBA8FDxB,EAAKykB,SAAS,CACVgmC,OAAQA,IAGZ3qD,EAAQC,IAAUwD,WAClBwQ,YAAiBjU,EAAO2qD,GAnGvB,WAuGL98C,EAAW,IACXvG,EAxGK,CAAApG,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAyGYc,KAAgBiJ,KAAK,CAClC/B,QAAS,qBACT1C,QAASY,EACTkrB,MAAO1U,EACPrM,eAAgB,EAChBghB,gBAAiB,EACjBlH,OAAQ,EACRmH,MAAO,GACP1mB,OAAQ,OAjHP,QAyGL6B,EAzGK3M,EAAAmK,KAAAnK,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAoHYc,KAAgBiJ,KAAK,CAClC/B,QAAS,iBACTopB,MAAO1U,EACPitC,YAAa,EACb3Q,eAAgB,EAChB4Q,kBAAmB,EACnBt4B,MAAO,KA1HN,QAoHL7kB,EApHK3M,EAAAmK,KAAA,WA8HT0C,KAAaC,SAASH,EAASA,UAE3Bq8C,IAAchqD,EAAKgqD,UAhId,CAAAhpD,EAAAE,KAAA,gBAAAF,EAAAQ,OAAA,kBA0IT,IANAxB,EAAKykB,SAAS,CACV9W,SAAUA,IAGRmsC,EAAQ,IAAItwC,IACZ6H,EAAQ,IAAI7H,IACTtD,EAAI,EAAGA,EAAIyH,EAASA,SAASvH,OAAQF,IAC1C4zC,EAAM14C,IAAIuM,EAASA,SAASzH,GAAGM,QAASmH,EAASA,SAASzH,GAAGM,SACzDmH,EAASA,SAASzH,GAAGqL,gBACrBF,EAAMjQ,IAAIuM,EAASA,SAASzH,GAAGqL,eAAgB5D,EAASA,SAASzH,GAAGqL,gBAI5EzR,EAAQC,IAAUwD,WAClBwQ,YAAiBjU,EAADG,OAAAqpB,GAAA,EAAArpB,CAAY65C,EAAMnoC,SAClCC,YAAiB9R,EAADG,OAAAqpB,GAAA,EAAArpB,CAAYoR,EAAMM,SAnJzB,yBAAA3Q,EAAAU,SAAAb,MAjFM,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EAuOnB05C,YAvOmBz5C,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAuOL,SAAAyB,IAAA,IAAA0oD,EAAAC,EAAAnR,EAAAhvC,EAAAogD,EAAA7nC,EAAAunC,EAAA5Q,EAAAj6C,EAAA,OAAAsvB,EAAAzuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,WACSlB,EAAKuf,MAAhBnY,OADE,CAAA9E,EAAApB,KAAA,eAGNlB,EAAKykB,SAAS,CACVrB,IAAK,KACLunC,cAAe,KACf3nD,MAAO,KACPynD,OAAQ,KACR98C,SAAU,OARRrL,EAAAd,OAAA,wBAcJupD,EAAa/oD,KAAgBiJ,KAAK,CACpC/B,QAAS,cACTgiD,SAAU,CAAEhiD,QAAS,wBACrBspB,MAAO,KACR1oB,MAAM,WACL,MAAO,CAAEZ,QAAS,QAASoxC,SAAU,MAGnC0Q,EAAuBhpD,KAAgBiJ,KAAK,CAC9C/B,QAAS,cACTopB,MAAO,GACPE,MAAO,MACR1oB,MAAM,WACL,MAAO,CAAEZ,QAAS,QAASoxC,SAAU,MAGnCT,EAAuB73C,KAAgBiJ,KAAK,CAC9C/B,QAAS,oBACTgG,QAASC,IAAU+M,UACnBi+B,OAAO,IACRrwC,MAAM,SAAA/F,MAlCCzB,EAAApB,KAAA,EAoCwC6I,QAAQ8J,IAAI,CAC1Dk3C,EACAC,EACAnR,IAvCM,OAAAhvC,EAAAvI,EAAA6I,KAAA8/C,EAAAhrD,OAAAm6C,EAAA,EAAAn6C,CAAA4K,EAAA,GAoCHuY,EApCG6nC,EAAA,GAoCEN,EApCFM,EAAA,GAoCiBlR,EApCjBkR,EAAA,GA0CVjrD,EAAKykB,SAAS,CACVrB,IAAKA,EACLunC,cAAeA,EACf5Q,cAAeA,EACf/2C,MAAO,KACPynD,OAAQ,KACR98C,SAAU,OAGR7N,EAAQC,IAAUwD,WACxBwQ,YAAiBjU,EAAOsjB,EAAIk3B,UAC5BvmC,YAAiBjU,EAAO6qD,EAAcrQ,UArD5B,yBAAAh4C,EAAAZ,SAAAW,MAvOKrC,EA+RnBmrD,oBA/RmBlrD,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KA+RG,SAAAwqD,IAAA,IAAAtR,EAAA5zC,EAAA,OAAAkpB,EAAAzuB,EAAAI,KAAA,SAAAsqD,GAAA,cAAAA,EAAApqD,KAAAoqD,EAAAnqD,MAAA,cAAAmqD,EAAAnqD,KAAA,EACEc,KAAgBiJ,KAAK,CACrC/B,QAAS,WACT+wC,aAAc,sBACdC,eAAgB,EAChB1nB,MAAO,KALO,OAQlB,IAPMsnB,EADYuR,EAAAlgD,KAQTjF,EAAI4zC,EAAMQ,SAASl0C,OAAS,EAAGF,GAAK,EAAGA,IAC5ClE,KAAgBiJ,KAAK,CACjB/B,QAAS,uBACT1C,QAASszC,EAAMQ,SAASp0C,KAXd,wBAAAmlD,EAAA3pD,SAAA0pD,MA/RHprD,EA+SnBsrD,yBAA2B,SAAA7/C,GACvBA,EAAMma,kBAEN5jB,KAAgBiJ,KAAK,CACjB/B,QAAS,4BAGblJ,EAAKykB,SAAS,CAAEkmC,cAAe,QAtThB3qD,EAyTnBurD,oBAAsB,SAACnkD,EAAQC,EAAWmkD,EAAaC,GAAa,IACxDC,EAAoB1rD,EAAKuf,MAAzBmsC,gBAEJF,GACAxpD,KAAgBiJ,KAAK,CACjB/B,QAAS,uBACT1C,QAASY,IAIjBskD,EAAgBtkD,EAAQC,EAAWokD,IAnUpBzrD,EAsUnB2rD,aAAe,WACX,IAAMnvB,EAAOx8B,EAAK4rD,QAAQn+B,QAEtB+O,EAAKiM,UAAYjM,EAAKgoB,eAAiBhoB,EAAKkM,cAC5C1oC,EAAK6rD,kBA1UM7rD,EA8UnB8rD,UAAY,SAAAn+C,GACR,IAAMvH,EAASuH,EAAWA,EAASA,SAASvH,OAAS,EAMrD,MAAO,CACHykD,YALezkD,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGsS,KAAO,EAMjEwhC,eALiB9zC,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGI,QAAU,EAMtEskD,kBALoB1kD,EAAS,EAAIuH,EAASA,SAASvH,EAAS,GAAGtD,GAAK,IAnVzD9C,EA4VnB+rD,eAAiB,SAACp+C,EAAUpD,GACxB,OAAKA,GACAA,EAAOoD,SAASvH,OAEhBuH,GACAA,EAASA,SAASvH,OAEhB,CACH+rB,YAAa5nB,EAAO4nB,YACpBxkB,SAAUA,EAASA,SAASvC,OAAOb,EAAOoD,WALxBpD,EAHFoD,GA7VL3N,EAyWnB6rD,eAzWmB5rD,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAyWF,SAAAkK,IAAA,IAAA1D,EAAA4iD,EAAAr8C,EAAA0d,EAAA9gB,EAAAuvC,EAAAzoC,EAAAnL,EAAApG,EAAA,OAAAsvB,EAAAzuB,EAAAI,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,WACTlB,EAAKgsD,QADI,CAAAhhD,EAAA9J,KAAA,eAAA8J,EAAAxJ,OAAA,oBAGL4F,EAAWpH,EAAKuf,MAAhBnY,OAEF4iD,EAAYhqD,EAAKgqD,UAEfr8C,EAAa3N,EAAKmkB,MAAlBxW,SAEF0d,EAASrrB,EAAK8rD,UAAUn+C,GAE9B3N,EAAKgsD,SAAU,EACXzhD,EAAS,IACTnD,EAbS,CAAA4D,EAAA9J,KAAA,gBAAA8J,EAAA9J,KAAA,GAcMc,KAAgBiJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACTkrB,MAAOtyB,EAAK4d,KACZrM,eAAgB,EAChBghB,gBAAiBlH,EAAOy/B,kBACxBt4B,MAAO,GACP1mB,OAAQ,OArBH,QAcTvB,EAdSS,EAAAG,KAAAH,EAAA9J,KAAA,wBAAA8J,EAAA9J,KAAA,GAwBMc,KAAgBiJ,KAAhBhL,OAAAmhB,EAAA,EAAAnhB,CAAA,CACXiJ,QAAS,iBACTopB,MAAOtyB,EAAK4d,MACTyN,EAHQ,CAIXmH,MAAO,MA5BF,QAwBTjoB,EAxBSS,EAAAG,KAAA,WA+BbnL,EAAKgsD,SAAU,EAEf1+B,aAAe/iB,EAAQoD,EAAWA,EAASA,SAAW,IAEtDE,KAAaC,SAASvD,EAAOoD,UAEzBq8C,IAAchqD,EAAKgqD,UArCV,CAAAh/C,EAAA9J,KAAA,gBAAA8J,EAAAxJ,OAAA,kBA+Cb,IANAxB,EAAKykB,SAAS,CACV9W,SAAU3N,EAAK+rD,eAAep+C,EAAUpD,KAGtCuvC,EAAQ,IAAItwC,IACZ6H,EAAQ,IAAI7H,IACTtD,EAAI,EAAGA,EAAIqE,EAAOoD,SAASvH,OAAQF,IACxC4zC,EAAM14C,IAAImJ,EAAOoD,SAASzH,GAAGM,QAAS+D,EAAOoD,SAASzH,GAAGM,SACrD+D,EAAOoD,SAASzH,GAAGqL,gBACnBF,EAAMjQ,IAAImJ,EAAOoD,SAASzH,GAAGqL,eAAgBhH,EAAOoD,SAASzH,GAAGqL,gBAIlEzR,EAAQC,IAAUwD,WACxBwQ,YAAiBjU,EAADG,OAAAqpB,GAAA,EAAArpB,CAAY65C,EAAMnoC,SAClCC,YAAiB9R,EAADG,OAAAqpB,GAAA,EAAArpB,CAAYoR,EAAMM,SAxDrB,yBAAA3G,EAAAtJ,SAAAoJ,MAzWE9K,EAoanBisD,qBAAuB,SAAAxgD,GACnBA,EAAMma,mBAraS5lB,EAwanBguC,YAAc,YAGVtkB,EAFoB1pB,EAAKuf,MAAjBmK,YAtaR1pB,EAAK4rD,QAAU3rC,IAAMggB,YAHN,IAAA3gB,EAKUtf,EAAKuf,MAAtBnY,EALOkY,EAKPlY,OAAQwW,EALD0B,EAKC1B,KALD,OAOf5d,EAAKmkB,MAAQ,CACT+nC,gBAAiB9kD,EACjB+kD,cAAevuC,EAEfwF,IAAK,KACLunC,cAAe,KACf3nD,MAAO,KACPynD,OAAQ,KACR98C,SAAU,MAfC3N,mFAqCfG,KAAKu5C,cAELphC,KAAiBmJ,GAAG,yBAA0BthB,KAAKqpD,yEAInDlxC,KAAiBnW,eAAe,yBAA0BhC,KAAKqpD,2DAmY1D,IAAA5+C,EAAAzK,KAAAsgB,EACuBtgB,KAAKof,MAAzBmB,EADHD,EACGC,QAAStZ,EADZqZ,EACYrZ,OADZ8c,EAEmD/jB,KAAKgkB,MAArDf,EAFHc,EAEGd,IAAKunC,EAFRzmC,EAEQymC,cAAe3nD,EAFvBkhB,EAEuBlhB,MAAOynD,EAF9BvmC,EAE8BumC,OAAQ98C,EAFtCuW,EAEsCvW,SAErCxJ,EAAO6O,IAAU3P,IAAI+D,GAErBglD,EACFhpC,GAAOA,EAAIk3B,SACLl3B,EAAIk3B,SAAS1sC,IAAI,SAAA/B,GAAC,OACdgU,EAAAlf,EAAAmM,cAACu/C,GAAD,CAAS10C,IAAK9L,EAAGzE,OAAQyE,EAAGivB,SAAU,kBAAMlwB,EAAK2gD,oBAAoB1/C,EAAG,MAAM,GAAO,QAEzF,GAEJygD,EACF3B,GAAiBA,EAAcrQ,SACzBqQ,EAAcrQ,SAAS1sC,IAAI,SAAA/B,GAAC,OACxBgU,EAAAlf,EAAAmM,cAACy/C,GAAD,CACI50C,IAAK9L,EACLzE,OAAQyE,EACRmU,QAAS,kBAAMpV,EAAK2gD,oBAAoB1/C,EAAG,MAAM,GAAM,QAG/D,GAEJ2gD,EAAaxpD,EACbA,EAAM4K,IAAI,SAAA/B,GAAC,OACPgU,EAAAlf,EAAAmM,cAACy/C,GAAD,CACI50C,IAAK9L,EACLzE,OAAQyE,EACRmU,QAAS,kBAAMpV,EAAK2gD,oBAAoB1/C,EAAG,MAAM,GAAM,QAG/D,GAEA4gD,EAAchC,EACdA,EAAO78C,IAAI,SAAA/B,GAAC,OACRgU,EAAAlf,EAAAmM,cAAC4/C,GAAD,CAAiB/0C,IAAK9L,EAAGzE,OAAQyE,EAAGmU,QAAS,kBAAMpV,EAAK2gD,oBAAoB1/C,EAAG,MAAM,GAAM,QAE/F,GAEA8gD,EACFh/C,GAAYA,EAASA,SACfA,EAASA,SAASC,IAAI,SAAA/B,GAAC,OACnBgU,EAAAlf,EAAAmM,cAAC8/C,GAAD,CACIj1C,IAAG,GAAAvM,OAAKS,EAAErF,QAAP,KAAA4E,OAAkBS,EAAE/I,IACvBsE,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACb8lD,WAAYzrC,QAAQ/V,GACpB4Y,QAAS,kBAAMpV,EAAK2gD,oBAAoB1/C,EAAErF,QAASqF,EAAE/I,IAAI,GAAO,QAGxE,GAEN+pD,EAAkB,oBAKtB,OAJIl/C,GAAYA,EAASwkB,cACrB06B,EAA2C,IAAzBl/C,EAASwkB,YAAoB,kBAA7B,SAAA/mB,OAA0DuC,EAASwkB,YAAnE,cAIlBtS,EAAAlf,EAAAmM,cAAA,OAAKwzB,IAAKngC,KAAKyrD,QAAS9rC,UAAWe,IAAWH,EAAQosC,OAAQ,UAAWC,SAAU5sD,KAAKwrD,cACnFxnD,GACG0b,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,eACXD,EAAAlf,EAAAmM,cAACkgD,GAAD,CAAelhC,QAAQ,uBACvBjM,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAACm4C,GAAD,CAAa79C,OAAQA,EAAQi6C,YAAY,KAE7CxhC,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACImf,UAAWY,EAAQusC,sBACnBhmB,aAAW,SACXnC,YAAa3kC,KAAK6tC,aAClBnuB,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,SAKfyrD,EAAShmD,OAAS,GACfyZ,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBACXD,EAAAlf,EAAAmM,cAACkgD,GAAD,CAAelhC,QAAQ,WACvBjM,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBitC,SAAU5sD,KAAK8rD,sBAClDpsC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iCACdssC,EACDvsC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mCAI1BwsC,EAAmBlmD,OAAS,GACzByZ,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,+BACXD,EAAAlf,EAAAmM,cAACkgD,GAAD,CAAelhC,QAAQ,SAASH,QAAQ,QAAQ3L,QAAS7f,KAAKmrD,2BAC7DgB,GAGRE,EAAWpmD,OAAS,GACjByZ,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sBACXD,EAAAlf,EAAAmM,cAACkgD,GAAD,CAAelhC,QAAQ,uBACtB0gC,GAGRC,EAAYrmD,OAAS,GAClByZ,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAACkgD,GAAD,CAAelhC,QAAQ,kBACtB2gC,GAGR9+C,GACGkS,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAACkgD,GAAD,CAAelhC,QAAS+gC,IACvBF,uDAtgBWptC,EAAO4E,GACnC,OAAI5E,EAAMnY,SAAW+c,EAAM+nC,iBAAmB3sC,EAAM3B,OAASuG,EAAMgoC,cACxD,CACHD,gBAAiB3sC,EAAMnY,OACvB+kD,cAAe5sC,EAAM3B,KAErBwF,IAAK,KACLunC,cAAe,KACf3nD,MAAO,KACPynD,OAAQ,KACR98C,SAAU,MAIX,YAlCMsS,IAAMC,YA8iBZ4G,GALCC,YACZ7F,IAtjBW,SAAAC,GAAK,MAAK,CACrB8rC,sBAAuB,CACnBhmC,OAAQ,kBAEZqoB,SAAU,CACN/rB,QAAS,OAEbupC,OAAQ,CACJxzB,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQvF,WAAW0e,QAAU,aA8iBhE,CAAE1wB,WAAW,IAChCC,cAGWT,CAAQyiC,iVC7gBjB2D,eACF,SAAAA,EAAY3tC,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA+sD,IACfltD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAitD,GAAA5sD,KAAAH,KAAMof,KASV2mC,aAAe,SAAAz6C,GACXzL,EAAKykB,SAAS,CAAEzS,KAAMvG,EAAMC,OAAOiK,QAEnC2C,KAAiB/W,KAAK,4BAA6B,CAC/CyQ,KAAMvG,EAAMC,OAAOiK,MACnBmpB,QAAS9+B,EAAKmtD,SAASntD,EAAKmkB,MAAMjC,UAfvBliB,EAmBnBotD,mBAAqB,SAAA3hD,GACjBzL,EAAKykB,SAAS,CAAEvC,MAAOzW,EAAMC,OAAOiK,QAEpC2C,KAAiB/W,KAAK,4BAA6B,CAC/CyQ,KAAMhS,EAAKmkB,MAAMnS,KACjB8sB,QAAS9+B,EAAKmtD,SAAS1hD,EAAMC,OAAOiK,UAxBzB3V,EA4BnBqtD,eAAiB,SAAA13C,GACb,OAAQA,GACJ,KAAK23C,KAAI,KACL,MAAO,MACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAM,KACP,MAAO,QACX,KAAKC,KAAK,KACN,MAAO,OACX,KAAKC,KAAO,KACR,MAAO,SACX,KAAKC,KAAW,KACZ,MAAO,aAGf,OAAO,MA9CQ5tD,EAiDnBmtD,SAAW,SAAAx3C,GACP,OAAQA,GACJ,IAAK,MACD,OAAO23C,KACX,IAAK,SACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,QACD,OAAOC,KACX,IAAK,OACD,OAAOC,KACX,IAAK,SACD,OAAOC,KACX,IAAK,aACD,OAAOC,KAGf,OAAO,MAnEQ5tD,EAsEnBguC,YAAc,WACVhuC,EAAKykB,SAAS,CAAEpa,MAAM,KAvEPrK,EA0EnBqK,KAAO,WACHrK,EAAKykB,SAAS,CAAEpa,MAAM,KAxEtBrK,EAAKmkB,MAAQ,CACT9Z,MAAM,EACN2H,KAAMhS,EAAKuf,MAAM4B,MAAM0d,QAAQ7sB,KAC/BkQ,MAAOliB,EAAKqtD,eAAertD,EAAKuf,MAAM4B,MAAM0d,QAAQC,QAAQC,OANjD/+B,wEA8EV,IACG0gB,EAAYvgB,KAAKof,MAAjBmB,QADHwD,EAEmB/jB,KAAKgkB,MAArBnS,EAFHkS,EAEGlS,KAAMkQ,EAFTgC,EAEShC,MAEd,OACIrC,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACI0pB,mBAAoB,EACpBhgB,KAAMlK,KAAKgkB,MAAM9Z,KACjBqf,QAASvpB,KAAK6tC,YACd1jB,kBAAgB,qBAChByyB,mBAAiB,4BACjBl9B,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,sBAAhB,cACA+c,EAAAlf,EAAAmM,cAAC0d,GAAA7pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC+gD,GAAAltD,EAAD,CAAauiD,UAAU,WAAWpjC,UAAWY,EAAQotC,aACjDjuC,EAAAlf,EAAAmM,cAACihD,GAAAptD,EAAD,CAAWy+B,SAAO,EAAC8jB,UAAU,UAA7B,SAGArjC,EAAAlf,EAAAmM,cAACkhD,GAAArtD,EAAD,CACIsmC,aAAW,QACX6L,KAAK,SACLhzB,UAAWY,EAAQ6Z,MACnB5kB,MAAO3D,EACPuQ,SAAUpiB,KAAK+lD,cACfrmC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CAAkBgV,MAAM,QAAQu4C,QAASruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CAAOuhB,MAAM,YAAcykC,MAAM,UAC1E9mC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CAAkBgV,MAAM,OAAOu4C,QAASruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CAAOuhB,MAAM,YAAcykC,MAAM,WAGjF9mC,EAAAlf,EAAAmM,cAAC+gD,GAAAltD,EAAD,CAAauiD,UAAU,WAAWpjC,UAAWY,EAAQotC,aACjDjuC,EAAAlf,EAAAmM,cAACihD,GAAAptD,EAAD,CAAWy+B,SAAO,EAAC8jB,UAAU,UAA7B,UAGArjC,EAAAlf,EAAAmM,cAACkhD,GAAArtD,EAAD,CACIsmC,aAAW,SACX6L,KAAK,UACLhzB,UAAWY,EAAQ6Z,MACnB5kB,MAAOuM,EACPK,SAAUpiB,KAAKitD,oBACfvtC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgV,MAAM,MACNu4C,QACIruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CACI+f,QAAS,CACLgC,KAAMhC,EAAQytC,QACdvrC,QAASlC,EAAQkC,WAI7B+jC,MAAM,QAEV9mC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgV,MAAM,SACNu4C,QACIruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CACI+f,QAAS,CACLgC,KAAMhC,EAAQ0tC,WACdxrC,QAASlC,EAAQkC,WAI7B+jC,MAAM,WAEV9mC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgV,MAAM,QACNu4C,QACIruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CACI+f,QAAS,CACLgC,KAAMhC,EAAQ2tC,UACdzrC,QAASlC,EAAQkC,WAI7B+jC,MAAM,UAEV9mC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgV,MAAM,QACNu4C,QACIruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CACI+f,QAAS,CACLgC,KAAMhC,EAAQ4tC,UACd1rC,QAASlC,EAAQkC,WAI7B+jC,MAAM,UAEV9mC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgV,MAAM,OACNu4C,QACIruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CACI+f,QAAS,CACLgC,KAAMhC,EAAQ6tC,SACd3rC,QAASlC,EAAQkC,WAI7B+jC,MAAM,SAEV9mC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgV,MAAM,SACNu4C,QACIruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CACI+f,QAAS,CACLgC,KAAMhC,EAAQ8tC,WACd5rC,QAASlC,EAAQkC,WAI7B+jC,MAAM,WAEV9mC,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgV,MAAM,aACNu4C,QACIruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CACI+f,QAAS,CACLgC,KAAMhC,EAAQ+tC,eACd7rC,QAASlC,EAAQkC,WAI7B+jC,MAAM,2BAtMZ1mC,IAAMC,WAkNjBgB,OAtQA,SAAAC,GAAK,MAAK,CACrB2sC,YAAa,CACT7mC,OAA6B,EAArB9F,EAAM+7B,QAAQC,MAE1B5iB,MAAO,CACHtT,OAAM,GAAA7b,OAAK+V,EAAM+7B,QAAQC,KAAnB,SAEVgR,QAAS,CACLjsC,MAAOorC,KAAI,KACXoB,YAAa,CACTxsC,MAAOorC,KAAI,OAGnBc,WAAY,CACRlsC,MAAOqrC,KAAO,KACdmB,YAAa,CACTxsC,MAAOqrC,KAAO,OAGtBc,UAAW,CACPnsC,MAAOsrC,KAAM,KACbkB,YAAa,CACTxsC,MAAOsrC,KAAM,OAGrBc,UAAW,CACPpsC,MAAOurC,KAAM,KACbiB,YAAa,CACTxsC,MAAOurC,KAAM,OAGrBc,SAAU,CACNrsC,MAAOwrC,KAAK,KACZgB,YAAa,CACTxsC,MAAOwrC,KAAK,OAGpBc,WAAY,CACRtsC,MAAOyrC,KAAO,KACde,YAAa,CACTxsC,MAAOyrC,KAAO,OAGtBc,eAAgB,CACZvsC,MAAO0rC,KAAW,KAClBc,YAAa,CACTxsC,MAAO0rC,KAAW,OAG1BhrC,QAAS,KAqNqB,CAAE0E,WAAW,GAAhCpG,CAAwCgsC,aCjQjDyB,eACF,SAAAA,EAAYpvC,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAwuD,IACf3uD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA0uD,GAAAruD,KAAAH,KAAMof,KAWV2mC,aAAe,SAAAz6C,GACXzL,EAAKykB,SAAS,CAAEmqC,SAAUnjD,EAAMC,OAAOiK,QAEvC3T,KAAgBiH,aAAa,CAAEC,QAAS,6BAA8B0lD,SAAUnjD,EAAMC,OAAOiK,SAf9E3V,EAkBnBguC,YAAc,WACVhuC,EAAKykB,SAAS,CAAEpa,MAAM,KAnBPrK,EAsBnBqK,KAAO,WACHrK,EAAKykB,SAAS,CAAEpa,MAAM,KAvBP,IAGPwkD,EAAStvC,EAATsvC,KACFD,EAAWC,EAAOA,EAAKD,SAAW,KAJzB,OAMf5uD,EAAKmkB,MAAQ,CACT9Z,MAAM,EACNukD,SAAUA,GAAY,MARX5uD,wEA0BV,IAAAsf,EACkBnf,KAAKof,MAAX7H,GADZ4H,EACGoB,QADHpB,EACY5H,GADZwM,EAEsB/jB,KAAKgkB,MAAxB9Z,EAFH6Z,EAEG7Z,KAAMukD,EAFT1qC,EAES0qC,SAGRE,GAFOC,KAAkBtU,MAAQ,CAAEuU,eAAgB,KAElCA,eAAephD,IAAI,SAAA/B,GAAC,OACvCgU,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgX,IAAK9L,EAAE/I,GACP6S,MAAO9J,EAAE/I,GACTorD,QAASruC,EAAAlf,EAAAmM,cAAC2V,GAAA9hB,EAAD,CAAOuhB,MAAM,YACtBykC,MAAK,GAAAv7C,OAAKS,EAAEinC,KAAP,SAAA1nC,OAAmBS,EAAEojD,YAArB,SAIb,OACIpvC,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACI0pB,mBAAoB,EACpBhgB,KAAMA,EACNqf,QAASvpB,KAAK6tC,YACd1jB,kBAAgB,wBAChByyB,mBAAiB,+BACjBl9B,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,yBAAyB4U,EAAE,aAC3CmI,EAAAlf,EAAAmM,cAAC0d,GAAA7pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC+gD,GAAAltD,EAAD,CAAauiD,UAAU,YACnBrjC,EAAAlf,EAAAmM,cAACkhD,GAAArtD,EAAD,CACIsmC,aAAW,WACX6L,KAAK,YACLn9B,MAAOi5C,EACPrsC,SAAUpiB,KAAK+lD,cACd4I,aAxDA7uC,IAAMC,WA0EpB4G,GAPCC,YACZ6kB,cACArkB,cACArG,IA/EW,SAAAC,GAAK,MAAK,CACrB2sC,YAAa,CACT7mC,OAA6B,EAArB9F,EAAM+7B,QAAQC,MAE1B5iB,MAAO,CACHtT,OAAM,GAAA7b,OAAK+V,EAAM+7B,QAAQC,KAAnB,WA0ES,CAAE71B,WAAW,IAChCykB,cAGWjlB,CAAQ6nC,aC5EjB5Q,GAAmB,CACrBj0B,SAAU,SACVC,WAAY,QAGVu0B,eACF,SAAAA,EAAY/+B,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAm+C,IACft+C,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAq+C,GAAAh+C,KAAAH,KAAMof,KAgBV9d,2BAA6B,SAAAX,GACzBd,EAAKykB,SAAS,CAAEyqC,mBAAoBpuD,EAAOyB,uBAlB5BvC,EAqBnBmvD,eAAiB,SAAA1jD,GAAS,IACdyjD,EAAuBlvD,EAAKmkB,MAA5B+qC,mBACHE,aAAqBF,IAE1BlvD,EAAKykB,SAAS,CAAE4hB,SAAU56B,EAAM86B,iBAzBjBvmC,EA4BnBwmC,gBAAkB,WACdxmC,EAAKykB,SAAS,CAAE4hB,SAAU,QA7BXrmC,EAgCnBqvD,aAAe,WACXrvD,EAAKwmC,kBAELxmC,EAAKuf,MAAM+vC,YAnCItvD,EAsCnBuvD,mBAtCmBtvD,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAsCE,SAAAC,IAAA,OAAAuuB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACjBlB,EAAKwmC,kBADYxlC,EAAAE,KAAA,EAGXJ,eAHW,wBAAAE,EAAAU,SAAAb,MAtCFb,EA4CnBwvD,iBAAmB,SAAA/jD,GACfzL,EAAKwmC,kBAELxmC,EAAKyvD,YAAYplD,QA/CFrK,EAkDnB0vD,eAAiB,SAAAjkD,GACbzL,EAAKwmC,kBAELxmC,EAAK2vD,eAAetlD,QArDLrK,EAwDnB4vD,OAAS,SAAAtvB,GACLx8B,QAAQ4F,IAARzJ,OAAA4vD,GAAA,EAAA5vD,QAAA4vD,GAAA,EAAA5vD,CAAAD,KACAA,EAAK2vD,eAAiBrvB,GAvDtBtgC,EAAKmkB,MAAQ,CACT+qC,mBAAoB52C,KAAiBw3C,wBACrCzpB,SAAU,MALCrmC,mFAUfsY,KAAiBmJ,GAAG,2BAA4BthB,KAAKsB,2EAIrD6W,KAAiBnW,eAAe,2BAA4BhC,KAAKsB,6DA+C5D,IAAAmJ,EAAAzK,KAAAmf,EACkBnf,KAAKof,MAApBmB,EADHpB,EACGoB,QAAShJ,EADZ4H,EACY5H,EADZwM,EAEoC/jB,KAAKgkB,MAAtCkiB,EAFHniB,EAEGmiB,SAAU6oB,EAFbhrC,EAEagrC,mBAEZa,EAAkBX,aAAqBF,GACzCrvC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACq6B,GAAAxmC,EAAD,CACImC,GAAG,YACHujC,SAAUA,EACVh8B,KAAM8S,QAAQkpB,GACd3c,QAASvpB,KAAKqmC,gBACdY,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBzd,aAAck0B,IACdl+B,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKovD,oBAAqB73C,EAAE,mBAC/CmI,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKqvD,kBAAmB93C,EAAE,eAC7CmI,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKuvD,gBAAiBh4C,EAAE,aAC3CmI,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKkvD,cAAe33C,EAAE,aAGjD,KAEJ,OACImI,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACI8+C,YAAWpZ,EAAW,cAAgB,KACtCqZ,gBAAc,OACd5/B,UAAWY,EAAQi/B,eACnB1Y,aAAW,OACXjnB,QAAS7f,KAAKgvD,gBACdtvC,EAAAlf,EAAAmM,cAACkjD,GAAArvD,EAAD,OAEHovD,EACDlwC,EAAAlf,EAAAmM,cAACmjD,GAAD,CAAaC,SAAU,SAAA5vB,GAAG,OAAK11B,EAAK6kD,YAAcnvB,KAClDzgB,EAAAlf,EAAAmM,cAACqjD,GAAD,CAAgB7vB,IAAK,SAAAA,GAAG,OAAK11B,EAAK+kD,eAAiBrvB,aAjGtCrgB,IAAMC,WA4GpB4G,GALCC,YACZQ,cACArG,IAvHW,CACXy+B,eAAgB,CACZ14B,OAAQ,qBAEZmpC,iBAAkB,CACdnpC,OAAQ,mBAkHO,CAAEK,WAAW,IAGrBR,CAAQw3B,ICxGjB+R,uBACF,SAAAA,EAAY9wC,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAkwD,IACfrwD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAowD,GAAA/vD,KAAAH,KAAMof,KA8BV9d,2BAA6B,SAAAX,GACzBd,EAAKykB,SAAS,CAAEyqC,mBAAoBpuD,EAAOyB,uBAhC5BvC,EAmCnBqvD,aAAe,WACXrvD,EAAKykB,SAAS,CAAEpa,MAAM,KApCPrK,EAuCnBswD,WAAa,WACTtwD,EAAKguC,cACLhsC,KAAgBuuD,UAzCDvwD,EA4CnBguC,YAAc,WACVhuC,EAAKykB,SAAS,CAAEpa,MAAM,KA7CPrK,EAgDnBwwD,aAAe,WAAM,IAAAlxC,EACgBtf,EAAKuf,MAA9BkxC,EADSnxC,EACTmxC,SAAUC,EADDpxC,EACCoxC,WACVxB,EAAuBlvD,EAAKmkB,MAA5B+qC,mBACHE,aAAqBF,IAE1BuB,GAAUC,IArDK1wD,EAwDnB2pC,cAAgB,SAAAl+B,GACU,KAAlBA,EAAMu9B,SACNv9B,EAAMkd,kBA1DK3oB,EA8DnB4yC,YAAc,WACV,IAAMxJ,EAAYppC,EAAK2wD,YAAYljC,QAAQ2b,UACrCgE,EAAYptC,EAAK2wD,YAAYljC,QAAQ2f,WAEvCA,GAA4B,SAAdA,GAAsC,oBAAdA,IACtCptC,EAAK2wD,YAAYljC,QAAQ2f,UAAY,IAGzC90B,KAAiB/W,KAAK,yBAA0B,CAAEqc,KAAMwrB,KAtEzCppC,EAyEnBqqC,YAAc,SAAA5+B,GACV,IAAMgoC,EAAYhoC,EAAM++B,cAAcC,QAAQ,cAC1CgJ,IACAhoC,EAAMkd,iBACNzjB,SAAS0lC,YAAY,cAAc,EAAO6I,KA1E9CzzC,EAAK2wD,YAAc1wC,IAAMggB,YAEzBjgC,EAAKmkB,MAAQ,CACT+qC,mBAAoB52C,KAAiBw3C,wBACrCzlD,MAAM,GAGVrK,EAAKupC,YAAcrD,aAASlmC,EAAKupC,YAAa,KAV/BvpC,kFAaAklB,EAAWC,EAAWC,GAAU,IAAAxa,EAAAzK,KAC3CA,KAAKof,MAAMmxC,YAAcvwD,KAAKof,MAAMmxC,aAAexrC,EAAUwrC,YAC7Dt3B,WAAW,WACHxuB,EAAK+lD,YAAYljC,SACjB7iB,EAAK+lD,YAAYljC,QAAQkb,SAE9B,iDAKPrwB,KAAiBmJ,GAAG,2BAA4BthB,KAAKsB,2EAIrD6W,KAAiBnW,eAAe,2BAA4BhC,KAAKsB,6DAqD5D,IAAAgf,EACuCtgB,KAAKof,MAAzCmB,EADHD,EACGC,QAASV,EADZS,EACYT,QAAS0wC,EADrBjwC,EACqBiwC,WAAYh5C,EADjC+I,EACiC/I,EAC9BrN,EAASlK,KAAKgkB,MAAd9Z,KAEFumD,EAAsBvmD,EACxBwV,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CAAQxmC,mBAAoB,EAAGhgB,KAAMA,EAAMqf,QAASvpB,KAAK6tC,YAAa1jB,kBAAgB,qBAClFzK,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CAAa/tD,GAAG,qBAAqB4U,EAAE,YACvCmI,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,KACIhxC,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CAAmB/wC,UAAWY,EAAQowC,YAAap5C,EAAE,sBAEzDmI,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,KACIhxC,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CAAQ7wC,QAAS7f,KAAK6tC,YAAa9rB,MAAM,WACpCxK,EAAE,WAEPmI,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CAAQ7wC,QAAS7f,KAAKmwD,WAAYpuC,MAAM,WACnCxK,EAAE,SAIf,KAEJ,OACImI,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iBACT4wC,EASE7wC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,4BACXD,EAAAlf,EAAAmM,cAAA,OACIhK,GAAG,yBACHw9B,IAAKngC,KAAKwwD,YACV3lB,YAAatzB,EAAE,UACfC,IAAKgB,OACLmyB,iBAAe,EACfC,gCAA8B,EAC9BM,UAAWlrC,KAAKwpC,cAChBsL,QAAS90C,KAAKyyC,YACdtH,QAASnrC,KAAKkqC,gBAnB1BxqB,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACikD,GAAD,CAAgBzB,SAAUnvD,KAAKkvD,eAC9BuB,EACD/wC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oCAAoCE,QAASA,GACxDH,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,yBAAyBpI,EAAE,cAoBvDmI,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CACI/wC,UAAWY,EAAQswC,iBACnB/pB,aAAYvvB,EAAE,UACdotB,YAAa3kC,KAAKqwD,cAClB3wC,EAAAlf,EAAAmM,cAACmkD,GAAAtwD,EAAD,CAAe0J,KAAMqmD,EAAY3tC,KAAMlD,EAAAlf,EAAAmM,cAACokD,GAAAvwD,EAAD,MAAgBwwD,SAAUtxC,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,iBAtIzDsf,IAAMC,YAyJnB4G,GALCC,YACZQ,cACArG,IA/JW,CACX8vC,iBAAkB,CACd/pC,OAAQ,kBAEZ6pC,WAAY,CACRzL,WAAY,cA6JLv+B,CAAQupC,IC7KjBe,6NA+BFC,2BAA6B,SAAAvwD,GACNd,EAAKuf,MAAhBnY,SAEOtG,EAAOsG,SAClBpH,EAAKs/C,aAAex+C,EAAOo4B,WAC3Bl5B,EAAKwhB,kBAIb42B,uBAAyB,SAAAt3C,GACrBd,EAAKwhB,iBAGTjhB,SAAW,SAAAO,GACYd,EAAKuf,MAAhBnY,SAEOtG,EAAO0F,SAEtBxG,EAAKwhB,oGAhDasD,EAAWC,GAC7B,OAAID,EAAU1d,SAAWjH,KAAKof,MAAMnY,QAIhC0d,EAAUpN,IAAMvX,KAAKof,MAAM7H,8CAQ/B1E,IAAUyO,GAAG,mCAAoCthB,KAAKi4C,wBACtDplC,IAAUyO,GAAG,2BAA4BthB,KAAKkxD,4BAC9Cr+C,IAAUyO,GAAG,yBAA0BthB,KAAKI,UAC5CyS,IAAUyO,GAAG,wBAAyBthB,KAAKI,UAC3CyS,IAAUyO,GAAG,sBAAuBthB,KAAKI,UACzCyS,IAAUyO,GAAG,uBAAwBthB,KAAKI,yDAI1CyS,IAAU7Q,eAAe,mCAAoChC,KAAKi4C,wBAClEplC,IAAU7Q,eAAe,2BAA4BhC,KAAKkxD,4BAC1Dr+C,IAAU7Q,eAAe,yBAA0BhC,KAAKI,UACxDyS,IAAU7Q,eAAe,wBAAyBhC,KAAKI,UACvDyS,IAAU7Q,eAAe,sBAAuBhC,KAAKI,UACrDyS,IAAU7Q,eAAe,uBAAwBhC,KAAKI,2CAwBjD,IAAA+e,EACiBnf,KAAKof,MAAnBnY,EADHkY,EACGlY,OAAQsQ,EADX4H,EACW5H,EAEhB,GAAIvX,KAAKm/C,aAAc,OAAOz/B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkB,QAE/D,IAAM3b,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO0b,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkB,QAEnD,IAAIwxC,EAAiB,KACf/7C,EAAeH,YAAoBhO,GAKzC,GAJImO,IACA+7C,EAAiBzxC,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,yBAAyBvK,KAGzD+7C,EAAgB,CACjB,IAAM/f,EAAQ7zB,YAAatW,GAC3B,GAAIkS,YAAclS,GAAS,CACvB,IAAMwW,EAAO2zB,EAAM3zB,MAAQ,OAE3B0zC,EACIzxC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,wBAAwBpI,EAAE,SAAW,MACpDkG,IAMjB,IAAK0zC,EAAgB,CACjB,IAAM3sD,EAAU8S,YAAsBtT,EAAMuT,IAAM,OAC5CoxC,EAAavxC,YAAyBpT,GAC5CmtD,EACIzxC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKwjC,GAAcjpC,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,yBAAyBgpC,EAAzC,MACdnkD,GAKb,OAAOkb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBwxC,UA3FbrxC,IAAMC,YA+F1BqH,iBAAkB6pC,IC1F3BG,sNA2CFF,2BAA6B,SAAAvwD,GACNd,EAAKuf,MAAhBnY,SAEOtG,EAAOsG,SAClBpH,EAAKs/C,aAAex+C,EAAOo4B,WAC3Bl5B,EAAKwhB,kBAIb42B,uBAAyB,SAAAt3C,GACrBd,EAAKwhB,iBAGTjhB,SAAW,SAAAO,GAAU,IACTsG,EAAWpH,EAAKuf,MAAhBnY,OAEJtG,EAAO0F,UAAYY,GAEvBpH,EAAKwhB,iBAGTgkB,kCAAoC,SAAA1kC,GAAU,IAClCsG,EAAWpH,EAAKuf,MAAhBnY,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAEL,OAAQrD,EAAO2kC,MAAM,UACjB,IAAK,sCAC0B,uBAAvBthC,EAAK6N,KAAK,UAA4D,uBAAvB7N,EAAK6N,KAAK,UACzDhS,EAAKwhB,cAET,MAEJ,IAAK,wCAC0B,oBAAvBrd,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACtDhS,EAAKwhB,qGA9ECsD,EAAWC,GAAW,IAAAzF,EACdnf,KAAKof,MAAvBnY,EADgCkY,EAChClY,OAAQ+Z,EADwB7B,EACxB6B,MAEhB,OAAI2D,EAAU1d,SAAWA,GAIrB0d,EAAU3D,QAAUA,8CAQxBnO,IAAUyO,GAAG,mCAAoCthB,KAAKi4C,wBACtDplC,IAAUyO,GAAG,2BAA4BthB,KAAKkxD,4BAC9Cr+C,IAAUyO,GAAG,yBAA0BthB,KAAKI,UAC5CyS,IAAUyO,GAAG,6BAA8BthB,KAAKI,UAChDyS,IAAUyO,GAAG,qBAAsBthB,KAAKI,UACxCyS,IAAUyO,GAAG,iCAAkCthB,KAAKI,UACpDyS,IAAUyO,GAAG,sBAAuBthB,KAAKI,UACzCyS,IAAUyO,GAAG,uBAAwBthB,KAAKI,UAC1CyS,IAAUyO,GAAG,+BAAgCthB,KAAKI,UAClDyS,IAAUyO,GAAG,wBAAyBthB,KAAKI,UAC3C+X,KAAiBmJ,GAAG,kCAAmCthB,KAAKqlC,kFAI5DxyB,IAAU7Q,eAAe,mCAAoChC,KAAKi4C,wBAClEplC,IAAU7Q,eAAe,2BAA4BhC,KAAKkxD,4BAC1Dr+C,IAAU7Q,eAAe,yBAA0BhC,KAAKI,UACxDyS,IAAU7Q,eAAe,6BAA8BhC,KAAKI,UAC5DyS,IAAU7Q,eAAe,qBAAsBhC,KAAKI,UACpDyS,IAAU7Q,eAAe,iCAAkChC,KAAKI,UAChEyS,IAAU7Q,eAAe,sBAAuBhC,KAAKI,UACrDyS,IAAU7Q,eAAe,uBAAwBhC,KAAKI,UACtDyS,IAAU7Q,eAAe,+BAAgChC,KAAKI,UAC9DyS,IAAU7Q,eAAe,wBAAyBhC,KAAKI,UACvD+X,KAAiBnW,eAAe,kCAAmChC,KAAKqlC,oEA+CxE,GAAIrlC,KAAKm/C,aAAc,OAAO,KADzB,IAAA7+B,EAGuBtgB,KAAKof,MAAzBmB,EAHHD,EAGGC,QAAStZ,EAHZqZ,EAGYrZ,OAEXjD,EAAO6O,IAAU3P,IAAI+D,GAC3B,IAAKjD,EAAM,OAAO,KAElB,IAAMqtD,EAAc35C,YAAmB1T,GACjCstD,EAAqB15C,YAA0B5T,GAC/CutD,EAAkBF,EAAc,GAAsB,IAAhBA,GAAqBC,EAAqB,EAEtF,OACI5xC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKmsC,GACG5xC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,eAAgBH,EAAQixC,cAC/C9xC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAf,MAGP4xC,EACG7xC,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW5gB,OAAAsmB,EAAA,EAAAtmB,CAAA,GACfygB,EAAQkxC,iBAAmB35C,YAAY9T,IAC1C,eACAuc,EAAQixC,cAEZ9xC,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,qBAAqB0xC,IAEzCrtD,EAAK0tD,UACLhyC,EAAAlf,EAAAmM,cAAA,KAAGgT,UAAU,wBACb,aApHaG,IAAMC,YA0HxBgB,OAnIA,SAAAC,GAAK,MAAK,CACrBwwC,YAAa,CACTr4B,WAAYnY,EAAM0d,QAAQC,QAAQC,MAEtC6yB,iBAAkB,CACdt4B,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQjhB,KAAK2pB,SAAW,aA8HhD,CAAEjgB,WAAW,GAAhCpG,CAAwCqwC,4ECrBxCO,eA1GX,SAAAA,EAAYvyC,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA2xD,IACf9xD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA6xD,GAAAxxD,KAAAH,KAAMof,KAqCV8xC,2BAA6B,SAAAvwD,GACNd,EAAKuf,MAAhBnY,SAEOtG,EAAOsG,SAClBpH,EAAKs/C,aAAex+C,EAAOo4B,WAC3Bl5B,EAAKwhB,gBA3CMxhB,EA+CnBo4C,uBAAyB,SAAAt3C,GACrBd,EAAKwhB,eAhDUxhB,EAmDnBO,SAAW,SAAAO,GACYd,EAAKuf,MAAhBnY,SAEOtG,EAAO0F,SAEtBxG,EAAKwhB,eAxDUxhB,EA2DnBkxC,qBAAuB,SAAApwC,GAAU,IACrBsG,EAAWpH,EAAKuf,MAAhBnY,OAEJA,IAAWtG,EAAOmnD,gBAAkB7gD,IAAWtG,EAAOqwC,YACtDnxC,EAAKwhB,eA/DMxhB,qFAIG8kB,EAAWC,GAC7B,OAAID,EAAU1d,SAAWjH,KAAKof,MAAMnY,mDAQpC4L,IAAUyO,GAAG,mCAAoCthB,KAAKi4C,wBACtDplC,IAAUyO,GAAG,2BAA4BthB,KAAKkxD,4BAC9Cr+C,IAAUyO,GAAG,6BAA8BthB,KAAKI,UAChDyS,IAAUyO,GAAG,yBAA0BthB,KAAKI,UAC5CyS,IAAUyO,GAAG,wBAAyBthB,KAAKI,UAC3CyS,IAAUyO,GAAG,sBAAuBthB,KAAKI,UACzCyS,IAAUyO,GAAG,uBAAwBthB,KAAKI,UAC1CyS,IAAUyO,GAAG,+BAAgCthB,KAAKI,UAClDyS,IAAUyO,GAAG,2BAA4BthB,KAAKI,UAC9C+X,KAAiBmJ,GAAG,qBAAsBthB,KAAK+wC,qEAI/Cl+B,IAAU7Q,eAAe,mCAAoChC,KAAKi4C,wBAClEplC,IAAU7Q,eAAe,2BAA4BhC,KAAKkxD,4BAC1Dr+C,IAAU7Q,eAAe,6BAA8BhC,KAAKI,UAC5DyS,IAAU7Q,eAAe,yBAA0BhC,KAAKI,UACxDyS,IAAU7Q,eAAe,wBAAyBhC,KAAKI,UACvDyS,IAAU7Q,eAAe,sBAAuBhC,KAAKI,UACrDyS,IAAU7Q,eAAe,uBAAwBhC,KAAKI,UACtDyS,IAAU7Q,eAAe,+BAAgChC,KAAKI,UAC9DyS,IAAU7Q,eAAe,2BAA4BhC,KAAKI,UAC1D+X,KAAiBnW,eAAe,qBAAsBhC,KAAK+wC,uDAiC3D,GAAI/wC,KAAKm/C,aAAc,OAAO,KADzB,IAGGl4C,EAAWjH,KAAKof,MAAhBnY,OAEFjD,EAAO6O,IAAU3P,IAAI+D,GACrBsR,EAAOW,YAAmBlV,GAE1BwV,GADgBL,YAAcnV,EAAKrB,KACRgtB,aAAkB3rB,EAAKqT,cAElDu6C,EADgBz5C,KAAiBs8B,cACIxtC,EAEvCqxC,EAAa,KACjB,GAAI9+B,EACA,OAAQA,GACJ,IAAK,SACD8+B,EAAa54B,EAAAlf,EAAAmM,cAACs4C,GAAAzkD,EAAD,CAAkBshB,SAAS,UAAUC,MAAO6vC,EAAmB,UAAY,UACxF,MACJ,IAAK,UACDtZ,EAAa54B,EAAAlf,EAAAmM,cAACklD,GAAArxD,EAAD,CAAcshB,SAAS,UAAUC,MAAO6vC,EAAmB,UAAY,aACpF,MACJ,IAAK,YACDtZ,EAAa54B,EAAAlf,EAAAmM,cAACmlD,GAAAtxD,EAAD,CAAUshB,SAAS,UAAUC,MAAO6vC,EAAmB,UAAY,YAChF,MACJ,IAAK,OACDtZ,EAAa54B,EAAAlf,EAAAmM,cAAColD,GAAAvxD,EAAD,CAAashB,SAAS,UAAUC,MAAO6vC,EAAmB,UAAY,YAK/F,OACIlyC,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACK3L,GAAUkG,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sBAAsB24B,GAC/C//B,GAAQmH,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBAAoBpH,WArG5BuH,IAAMC,WCqChCiyC,uBACF,SAAAA,EAAY5yC,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAgyD,IACfnyD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAkyD,GAAA7xD,KAAAH,KAAMof,KAkCV2xB,qBAAuB,SAAApwC,GAAU,IACrBsG,EAAWpH,EAAKuf,MAAhBnY,OAEJA,IAAWtG,EAAOmnD,gBAAkB7gD,IAAWtG,EAAOqwC,YACtDnxC,EAAKwhB,eAvCMxhB,EA2CnB66B,aAAe,WACX9H,aAAS/yB,EAAKuf,MAAMnY,SAzCpBpH,EAAKynB,OAASxH,IAAMggB,YAEpB,IAAM97B,EAAO6O,IAAU3P,IAAIrD,EAAKuf,MAAMnY,QALvB,OAMfpH,EAAKmkB,MAAQ,CACThgB,KAAMA,GAPKnE,qFAWG8kB,EAAWC,GAC7B,OAAID,EAAU1d,SAAWjH,KAAKof,MAAMnY,SAIhC0d,EAAU3D,QAAUhhB,KAAKof,MAAM4B,OAI/B2D,EAAUxC,SAAWniB,KAAKof,MAAM+C,oDAQpChK,KAAiBmJ,GAAG,qBAAsBthB,KAAK+wC,qEAI/C54B,KAAiBnW,eAAe,qBAAsBhC,KAAK+wC,uDAetD,IAAA5xB,EACkDnf,KAAKof,MAApDmB,EADHpB,EACGoB,QAAStZ,EADZkY,EACYlY,OAAQsT,EADpB4E,EACoB5E,kBAEzB,GAHK4E,EACuCgD,OAEhC,OAAO,KAEnB,IACM8vC,EADgB95C,KAAiBs8B,cACFxtC,EAErC,OACIyY,EAAAlf,EAAAmM,cAAA,OACIwzB,IAAKngC,KAAKsnB,OACV3H,UAAWe,IACPuxC,EAAa1xC,EAAQ2xC,aAAe3xC,EAAQ+G,OAC5C2qC,EAAa,gBAAkB,UAEnCttB,YAAa3kC,KAAK06B,cAClBhb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACXD,EAAAlf,EAAAmM,cAAC+rC,EAAD,CACIzxC,OAAQA,EACRsT,kBAAmBA,EACnB29B,YAAU,EACV33B,QAAS,CAAE83B,WAAY93B,EAAQ83B,WAAYC,WAAY/3B,EAAQ+3B,cAEnE54B,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACXD,EAAAlf,EAAAmM,cAACw0C,GAAD,CAAoBl6C,OAAQA,IAC5ByY,EAAAlf,EAAAmM,cAACwlD,GAAD,CAAmBlrD,OAAQA,KAE/ByY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAACylD,GAAD,CAAsBnrD,OAAQA,IAC9ByY,EAAAlf,EAAAmM,cAAC0lD,GAAD,CAAoBprD,OAAQA,eA9E5B8Y,cA6F5BiyC,GAAcnxC,aAAe,CACzBsB,QAAQ,EACR5H,mBAAmB,GAGRwG,WApIA,SAAAC,GAAK,MAAK,CACrBq3B,WAAY,CACRr1B,SAAU,WACV+D,MAAO,EACPC,OAAQ,EACR2R,OAAQ,GAEZ2f,WAAY,GACZ4Z,aAAc,CACVnwC,MAAO,OACP8E,gBAAiB7F,EAAM0d,QAAQC,QAAQC,KACvCC,aAAc,EACdyzB,OAAQ,UACRxrC,OAAQ,SACRyrC,gBAAiB,CACbp5B,WAAYnY,EAAM0d,QAAQC,QAAQC,OAG1CtX,OAAQ,CACJuX,aAAc,EACdyzB,OAAQ,UACRxrC,OAAQ,SACR0rC,UAAW,CACP3rC,gBAAiB7F,EAAM0d,QAAQC,QAAQC,KAAO,KAC9C2zB,gBAAiB,CACbp5B,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQvF,WAAW0e,QAAU,WAEnF4a,gBAAiB,CACbt5B,WAAYnY,EAAM0d,QAAQC,QAAQC,KAAO,UAwGvB,CAAEzX,WAAW,GAAhCpG,CAAwCixC,cCiNxCU,uBAlVX,SAAAA,EAAYtzC,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA0yD,IACf7yD,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA4yD,GAAAvyD,KAAAH,KAAMof,KA0DVuzC,wBAA0B,SAAAhyD,GAClBA,EAAOo4B,WACPl5B,EAAK+yD,YAAY3xD,IAAIN,EAAOsG,OAAQtG,EAAOsG,QAE3CpH,EAAK+yD,YAAYzvD,OAAOxC,EAAOsG,QAGnCpH,EAAKwhB,eAlEUxhB,EAqEnByB,2BAA6B,SAAAX,GAAU,IAC3ByB,EAAwBzB,EAAxByB,oBAERvC,EAAKykB,SAAS,CAAEyqC,mBAAoB3sD,GAAuB,kBAAMvC,EAAKgzD,oBAxEvDhzD,EA2EnBo4C,uBAAyB,SAAAt3C,GACrBd,EAAKizD,YAAW,IA5EDjzD,EAgFnBkzD,wBAA0B,SAAApyD,GACtB,IAAMqyD,EAAqBryD,EAAOqjB,MAC1BivC,EAAoBpzD,EAAKmkB,MAAzBivC,iBAERpzD,EAAKykB,SAAS,CAAE2uC,gBAAiBD,IAG7BC,GAC6B,4BAA7BA,EAAgB,UACgB,4BAAhCD,EAAmB,YAGGngD,IAAUqgD,eAAejtD,OAAS,IAG5D4M,IAAUqgD,eAAiB,GAC3BrzD,EAAKykB,SAAS,CAAEq1B,MAAO,IAAM,kBAAM95C,EAAKizD,YAAW,QAhGpCjzD,EAmGnBgzD,eAnGmB/yD,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAmGF,SAAAC,IAAA,IAAAquD,EAAA,OAAA9/B,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,YACLguD,EAAuBlvD,EAAKmkB,MAA5B+qC,qBACkD,4BAAhCA,EAAmB,SAFhC,CAAAluD,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAGHnB,IAAU0C,OAAO,kBAAMzC,EAAKizD,eAHzB,wBAAAjyD,EAAAU,SAAAb,MAnGEb,EA0GnBszD,kBAAoB,SAAAxyD,GAIhB,GAAqB,MAAjBA,EAAOipD,OACE/2C,IAAU3P,IAAIvC,EAAO0F,SAClC,CAKI1F,EAAO0F,UAAY8R,KAAiBs8B,cACpC5yC,KAAgBugD,UAAU,GAC1BjqC,KAAiB+uC,6BAA4B,IAIjD,IADA,IAAIhN,EAAU,GACLn0C,EAAI,EAAGA,EAAIlG,EAAKmkB,MAAM21B,MAAM1zC,OAAQF,IAAK,CAC9C,IAAI/B,EAAO6O,IAAU3P,IAAIrD,EAAKmkB,MAAM21B,MAAM5zC,IAC1C,GAAI/B,GAAuB,MAAfA,EAAK4lD,MACb,OAAQ5lD,EAAK6N,KAAK,UACd,IAAK,qBAEkC,yBADhByH,KAAgBpW,IAAIc,EAAK6N,KAAK0H,gBAClCC,OAAO,UAClB0gC,EAAQzwC,KAAKzF,EAAKrB,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACDu3C,EAAQzwC,KAAKzF,EAAKrB,IAClB,MAEJ,IAAK,qBAEkC,yBADhBqX,KAAgB9W,IAAIc,EAAK6N,KAAKoI,eAClCT,OAAO,UAClB0gC,EAAQzwC,KAAKzF,EAAKrB,KAQtC9C,EAAKuzD,aAAalZ,KAzJHr6C,EA4JnBO,SAAW,SAAAO,GAAU,IACT0F,EAAmB1F,EAAnB0F,QACR,GAAc,MADa1F,EAAVipD,MACjB,CACA,IAAM5lD,EAAO6O,IAAU3P,IAAImD,GAC3B,GAAKrC,GAAuB,MAAfA,EAAK4lD,MAAlB,CAJiB,IAQTjQ,EAAU95C,EAAKmkB,MAAf21B,MAEJ0Z,EAAa,GACjB,GAAI1Z,EAAM1zC,OAAS,EAEf,IADqB0zC,EAAM8G,KAAK,SAAA/0C,GAAC,OAAIA,IAAMrF,IACxB,CACf,IAAMitD,EAAezgD,IAAU3P,IAAIy2C,EAAMA,EAAM1zC,OAAS,IAAI2jD,MAC5D,GAA+C,IAA3CD,aAAa2J,EAActvD,EAAK4lD,OAChC,OAEJyJ,EAAW5pD,KAAKzF,EAAKrB,IAM7B,IADA,IAAIu3C,EAAU,GACLn0C,EAAI,EAAGA,EAAI4zC,EAAM1zC,OAAQF,IAAK,CACnC,IAAI/B,EAAO6O,IAAU3P,IAAIy2C,EAAM5zC,IAC/B,GAAI/B,GAAuB,MAAfA,EAAK4lD,MACb,OAAQ5lD,EAAK6N,KAAK,UACd,IAAK,qBAEkC,yBADhByH,KAAgBpW,IAAIc,EAAK6N,KAAK0H,gBAClCC,OAAO,UAClB0gC,EAAQzwC,KAAKzF,EAAKrB,IAEtB,MAEJ,IAAK,kBAIL,IAAK,iBACDu3C,EAAQzwC,KAAKzF,EAAKrB,IAClB,MAEJ,IAAK,qBAEkC,yBADhBqX,KAAgB9W,IAAIc,EAAK6N,KAAKoI,eAClCT,OAAO,UAClB0gC,EAAQzwC,KAAKzF,EAAKrB,KAQtC9C,EAAKuzD,aAAalZ,EAASmZ,EAAY,WACnCxzD,EAAKwjD,iBAAiBgQ,QAnNXxzD,EA+OnB2rD,aAAe,WACX,IAAMnvB,EAAOx8B,EAAK4rD,QAAQn+B,QAEtB+O,GAAQA,EAAKiM,UAAYjM,EAAKgoB,cAAgBhoB,EAAKkM,cACnD1oC,EAAKizD,cAnPMjzD,EAuPnBizD,WAvPmBhzD,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAuPN,SAAAyB,IAAA,IAAAqoC,EAAAoP,EAAA4Z,EAAAC,EAAAxvD,EAAAoG,EAAAqpD,EAAA/xD,UAAA,OAAAutB,EAAAzuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAOwpC,EAAPkpB,EAAAxtD,OAAA,QAAAsI,IAAAklD,EAAA,IAAAA,EAAA,GACD9Z,EAAU95C,EAAKmkB,MAAf21B,OAEJ95C,EAAKgsD,QAHA,CAAA1pD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,wBAKLkyD,EAAc,sBACdC,EAAe,GACdjpB,GAAWoP,GAASA,EAAM1zC,OAAS,IAC9BjC,EAAO6O,IAAU3P,IAAIy2C,EAAMA,EAAM1zC,OAAS,OAE5CstD,EAAcvvD,EAAK4lD,MACnB4J,EAAexvD,EAAKrB,IAI5B9C,EAAKgsD,SAAU,EAfN1pD,EAAApB,KAAA,GAgBYc,KAAgBiJ,KAAK,CACtC/B,QAAS,WACTgxC,eAAgByZ,EAChB1Z,aAAcyZ,EACdlhC,MAAOqhC,MACRC,QAAQ,WACP9zD,EAAKgsD,SAAU,IAtBV,eAgBHzhD,EAhBGjI,EAAA6I,MA2BEmvC,SAASl0C,OAAS,GAAKmE,EAAO+vC,SAAS,KAAOqZ,GACrDppD,EAAO+vC,SAASyZ,QA5BXzxD,EAAApB,KAAA,GA+BH8yD,aAAah0D,EAAKwjD,iBAAiBj5C,EAAO+vC,UAAW2Z,KA/BlD,QAiCJ37C,KAAiB47C,iBAClB57C,KAAiB67C,iBAAgB,GACjCn0D,EAAKwhB,eAGLkpB,EACA1qC,EAAKo0D,aAAa7pD,EAAO+vC,UAEzBt6C,EAAKq0D,YAAY9pD,EAAO+vC,UAzCnB,yBAAAh4C,EAAAZ,SAAAW,MApPTrC,EAAK+yD,YAAc,IAAIvpD,IAEvBxJ,EAAK4rD,QAAU3rC,IAAMggB,YAErBjgC,EAAKmkB,MAAQ,CACT21B,MAAO,GACPoV,mBAAoB52C,KAAiBw3C,wBACrCsD,gBAAiB96C,KAAiBg8C,sBAVvBt0D,qFAcG8kB,EAAWC,GAC7B,OAAIA,EAAU+0B,QAAU35C,KAAKgkB,MAAM21B,sDAOf50B,EAAWC,GAG/B,MAAO,CAAEsjB,UAFiBtoC,KAAKyrD,QAAvBn+B,QAEiBgb,sDAGVvjB,EAAWC,EAAWC,GAAU,IAC9BoX,EAASr8B,KAAKyrD,QAAvBn+B,QACAgb,EAAcrjB,EAAdqjB,UAERjM,EAAKiM,UAAYA,8CAIjBtoC,KAAK6yD,iBAEL16C,KAAiBmJ,GAAG,2BAA4BthB,KAAKsB,4BAErDuR,IAAUyO,GAAG,mCAAoCthB,KAAKi4C,wBACtDplC,IAAUyO,GAAG,yBAA0BthB,KAAKI,UAC5CyS,IAAUyO,GAAG,qBAAsBthB,KAAKI,UACxCyS,IAAUyO,GAAG,wBAAyBthB,KAAKI,UAC3CyS,IAAUyO,GAAG,kBAAmBthB,KAAKmzD,mBACrCtgD,IAAUyO,GAAG,wBAAyBthB,KAAK2yD,wEAI3Cx6C,KAAiBnW,eAAe,2BAA4BhC,KAAKsB,4BAEjEuR,IAAU7Q,eAAe,mCAAoChC,KAAKi4C,wBAClEplC,IAAU7Q,eAAe,yBAA0BhC,KAAKI,UACxDyS,IAAU7Q,eAAe,qBAAsBhC,KAAKI,UACpDyS,IAAU7Q,eAAe,wBAAyBhC,KAAKI,UACvDyS,IAAU7Q,eAAe,kBAAmBhC,KAAKmzD,mBACjDtgD,IAAU7Q,eAAe,wBAAyBhC,KAAK2yD,8DA+J9CzY,GAAoC,IAA3BmZ,EAA2B3xD,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAAd,GAAI4H,EAAU5H,UAAAuE,OAAA,EAAAvE,UAAA,QAAA6M,EACvC6lD,EAAiBla,EAAQjvC,OAAOooD,GAAY1O,KAAK,SAACnkD,EAAGkpD,GACvD,OAAOC,aAAa92C,IAAU3P,IAAIwmD,GAAGE,MAAO/2C,IAAU3P,IAAI1C,GAAGopD,SAG5D8I,EAAY2B,iBAAiBr0D,KAAKgkB,MAAM21B,MAAOya,IAIpDp0D,KAAKskB,SAAS,CAAEq1B,MAAOya,GAAkB9qD,4CAoE5BqwC,GACb,IAAMh6C,EAAQC,IAAUwD,WACxB,OAAOwQ,YAAiBjU,EAAOg6C,uCAGvBA,EAAOrwC,GACM,IAAjBqwC,EAAM1zC,QAEVjG,KAAKskB,SAAS,CAAEq1B,MAAO35C,KAAKgkB,MAAM21B,MAAM1uC,OAAO0uC,IAAUrwC,wCAGhDqwC,EAAOrwC,GAChBtJ,KAAKskB,SAAS,CAAEq1B,MAAOA,GAASrwC,yCAInBtJ,KAAKyrD,QAAQn+B,QACrBgb,UAAY,mCAGZ,IAAA79B,EAAAzK,KACG25C,EAAU35C,KAAKgkB,MAAf21B,MACAoa,EAAmB57C,KAAnB47C,eACFO,EAAU3a,EAAMlsC,IAAI,SAAA/B,GAAC,OAAIgU,EAAAlf,EAAAmM,cAAC4nD,GAAD,CAAe/8C,IAAK9L,EAAGzE,OAAQyE,EAAGyW,OAAQ1X,EAAKmoD,YAAY7vD,IAAI2I,OAW9F,OACIgU,EAAAlf,EAAAmM,cAAA,OAAKwzB,IAAKngC,KAAKyrD,QAAS9rC,UAAU,eAAeitC,SAAU5sD,KAAKwrD,cAC5D9rC,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CAAM7N,GAAIkR,GACNr0C,EAAAlf,EAAAmM,cAAA,WAAM2nD,KAGRP,GAAkB5hB,MAAMjuB,KAAKiuB,MAAM,IAAK,SAACqiB,EAAGzuD,GAAJ,OAAU2Z,EAAAlf,EAAAmM,cAAC8nD,GAAA,EAAD,CAA0BjiD,MAAOzM,EAAGyR,IAAKzR,kDAzGjF2uD,EAAYrB,GAChC,GAAIqB,EAAWzuD,SAAWotD,EAAWptD,OAAQ,CACzC,IAAK,IAAIF,EAAI,EAAGA,EAAI2uD,EAAWzuD,OAAQF,IACnC,GAAI2uD,EAAW3uD,KAAOstD,EAAWttD,GAAI,OAAO,EAGhD,OAAO,EAGX,OAAO,SA7OW+Z,IAAMC,YCA1B40C,eACF,SAAAA,EAAYv1C,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA20D,IACf90D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA60D,GAAAx0D,KAAAH,KAAMof,KAeVw1C,kCAAoC,WAChC/0D,EAAKykB,SAAS,CAAEuwC,qBAAqB,KAjBtBh1D,EAoBnBi1D,aAAe,WACPj1D,EAAKk1D,UAETl1D,EAAKk1D,SAAU,EACf97B,WAAW,WACPjvB,OAAO7E,SAAS6vD,UACjB,OAvBHn1D,EAAKmkB,MAAQ,CACT6wC,qBAAqB,GAJVh1D,mFASfsY,KAAiBmJ,GAAG,kCAAmCthB,KAAK40D,kFAI5Dz8C,KAAiBnW,eAAe,kCAAmChC,KAAK40D,oEAgBnE,IACGC,EAAwB70D,KAAKgkB,MAA7B6wC,oBACAt0C,EAAYvgB,KAAKof,MAAjBmB,QAEF/b,EAAUqwD,EACZn1C,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQimB,QAAQ,YAAY1E,MAAM,UAAUpC,UAAWY,EAAQgC,KAAM1C,QAAS7f,KAAK80D,cAAnF,UAGA,KAEJ,OAAOp1C,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KAAG3gB,UAxCQsb,IAAMC,WA4CjBgB,OAvDA,CACXwB,KAAM,CACFuE,OAAQ,EACR1D,QAAS,OACT3T,MAAO,OACPovB,aAAc,EACd9c,MAAO,QACPkzC,UAAW,SAgDJl0C,CAAmB4zC,IC3C5BO,uBACF,SAAAA,EAAY91C,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAk1D,IACfr1D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAo1D,GAAA/0D,KAAAH,KAAMof,KA4CV+1C,0BAA4B,SAAAx0D,GACxBd,EAAKwhB,eA9CUxhB,EAiDnBu1D,oCAAsC,SAAAz0D,GAClCd,EAAKykB,SAAS,CACV+wC,qBAAsBl9C,KAAiBk9C,wBAnD5Bx1D,EAuDnBy1D,yBAA2B,SAAA30D,GACvBd,EAAKykB,SAAS,CACVisC,YAAY,EACZgF,aAAc50D,EAAOsG,OACrBm1C,WAAY,QA3DDv8C,EA+DnBgkD,kBAAoB,WAChBhkD,EAAK21D,YAAYloC,QAAQmoC,eAhEV51D,EAmEnBwwD,aAAe,SAAAqF,GACX71D,EAAKykB,SAAS,CACVisC,WAAYmF,EACZH,aAAc,EACdnZ,WAAY,QAvEDv8C,EA2EnBurD,oBAAsB,SAACnkD,EAAQC,EAAWqpD,GAAe,IAC7CoF,EAAiB91D,EAAKuf,MAAtBu2C,aAER/iC,aAAS3rB,EAAQC,GAEjByuD,EAAa1uD,EAAQC,GAErB,IAAMquD,EAAehF,EAAa1wD,EAAKmkB,MAAMuxC,aAAe,EACtDnZ,EAAamU,EAAa1wD,EAAKmkB,MAAMo4B,WAAa,KAExDv8C,EAAKykB,SAAS,CACVisC,WAAYA,EACZgF,aAAcA,EACdnZ,WAAYA,KAxFDv8C,EA4FnBguC,YAAc,WACVhuC,EAAKykB,SAAS,CACVisC,YAAY,EACZgF,aAAc,EACdnZ,WAAY,QAhGDv8C,EAoGnB+1D,uBAAyB,SAAAn4C,GACrB5d,EAAKykB,SAAS,CACV83B,WAAY3+B,KAnGhB5d,EAAK21D,YAAc11C,IAAMggB,YAEzBjgC,EAAKmkB,MAAQ,CACTqxC,qBAAsBl9C,KAAiBk9C,qBACvC9E,YAAY,EACZgF,aAAc,EACdnZ,WAAY,MATDv8C,qFAaG8kB,EAAWC,GAC7B,OAAIA,EAAUywC,uBAAyBr1D,KAAKgkB,MAAMqxC,uBAI9CzwC,EAAU2rC,aAAevwD,KAAKgkB,MAAMusC,aAIpC3rC,EAAU2wC,eAAiBv1D,KAAKgkB,MAAMuxC,cAItC3wC,EAAUw3B,aAAep8C,KAAKgkB,MAAMo4B,yDAQxCjkC,KAAiBmJ,GAAG,oCAAqCthB,KAAKo1D,qCAC9Dj9C,KAAiBmJ,GAAG,yBAA0BthB,KAAKs1D,0BACnDn9C,KAAiBmJ,GAAG,0BAA2BthB,KAAKm1D,0EAIpDh9C,KAAiBnW,eAAe,oCAAqChC,KAAKo1D,qCAC1Ej9C,KAAiBnW,eAAe,yBAA0BhC,KAAKs1D,0BAC/Dn9C,KAAiBnW,eAAe,0BAA2BhC,KAAKm1D,4DAgE3D,IACG50C,EAAYvgB,KAAKof,MAAjBmB,QADHwD,EAEkE/jB,KAAKgkB,MAApEqxC,EAFHtxC,EAEGsxC,qBAAsB9E,EAFzBxsC,EAEyBwsC,WAAYgF,EAFrCxxC,EAEqCwxC,aAAcnZ,EAFnDr4B,EAEmDq4B,WAExD,OACI18B,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAWH,EAAQ8F,YAAa,UAAW,CAClDwvC,uBAAwBR,KAE5B31C,EAAAlf,EAAAmM,cAACmpD,GAAD,CACIvF,WAAYA,EACZ1wC,QAAS7f,KAAK6jD,kBACdyM,SAAUtwD,KAAKqwD,aACf0F,mBAAoB/1D,KAAK41D,yBAE7Bl2C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAACqpD,GAAD,CAAa71B,IAAKngC,KAAKw1D,cACtBjF,GACG7wC,EAAAlf,EAAAmM,cAACspD,GAAD,CACIhvD,OAAQsuD,EACR93C,KAAM2+B,EACNmP,gBAAiBvrD,KAAKorD,oBACtB7hC,QAASvpB,KAAK6tC,eAI1BnuB,EAAAlf,EAAAmM,cAACupD,GAAD,cArIMn2C,cA+IPgB,OAnJA,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,GACbonB,aAAYlG,KAkJJD,CAAmBm0C,yBCvI5BiB,sNACFnyC,MAAQ,CACJ/c,OAAQkR,KAAiBivC,gBAiB7BgP,+BAAiC,SAAAz1D,GAAU,IAC/BsG,EAAWtG,EAAXsG,OAERpH,EAAKykB,SAAS,CAAErd,cAGpB4mC,YAAc,WACVhsC,KAAgBiH,aAAa,CACzBC,QAAS,2BACT9B,OAAQ,0FAvBM0d,EAAWC,EAAWC,GAAa,IAC7C5d,EAAWjH,KAAKgkB,MAAhB/c,OAER,OAAO2d,EAAU3d,SAAWA,8CAI5BkR,KAAiBmJ,GAAG,2BAA4BthB,KAAKo2D,+EAIrDj+C,KAAiBnW,eAAe,2BAA4BhC,KAAKo2D,iEAgB5D,IACG71C,EAAYvgB,KAAKof,MAAjBmB,QACAtZ,EAAWjH,KAAKgkB,MAAhB/c,OACR,OAAKA,EAGDyY,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACI0J,MAAI,EACJggB,mBAAoB,EACpBX,QAASvpB,KAAK6tC,YACdttB,QAAS,CAAEgC,KAAMhC,EAAQkuB,WAAY4nB,UAAW91C,EAAQ+1C,cAAevd,MAAOx4B,EAAQg2C,YACtF72C,EAAAlf,EAAAmM,cAAC6pD,GAAD,CAAU72C,UAAWY,EAAQk2C,aAAcxvD,OAAQA,EAAQ+rB,OAAK,KARpD,YAnCClT,IAAMC,YAmDpBgB,OAnEA,SAAAC,GAAK,MAAK,CACrBy1C,aAAc,CACVhnD,MAAO,KAEX6mD,cAAe,CACXI,WAAY,SAEhBjoB,WAAY,CACR1sB,MAAOf,EAAM0d,QAAQjhB,KAAKkhB,QAC1BhG,OAAQ3X,EAAM2X,OAAOg+B,OAEzBJ,UAAW,CACP9mD,MAAO,OAuDAsR,CAAmBo1C,mCC3C5BS,uBACF,SAAAA,EAAYx3C,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA42D,IACf/2D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA82D,GAAAz2D,KAAAH,KAAMof,KAOVsG,aAAe,WACX7jB,KAAgBiH,aAAa,CAAEC,QAAS,gCATzBlJ,EAYnBqpC,aAAe,WACX,IAAI2tB,GAA0B,EADbhhD,GAAA,EAAAC,GAAA,EAAAC,OAAAxH,EAAA,IAEjB,QAAAyH,EAAAC,EAAkCvI,KAAaqR,cAAcxJ,SAA7DW,OAAAC,cAAAN,GAAAG,EAAAC,EAAAlV,QAAAqV,MAAAP,GAAA,EAAuE,KAAA5T,EAAA+T,EAAAR,MAA5DvO,EAA4DhF,EAA5DgF,OAAQC,EAAoDjF,EAApDiF,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACVsyD,GAA0B,EAC1B,MAEJ,IAAKtyD,EAAQuyD,6BAA8B,CACvCD,GAA0B,EAC1B,QAVS,MAAAxgD,GAAAP,GAAA,EAAAC,EAAAM,EAAA,YAAAR,GAAA,MAAAI,EAAAK,QAAAL,EAAAK,SAAA,WAAAR,EAAA,MAAAC,GAcjBlW,EAAKykB,SAAS,CACVyyC,kBAAkB,EAClBF,wBAAyBA,EACzB/qD,OAAQ+qD,KA7BGh3D,EAiCnBm3D,qBAAuB,WAAM,IAGrBr0D,EAFImJ,EAAWjM,EAAKmkB,MAAhBlY,OAGFyB,EAAa,GAJMkJ,GAAA,EAAAC,GAAA,EAAAC,OAAApI,EAAA,IAKzB,QAAAqI,EAAAC,EAAkCnJ,KAAaqR,cAAcxJ,SAA7DW,OAAAC,cAAAM,GAAAG,EAAAC,EAAA9V,QAAAqV,MAAAK,GAAA,EAAuE,KAAAq0C,EAAAl0C,EAAApB,MAA5DvO,EAA4D6jD,EAA5D7jD,OAAQC,EAAoD4jD,EAApD5jD,UACfvE,EAAKsE,EACLsG,EAAW9D,KAAKvC,IAPK,MAAAmP,GAAAK,GAAA,EAAAC,EAAAN,EAAA,YAAAI,GAAA,MAAAI,EAAAP,QAAAO,EAAAP,SAAA,WAAAI,EAAA,MAAAC,GAUzB9W,EAAK6lB,eAEL7jB,KAAgBiJ,KAAK,CACjB/B,QAAS,iBACT1C,QAAS1D,EACTkJ,YAAa0B,EACbzB,OAAQA,KAjDGjM,EAqDnBo3D,mBAAqB,WACjBp3D,EAAKykB,SAAS,CAAExY,QAASjM,EAAKmkB,MAAMlY,UAtDrBjM,EAyDnBq3D,kBAAoB,WAChBr3D,EAAKykB,SAAS,CAAEyyC,kBAAkB,KA1DnBl3D,EA6DnBs3D,cAAgB,WACZ,IAAIx0D,EACE4K,EAAa,GAFD6pD,GAAA,EAAAC,GAAA,EAAAC,OAAA/oD,EAAA,IAGlB,QAAAgpD,EAAAC,EAAkC9pD,KAAaqR,cAAcxJ,SAA7DW,OAAAC,cAAAihD,GAAAG,EAAAC,EAAAz2D,QAAAqV,MAAAghD,GAAA,EAAuE,KAAAK,EAAAF,EAAA/hD,MAA5DvO,EAA4DwwD,EAA5DxwD,OAAQC,EAAoDuwD,EAApDvwD,UACfvE,EAAKsE,EACLsG,EAAW9D,KAAKvC,IALF,MAAAmP,GAAAghD,GAAA,EAAAC,EAAAjhD,EAAA,YAAA+gD,GAAA,MAAAI,EAAAlhD,QAAAkhD,EAAAlhD,SAAA,WAAA+gD,EAAA,MAAAC,GAQlBz3D,EAAK6lB,eAEL7jB,KAAgBiH,aAAa,CACzBC,QAAS,sBACTuxC,KAAM,CACFrzC,OAAQtE,EACR4K,WAAYA,MA3EL1N,EAgFnB63D,YAAc,WACV,GAAwC,IAApChqD,KAAaqR,cAAc7S,KAA/B,CADgB,IAAAyrD,EAGcjqD,KAAaqR,cAAcxJ,SAASxU,OAAOyU,MAAjEvO,EAHQ0wD,EAGR1wD,OAAQC,EAHAywD,EAGAzwD,UAEhBrH,EAAK6lB,eAEL7jB,KAAgBiH,aAAa,CAAEC,QAAS,oBAAqB9B,OAAQA,EAAQC,UAAWA,MApFxFrH,EAAKmkB,MAAQ,CACT+yC,kBAAkB,GAJPl3D,wEA0FV,IAAAsf,EACyBnf,KAAKof,MAA3BmB,EADHpB,EACGoB,QAAShJ,EADZ4H,EACY5H,EAAGkC,EADf0F,EACe1F,MADfsK,EAEyD/jB,KAAKgkB,MAA3D+yC,EAFHhzC,EAEGgzC,iBAAkBF,EAFrB9yC,EAEqB8yC,wBAAyB/qD,EAF9CiY,EAE8CjY,OAE7C7E,EAASkR,KAAiBs8B,YAE5BmjB,GAAe,EANdC,GAAA,EAAAC,GAAA,EAAAC,OAAAxpD,EAAA,IAOL,QAAAypD,EAAAC,EAAkCvqD,KAAaqR,cAAcxJ,SAA7DW,OAAAC,cAAA0hD,GAAAG,EAAAC,EAAAl3D,QAAAqV,MAAAyhD,GAAA,EAAuE,KAAAK,EAAAF,EAAAxiD,MAA5DvO,EAA4DixD,EAA5DjxD,OAAQC,EAAoDgxD,EAApDhxD,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACVqzD,GAAe,EACf,MAEJ,IAAKrzD,EAAQ4zD,+BAAiC5zD,EAAQuyD,6BAA8B,CAChFc,GAAe,EACf,QAfH,MAAAvhD,GAAAyhD,GAAA,EAAAC,EAAA1hD,EAAA,YAAAwhD,GAAA,MAAAI,EAAA3hD,QAAA2hD,EAAA3hD,SAAA,WAAAwhD,EAAA,MAAAC,GAmBL,IAAIK,GAAiB,EAnBhBC,GAAA,EAAAC,GAAA,EAAAC,OAAAhqD,EAAA,IAoBL,QAAAiqD,EAAAC,EAAkC/qD,KAAaqR,cAAcxJ,SAA7DW,OAAAC,cAAAkiD,GAAAG,EAAAC,EAAA13D,QAAAqV,MAAAiiD,GAAA,EAAuE,KAAAK,EAAAF,EAAAhjD,MAA5DvO,EAA4DyxD,EAA5DzxD,OAAQC,EAAoDwxD,EAApDxxD,UACT3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,CACV6zD,GAAiB,EACjB,MAEJ,IAAK7zD,EAAQ02C,iBAAkB,CAC3B2c,GAAe,EACf,QA5BH,MAAAvhD,GAAAiiD,GAAA,EAAAC,EAAAliD,EAAA,YAAAgiD,GAAA,MAAAI,EAAAniD,QAAAmiD,EAAAniD,SAAA,WAAAgiD,EAAA,MAAAC,GAgCL,IAAMI,EAAyB,IAAVl/C,GAAe4D,YAAgBpW,GAEpD,OACIyY,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQ8F,YAAa,mBAC3C+xC,GACG14C,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUpC,UAAWY,EAAQq4C,WAAY/4C,QAAS7f,KAAKm3D,eAChE19C,GAAS,EAAIlC,EAAE,WAAf,GAAAtM,OAA+BsM,EAAE,WAAjC,KAAAtM,OAA+CwO,IAGvDm+C,GACGl4C,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUpC,UAAWY,EAAQq4C,WAAY/4C,QAAS7f,KAAKkpC,cAChEzvB,GAAS,EAAIlC,EAAE,UAAf,GAAAtM,OAA8BsM,EAAE,UAAhC,KAAAtM,OAA6CwO,IAGrDk/C,GACGj5C,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUpC,UAAWY,EAAQq4C,WAAY/4C,QAAS7f,KAAK03D,aAChEngD,EAAE,UAGXmI,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,yBACfD,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUpC,UAAWY,EAAQs4C,YAAah5C,QAAS7f,KAAK0lB,cACjEnO,EAAE,YAGXmI,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACI0pB,mBAAoB,EACpBhgB,KAAM6sD,EACNxtC,QAASvpB,KAAKk3D,kBACd/sC,kBAAgB,uBAChBzK,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,uBAAhB,WACA+c,EAAAlf,EAAAmM,cAAC0d,GAAA7pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC2d,GAAA9pB,EAAD,KACe,IAAViZ,EACK,6CADL,mCAAAxO,OAEwCwO,EAFxC,eAIJo9C,GACGn3C,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIutD,QACIruC,EAAAlf,EAAAmM,cAACmsD,GAAAt4D,EAAD,CAAUiiB,QAAS3W,EAAQsW,SAAUpiB,KAAKi3D,mBAAoBl1C,MAAM,YAExEykC,MACI/qC,YAAcxU,GAAd,cAAAgE,OAAsC4R,YAAkB5V,IAAY,oBAKpFyY,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKk3D,kBAAmBn1C,MAAM,WAA/C,UAGArC,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKg3D,qBAAsBj1C,MAAM,WAAlD,gBA/KIjC,IAAMC,YAkMnB4G,GALCC,YACZ7F,IA1MW,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChB84D,WAAY,CACR9xC,OAAQ,mBACR4kB,SAAU,SAEdmtB,YAAa,CACT/xC,OAAQ,mBACR4kB,SAAU,UAEXxkB,aAAYlG,KAiMI,CAAEmG,WAAW,IAChCC,cAGWT,CAAQiwC,IC1LjBmC,eACF,SAAAA,EAAY35C,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA+4D,IACfl5D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAi5D,GAAA54D,KAAAH,KAAMof,KA8DV45C,8BAAgC,SAAAr4D,GAC5B,IAAMqD,EAAO6O,IAAU3P,IAAIiV,KAAiBs8B,aACvCzwC,GACDA,EAAKrB,KAAOhC,EAAO0F,SAEvBxG,EAAKwhB,eApEUxhB,EAuEnBo5D,8BAAgC,SAAAt4D,GAC5Bd,EAAKykB,SAAS,CAAE40C,eAAgBxrD,KAAaqR,cAAc7S,QAxE5CrM,EA2EnBkxC,qBAAuB,SAAApwC,GACnBd,EAAKwhB,eA5EUxhB,EA+EnBkzD,wBAA0B,SAAApyD,GACtBd,EAAKykB,SAAS,CAAE2uC,gBAAiBtyD,EAAOqjB,SAhFzBnkB,EAmFnByB,2BAA6B,SAAAX,GACzBd,EAAKykB,SAAS,CAAEyqC,mBAAoBpuD,EAAOyB,uBApF5BvC,EAuFnB46B,kBAAoB,SAAA95B,GAChB,IAAMqD,EAAO6O,IAAU3P,IAAIiV,KAAiBs8B,aACvCzwC,GACDA,EAAKrB,KAAOhC,EAAO0F,SAEvBxG,EAAKwhB,eA5FUxhB,EA+FnB43C,mBAAqB,SAAA92C,GACjB,IAAMqD,EAAO6O,IAAU3P,IAAIiV,KAAiBs8B,aAC5C,GAAKzwC,GACAA,EAAK6N,KAEV,OAAQ7N,EAAK6N,KAAK,UACd,IAAK,qBACD,IAAMsI,EAAWb,KAAgBc,YAAYpW,EAAK6N,KAAK0H,gBACvD,GAAIY,GAAYA,EAAS+B,QACN/B,EAAS+B,QAAQukC,KAAK,SAAA/0C,GAAC,OAAIA,EAAEqD,UAAYpO,EAAOoO,WAE3DlP,EAAKwhB,cAGb,MAEJ,IAAK,kBAML,IAAK,iBACGrd,EAAK6N,KAAK9C,UAAYpO,EAAOoO,SAC7BlP,EAAKwhB,gBAvHFxhB,EAiInBs5D,uBAAyB,SAAAx4D,GACCwX,KAAiBs8B,cAEjB9zC,EAAO0F,SACzBxG,EAAKwhB,eArIMxhB,EAyInB61C,mBAAqB,SAAA/0C,GACjB,IAAMqD,EAAO6O,IAAU3P,IAAIiV,KAAiBs8B,aACvCzwC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK0H,iBAAmB5Y,EAAOs5B,YAAYt3B,IAEhD9C,EAAKwhB,eAlJMxhB,EAsJnB81C,mBAAqB,SAAAh1C,GACjB,IAAMqD,EAAO6O,IAAU3P,IAAIiV,KAAiBs8B,aACvCzwC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKoI,gBAAkBtZ,EAAOoZ,WAAWpX,IAE9C9C,EAAKwhB,eA/JMxhB,EAmKnB+gD,2BAA6B,SAAAjgD,GACzB,IAAMqD,EAAO6O,IAAU3P,IAAIiV,KAAiBs8B,aACvCzwC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAK0H,iBAAmB5Y,EAAO4Y,gBAEpC1Z,EAAKwhB,eA5KMxhB,EAgLnBghD,2BAA6B,SAAAlgD,GACzB,IAAMqD,EAAO6O,IAAU3P,IAAIiV,KAAiBs8B,aACvCzwC,GAGDA,EAAK6N,MACkB,uBAAvB7N,EAAK6N,KAAK,UACV7N,EAAK6N,KAAKoI,gBAAkBtZ,EAAOsZ,eAEnCpa,EAAKwhB,eAzLMxhB,EA6LnB8gD,qBAAuB,SAAAhgD,GACnB,IAAMqD,EAAO6O,IAAU3P,IAAIiV,KAAiBs8B,aACvCzwC,KAGDA,EAAK6N,MACmB,oBAAvB7N,EAAK6N,KAAK,UAAyD,mBAAvB7N,EAAK6N,KAAK,UACvD7N,EAAK6N,KAAK9C,UAAYpO,EAAOoO,SAE7BlP,EAAKwhB,gBAtMMxhB,EA0MnBy+C,gBAAkB,WACd,IAAMr3C,EAASkR,KAAiBs8B,YACnB5hC,IAAU3P,IAAI+D,IAG3BkR,KAAiB+uC,6BAA4B,IA/M9BrnD,EAkNnBu5D,iBAAmB,WACf,IAAMnyD,EAASkR,KAAiBs8B,YACnB5hC,IAAU3P,IAAI+D,IAG3BkR,KAAiBkhD,WAAWpyD,IAvNbpH,EA0NnBy5D,SAAW,SAAAC,GAGP,OAAOhiD,EAFO1X,EAAKuf,MAAX7H,GAECgiD,GACJhvB,QAAQ,MAAO,IACfA,QAAQ,SAAK,KA5NlB1qC,EAAKmkB,MAAQ,CACT+qC,mBAAoB52C,KAAiBw3C,wBACrCsD,gBAAiB96C,KAAiBg8C,sBALvBt0D,qFASG8kB,EAAWC,GAC7B,OAAIA,IAAc5kB,KAAKgkB,QAInBW,EAAU3D,QAAUhhB,KAAKof,MAAM4B,OAI/B2D,EAAUpN,IAAMvX,KAAKof,MAAM7H,+CAQ/BY,KAAiBmJ,GAAG,wBAAyBthB,KAAK+yD,yBAClD56C,KAAiBmJ,GAAG,2BAA4BthB,KAAKsB,4BACrD6W,KAAiBmJ,GAAG,qBAAsBthB,KAAK+wC,sBAE/CrjC,KAAa4T,GAAG,8BAA+BthB,KAAKi5D,+BACpDvrD,KAAa4T,GAAG,6BAA8BthB,KAAKi5D,+BAEnDpmD,IAAUyO,GAAG,8BAA+BthB,KAAKg5D,+BACjDnmD,IAAUyO,GAAG,kBAAmBthB,KAAKy6B,mBACrCzrB,IAAUsS,GAAG,mBAAoBthB,KAAKy3C,oBACtC5kC,IAAUyO,GAAG,uBAAwBthB,KAAKm5D,wBAC1CnqD,IAAUsS,GAAG,qBAAsBthB,KAAK2gD,sBACxCrnC,KAAgBgI,GAAG,2BAA4BthB,KAAK4gD,4BACpD5mC,KAAgBsH,GAAG,2BAA4BthB,KAAK6gD,4BACpDvnC,KAAgBgI,GAAG,mBAAoBthB,KAAK01C,oBAC5C17B,KAAgBsH,GAAG,mBAAoBthB,KAAK21C,mEAI5Cx9B,KAAiBnW,eAAe,wBAAyBhC,KAAK+yD,yBAC9D56C,KAAiBnW,eAAe,2BAA4BhC,KAAKsB,4BACjE6W,KAAiBnW,eAAe,qBAAsBhC,KAAK+wC,sBAE3DrjC,KAAa1L,eAAe,8BAA+BhC,KAAKi5D,+BAChEvrD,KAAa1L,eAAe,6BAA8BhC,KAAKi5D,+BAE/DpmD,IAAU7Q,eAAe,8BAA+BhC,KAAKg5D,+BAC7DnmD,IAAU7Q,eAAe,kBAAmBhC,KAAKy6B,mBACjDzrB,IAAUhN,eAAe,mBAAoBhC,KAAKy3C,oBAClD5kC,IAAU7Q,eAAe,uBAAwBhC,KAAKm5D,wBACtDnqD,IAAUhN,eAAe,qBAAsBhC,KAAK2gD,sBACpDrnC,KAAgBtX,eAAe,2BAA4BhC,KAAK4gD,4BAChE5mC,KAAgBhY,eAAe,2BAA4BhC,KAAK6gD,4BAChEvnC,KAAgBtX,eAAe,mBAAoBhC,KAAK01C,oBACxD17B,KAAgBhY,eAAe,mBAAoBhC,KAAK21C,qDAsKnD,IAAAx2B,EACkBnf,KAAKof,MAApBmB,EADHpB,EACGoB,QAAShJ,EADZ4H,EACY5H,EADZwM,EAE2D/jB,KAAKgkB,MAA7D+qC,EAFHhrC,EAEGgrC,mBAAoBkE,EAFvBlvC,EAEuBkvC,gBAAiBiG,EAFxCn1C,EAEwCm1C,eAE7C,GAAIA,EACA,OAAOx5C,EAAAlf,EAAAmM,cAAC6sD,GAAD,CAAe//C,MAAOy/C,IAGjC,IAAMjyD,EAASkR,KAAiBs8B,YAC1BzwC,EAAO6O,IAAU3P,IAAI+D,GAErBwyD,EAAmBx+C,YAAqBhU,GAC1C0T,EAAQmB,YAAa7U,GAAQ,EAAMsQ,GACnCmpC,EAAWpmC,YAAgBrT,GAAQ,GACnCyyD,GAAwB,EAE5B,GAAIzG,EACA,OAAQA,EAAgB,UACpB,IAAK,4BACDt4C,EAAQ3a,KAAKs5D,SAAS,cACtB5Y,EAAW,GACXgZ,GAAwB,EACxB,MACJ,IAAK,mCACD/+C,EAAQ3a,KAAKs5D,SAAS,uBACtB5Y,EAAW,GACXgZ,GAAwB,EACxB,MACJ,IAAK,uBACD,MACJ,IAAK,0BACD/+C,EAAQ3a,KAAKs5D,SAAS,YACtB5Y,EAAW,GACXgZ,GAAwB,EACxB,MACJ,IAAK,mCACD/+C,EAAQ3a,KAAKs5D,SAAS,uBACtB5Y,EAAW,GACXgZ,GAAwB,OAG7B,GAAI3K,EACP,OAAQA,EAAmB,UACvB,IAAK,2BAEL,IAAK,4BACD,MACJ,IAAK,+BACDp0C,EAAQ3a,KAAKs5D,SAAS,eACtB5Y,EAAW,GACXgZ,GAAwB,EACxB,MACJ,IAAK,0BAEL,IAAK,6BACD,MACJ,IAAK,sCACD/+C,EAAQ3a,KAAKs5D,SAAS,WACtB5Y,EAAW,GACXgZ,GAAwB,EACxB,MACJ,IAAK,iCAEL,IAAK,oCACD,MACJ,IAAK,wCACD/+C,EAAQ3a,KAAKs5D,SAAS,WACtB5Y,EAAW,GACXgZ,GAAwB,OAIhC/+C,EAAQ3a,KAAKs5D,SAAS,WACtB5Y,EAAW,GACXgZ,GAAwB,EAG5B,OACIh6C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQ8F,YAAa,mBAC5C3G,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,gBAAiB,OAAQ1c,EAAO,iBAAmB,kBACzE6b,QAAS7f,KAAKs+C,iBACd5+B,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,yBAAyBhF,GACxC++C,GACGh6C,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,mBAAhB,KACAD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,mBAAhB,KACAD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,mBAAhB,MAGRD,EAAAlf,EAAAmM,cAAA,QACIgT,UAAWe,IAAW,sBAAD5gB,OAAAsmB,EAAA,EAAAtmB,CAAA,GAChBygB,EAAQo5C,wBAA0BF,KAEtC/Y,GAELhhC,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,wBAEnB3b,GACG0b,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACImf,UAAWY,EAAQq5C,wBACnB9yB,aAAW,SACXjnB,QAAS7f,KAAKo5D,kBACd15C,EAAAlf,EAAAmM,cAACokD,GAAAvwD,EAAD,OAEJkf,EAAAlf,EAAAmM,cAACktD,GAAD,CAAgBvb,gBAAiBt+C,KAAKs+C,2BA7UzCv+B,aA0VN4G,GALCC,YACZQ,cACArG,IA7WW,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChBsvC,OAAQ,CACJtoB,OAAQ,QAEZ04B,eAAgB,CACZ14B,OAAQ,qBAEZmpC,iBAAkB,CACdnpC,OAAQ,kBAEZ8yC,wBAAyB,CACrB9yC,OAAQ,kBAEZgzC,eAAgB,CACZhzC,OAAQ,kBAEZ6yC,wBAAyB,CACrB53C,MAAOf,EAAM0d,QAAQC,QAAQwhB,KAAO,eAErCj5B,aAAYlG,KA0VI,CAAEmG,WAAW,IAGrBR,CAAQoyC,2MChWjBgB,sNACF/1C,MAAQ,CACJkiB,SAAU,KACV1wB,MAAO0a,KAAYQ,OACnBspC,UAAW9pC,KAAYQ,OACvBupC,UAAU,EACVC,YAAY,EACZC,WAAW,KAWfC,0BAA4B,SAAAz5D,GAAU,IAC1B+vB,EAAuB/vB,EAAvB+vB,OAAQ2pC,EAAe15D,EAAf05D,gBAEG9rD,IAAf8rD,EACAx6D,EAAKykB,SAAS,CAAE9O,MAAOkb,IAEvB7wB,EAAKykB,SAAS,CAAE9O,MAAOkb,EAAQspC,UAAWK,OAIlDC,kBAAoB,SAAAp0B,GAChBrmC,EAAKykB,SAAS,CAAE4hB,SAAUA,OAG9Bq0B,mBAAqB,WAAM,IAAAx2C,EACqBlkB,EAAKmkB,MAAzCi2C,EADel2C,EACfk2C,SAAUC,EADKn2C,EACLm2C,WAAYC,EADPp2C,EACOo2C,UAE1BF,GACAC,GACAC,GAEJt6D,EAAKykB,SAAS,CAAE4hB,SAAU,UAG9Bs0B,iBAAmB,SAAClvD,EAAOmvD,GACvB56D,EAAKykB,SAAS,CAAE41C,YAAY,IAExBO,GACA56D,EAAKy6D,kBAAkBhvD,EAAM86B,kBAIrCs0B,iBAAmB,WACf76D,EAAKykB,SAAS,CAAE41C,YAAY,GAAS,WACjCr6D,EAAK06D,0BAIbI,sBAAwB,WACpB96D,EAAKykB,SAAS,CAAE61C,WAAW,GAAS,WAChCt6D,EAAK06D,0BAIbK,iBAAmB,WAAM,IAAAp4B,EACQ3iC,EAAKmkB,MAA1BxO,EADagtB,EACbhtB,MAAOwkD,EADMx3B,EACNw3B,UACTa,EAAYrlD,EAAQ,EAAI,EAAIwkD,GAAatnC,IAE/C7wB,KAAgBiH,aAAa,CACzBC,QAAS,0BACT2nB,OAAQmqC,OAIhB9U,aAAe,SAACz6C,EAAOkK,GAAU,IAAAitB,EACG5iC,EAAKmkB,MAA7Bi2C,EADqBx3B,EACrBw3B,SAAUD,EADWv3B,EACXu3B,UAEdC,EACAp4D,KAAgBiH,aAAa,CACzBC,QAAS,0BACT2nB,OAAQlb,IAGZ3T,KAAgBiH,aAAa,CACzBC,QAAS,0BACTsxD,WAAY7kD,EAAQ,EAAIA,EAAQwkD,EAChCtpC,OAAQlb,OAKpBslD,gBAAkB,WAAM,IACZtlD,EAAU3V,EAAKmkB,MAAfxO,MAER3V,EAAKykB,SAAS,CACV21C,UAAU,EACVD,UAAWxkD,OAInBulD,cAAgB,WAAM,IAAAj4B,EACWjjC,EAAKmkB,MAA1BxO,EADUstB,EACVttB,MAAOwkD,EADGl3B,EACHk3B,UAEfn6D,EAAKykB,SACD,CACI21C,UAAU,EACVD,UAAWxkD,EAAQ,EAAIA,EAAQwkD,GAEnC,WACIn6D,EAAK06D,0BAKjBS,cAAgB,SAAAxlD,GACZ,OAAc,IAAVA,EACOkK,EAAAlf,EAAAmM,cAACsuD,GAAAz6D,EAAD,CAAeshB,SAAS,UAG/BtM,EAAQ,IACDkK,EAAAlf,EAAAmM,cAACuuD,GAAA16D,EAAD,CAAgBshB,SAAS,UAGhCtM,EAAQ,GACDkK,EAAAlf,EAAAmM,cAACwuD,GAAA36D,EAAD,CAAgBshB,SAAS,UAG7BpC,EAAAlf,EAAAmM,cAACyuD,GAAA56D,EAAD,CAAcshB,SAAS,8FAlH9BoO,KAAY5O,GAAG,0BAA2BthB,KAAKo6D,0EAI/ClqC,KAAYluB,eAAe,0BAA2BhC,KAAKo6D,4DAiHtD,IAAA3vD,EAAAzK,KACGugB,EAAYvgB,KAAKof,MAAjBmB,QADHwiB,EAEuB/iC,KAAKgkB,MAAzBkiB,EAFHnD,EAEGmD,SAAU1wB,EAFbutB,EAEavtB,MACZtL,EAAO8S,QAAQkpB,GAErB,OACIxmB,EAAAlf,EAAAmM,cAAA,OACI0uD,aAAc,SAAAtxC,GAAC,OAAItf,EAAK+vD,iBAAiBzwC,GAAG,IAC5CuxC,aAAct7D,KAAK06D,iBACnB9tD,MAAO,CACHoW,SAAU,WACVmW,WAAY,gBAEhBzZ,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQsmB,WAAY9kB,MAAM,UAAUlC,QAAS7f,KAAK46D,kBACpE56D,KAAKg7D,cAAcxlD,IAExBkK,EAAAlf,EAAAmM,cAAA,OACIC,MAAO,CACHoW,SAAU,WACVmW,WAAY,cACZoiC,WAAYrxD,EAAO,UAAY,SAC/ByuB,OAAQ,GAEZ0iC,aAAc,SAAAtxC,GAAC,OAAItf,EAAK+vD,iBAAiBzwC,GAAG,IAC5CuxC,aAAct7D,KAAK26D,uBACnBj7C,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAWH,EAAQ8F,YAAa9F,EAAQgC,MACnD3V,MAAO,CACH4uD,UAAW,EACXC,YAAa,EACbv0C,YAAa,UAEjBxH,EAAAlf,EAAAmM,cAACypC,GAAA51C,EAAD,CACI+f,QAAS,CAAE81C,UAAW91C,EAAQ81B,OAAQE,MAAOh2B,EAAQg2B,OACrDC,IAAK,EACL9vB,IAAK,EACLlR,MAAOA,EACP4M,SAAUpiB,KAAK+lD,aACf2V,YAAa17D,KAAK86D,gBAClBa,UAAW37D,KAAK+6D,cAChBpxC,UAAQ,cAxKT7J,IAAMC,YAiLlBgB,OArMA,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChB+mC,WAAY,CACRzjB,QAAS,GAEbb,KAAM,CACF1V,QAAS,OACT8C,OAAQ,IACRF,MAAO,GACP2T,QAAS,SACT+V,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQvF,WAAW0e,QAAU,WAEnFxB,OAAQ,CACJjzB,QAAS,UAEbmzB,MAAO,CACHqlB,QAAS,IAEV10C,aAAYlG,KAoLe,CAAEmG,WAAW,GAAhCpG,CAAwCg5C,8CCtMjD8B,eACF,SAAAA,EAAYz8C,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA67D,IACfh8D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA+7D,GAAA17D,KAAAH,KAAMof,KAiBV08C,0BAA4B,SAAAn7D,GAAU,IAC1BiwB,EAAWjwB,EAAXiwB,OAER/wB,EAAKykB,SAAS,CAAEsM,YArBD/wB,EAwBnBk8D,aAAe,WAAM,IACTnrC,EAAW/wB,EAAKmkB,MAAhB4M,OAEJorC,EAAaprC,EACjB,OAAQA,GACJ,KAAKf,KAAWE,KACZisC,EAAansC,KAAWG,OACxB,MAEJ,KAAKH,KAAWG,OACZgsC,EAAansC,KAAWI,WACxB,MAEJ,KAAKJ,KAAWI,WACZ+rC,EAAansC,KAAWE,KAKhCluB,KAAgBiH,aAAa,CACzBC,QAAS,0BACT6nB,OAAQorC,KA7CGn8D,EAiDnBo8D,QAAU,SAAArrC,GACN,OAAQA,GACJ,KAAKf,KAAWE,KAGhB,KAAKF,KAAWG,OACZ,OAAOtQ,EAAAlf,EAAAmM,cAACuvD,GAAA17D,EAAD,CAAYshB,SAAS,UAEhC,KAAK+N,KAAWI,WACZ,OAAOvQ,EAAAlf,EAAAmM,cAACwvD,GAAA37D,EAAD,CAAeshB,SAAS,UAEnC,QACI,OAAOpC,EAAAlf,EAAAmM,cAACuvD,GAAA17D,EAAD,CAAYshB,SAAS,YA7DrB,IAGP8O,EAAWV,KAAXU,OAHO,OAKf/wB,EAAKmkB,MAAQ,CACT4M,UANW/wB,mFAWfqwB,KAAY5O,GAAG,0BAA2BthB,KAAK87D,0EAI/C5rC,KAAYluB,eAAe,0BAA2BhC,KAAK87D,4DAmDtD,IACGv7C,EAAYvgB,KAAKof,MAAjBmB,QACAqQ,EAAW5wB,KAAKgkB,MAAhB4M,OAER,OACIlR,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACImf,UAAWY,EAAQsmB,WACnB9kB,MAAO6O,IAAWf,KAAWE,KAAO,UAAY,UAChDlQ,QAAS7f,KAAK+7D,cACb/7D,KAAKi8D,QAAQrrC,WA5EH9Q,IAAMC,WAkFlBgB,OAxFA,CACX8lB,WAAY,CACRzjB,QAAS,IAsFFrC,CAAmB86C,yBCnF5BO,eACF,SAAAA,EAAYh9C,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAo8D,IACfv8D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAs8D,GAAAj8D,KAAAH,KAAMof,KAiBVi9C,2BAA6B,SAAA17D,GAAU,IAC3BkwB,EAAYlwB,EAAZkwB,QAERhxB,EAAKykB,SAAS,CAAEuM,aArBDhxB,EAwBnBy8D,cAAgB,WAAM,IACVzrC,EAAYhxB,EAAKmkB,MAAjB6M,QAERhvB,KAAgBiH,aAAa,CACzBC,QAAS,2BACT8nB,SAAUA,KA7BC,IAGPA,EAAYX,KAAZW,QAHO,OAKfhxB,EAAKmkB,MAAQ,CACT6M,WANWhxB,mFAWfqwB,KAAY5O,GAAG,2BAA4BthB,KAAKq8D,2EAIhDnsC,KAAYluB,eAAe,2BAA4BhC,KAAKq8D,6DAkBvD,IACG97C,EAAYvgB,KAAKof,MAAjBmB,QACAsQ,EAAY7wB,KAAKgkB,MAAjB6M,QAER,OACInR,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACImf,UAAWY,EAAQsmB,WACnB9kB,MAAQ8O,EAAsB,UAAZ,UAClBhR,QAAS7f,KAAKs8D,eACd58C,EAAAlf,EAAAmM,cAAC4vD,GAAA/7D,EAAD,CAAashB,SAAS,kBA3CVhC,IAAMC,WAiDnBgB,OAvDA,CACX8lB,WAAY,CACRzjB,QAAS,IAqDFrC,CAAmBq7C,IClD5BI,eACF,SAAAA,EAAYp9C,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAw8D,IACf38D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA08D,GAAAr8D,KAAAH,KAAMof,KAiBVq9C,gCAAkC,SAAA97D,GAAU,IAChCmwB,EAAiBnwB,EAAjBmwB,aAERjxB,EAAKykB,SAAS,CAAEwM,kBArBDjxB,EAwBnB68D,mBAAqB,WAAM,IAGjBC,EAFmB98D,EAAKmkB,MAAtB8M,eAGa2B,IAA6BmqC,IAA2BnqC,IAE7E5wB,KAAgBiH,aAAa,CACzBC,QAAS,gCACT+nB,aAAc6rC,KAhCH,IAGP7rC,EAAiBZ,KAAjBY,aAHO,OAKfjxB,EAAKmkB,MAAQ,CACT8M,gBANWjxB,mFAWfqwB,KAAY5O,GAAG,gCAAiCthB,KAAKy8D,gFAIrDvsC,KAAYluB,eAAe,gCAAiChC,KAAKy8D,kEAqB5D,IACGl8C,EAAYvgB,KAAKof,MAAjBmB,QACAuQ,EAAiB9wB,KAAKgkB,MAAtB8M,aAER,OACIpR,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACImf,UAAWY,EAAQsmB,WACnB9kB,MAAO+O,EAAe2B,IAA6B,UAAY,UAC/D5S,QAAS7f,KAAK08D,oBACdh9C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,+BAAf,cA9CiBG,IAAMC,WAoDxBgB,OAzDA,CACX8lB,WAAY,CACRzjB,QAAS,IAuDFrC,CAAmBy7C,ICdnBK,eA7CX,SAAAA,EAAYz9C,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA68D,IACfh9D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA+8D,GAAA18D,KAAAH,KAAMof,KAiBVmjB,wBAA0B,SAAA5hC,GAAU,IACxBywB,EAAgBzwB,EAAhBywB,YAERvxB,EAAKykB,SAAS,CACV8M,YAAaA,EACbwR,kBAAmBD,aAAkBne,KAAKC,MAAM2M,GAAe,OAvBpDvxB,EA2BnByiC,cAAgB,SAAClR,EAAaD,GAGHwR,aAAkBne,KAAKC,MAAM0M,GAAY,IAKhE,OAJ0BwR,aAAkBne,KAAKC,MAAM2M,GAAe,KA5BtEvxB,EAAKmkB,MAAQ,CACToN,YAAa,EACbD,SAAU,EACVkR,WAAYxiC,EAAKyiC,cAAc,EAAG,IANvBziC,mFAWfqwB,KAAY5O,GAAG,wBAAyBthB,KAAKuiC,wEAI7CrS,KAAYluB,eAAe,wBAAyBhC,KAAKuiC,0DAuBpD,IACGK,EAAsB5iC,KAAKgkB,MAA3B4e,kBAER,OAAOljB,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KAAGyd,UA1CC9iB,IAAMC,oBCanB+8C,uBACF,SAAAA,EAAY19C,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA88D,IACfj9D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAg9D,GAAA38D,KAAAH,KAAMof,KA0BV29C,eAAiB,WACb,IAAM1gC,EAAOx8B,EAAK4rD,QAAQn+B,QAC1B,GAAK+O,EAAL,CAFmB,IAIXn1B,EAJWpH,OAAA4vD,GAAA,EAAA5vD,QAAA4vD,GAAA,EAAA5vD,CAAAD,IAIXqH,UACR,GAAKA,EAAL,CAEA,IAAM5D,EAAOzD,EAAKm9D,WAAW95D,IAAIgE,GACjC,GAAK5D,EAAL,CAEA,IAAMokC,EAAOu1B,eAAqB35D,GAC7BokC,IAELrL,EAAKiM,UAAYZ,EAAKw1B,UAAY,QAxCnBr9D,EAyDnBs9D,kCAAoC,SAAAx8D,GAAU,IAClCy8D,EAASz8D,EAATy8D,KAEJA,EACAv9D,EAAKykB,SACD,CACI+4C,kBAAmBD,GAEvB,WACIv9D,EAAKy9D,YAIbz9D,EAAKykB,SACD,CACI+4C,kBAAmBD,GAEvB,WACIv9D,EAAK09D,cA3EF19D,EAiFnBgiC,0BAA4B,SAAAlhC,GAAU,IAC1BsG,EAAsBtG,EAAtBsG,OAAQC,EAAcvG,EAAduG,UAEhBrH,EAAKoH,OAASA,EACdpH,EAAKqH,UAAYA,GArFFrH,EAwFnB29D,mCAAqC,SAAA78D,GAAU,IAAA88D,EAAA39D,OAAA4vD,GAAA,EAAA5vD,QAAA4vD,GAAA,EAAA5vD,CAAAD,IACnCoH,EADmCw2D,EACnCx2D,OAAQC,EAD2Bu2D,EAC3Bv2D,UAEZvG,EAAOsG,SAAWA,GAAUtG,EAAOuG,YAAcA,GACjDrH,EAAKykB,SAAS,CACVgM,SAAU,QA7FHzwB,EAkGnB69D,4BAA8B,SAAA/8D,GAAU,IAAAg9D,EAAA79D,OAAA4vD,GAAA,EAAA5vD,QAAA4vD,GAAA,EAAA5vD,CAAAD,IAC5BoH,EAD4B02D,EAC5B12D,OAAQC,EADoBy2D,EACpBz2D,UACRopB,EAAa3vB,EAAb2vB,SAEJrpB,IAAWqpB,EAASrpB,QAAUC,IAAcopB,EAASppB,WACrDrH,EAAKykB,SAAS,CACVgM,SAAUA,KAxGHzwB,EA6GnBy9D,QAAU,WACNM,aAAa/9D,EAAKg+D,aAElBh+D,EAAKg+D,YAAc5kC,WAAW,WAAM,IAAAlV,EACclkB,EAAKmkB,MAA3C85C,EADwB/5C,EACxB+5C,eAAgBT,EADQt5C,EACRs5C,kBACxBx9D,EAAKykB,SAAS,CACVpa,KAAM4zD,GAAkBT,KAE7B,MArHYx9D,EAwHnB09D,SAAW,WACPK,aAAa/9D,EAAKy9C,SAElBz9C,EAAKy9C,QAAUrkB,WAAW,WAAM,IAAAuJ,EACkB3iC,EAAKmkB,MAA3C85C,EADoBt7B,EACpBs7B,eAAgBT,EADI76B,EACJ66B,kBACxBx9D,EAAKykB,SAAS,CACVpa,KAAM4zD,GAAkBT,KAE7B,MAhIYx9D,EAmInB26D,iBAAmB,WACf36D,EAAKykB,SAAS,CACV+4C,mBAAmB,EACnBnzD,MAAM,KAtIKrK,EA0InB66D,iBAAmB,WACf76D,EAAKykB,SACD,CACI+4C,mBAAmB,GAEvB,WACIx9D,EAAK09D,cAhJE19D,EAqJnB2rD,aAAe,WACX,IAAMnvB,EAAOx8B,EAAK4rD,QAAQn+B,QACrB+O,IAEkB,IAAnBA,EAAKiM,UACLzmC,KAAgBiH,aAAa,CACzBC,QAAS,kCAENszB,EAAKkM,eAAiBlM,EAAKiM,UAAYjM,EAAKgoB,cACnDxiD,KAAgBiH,aAAa,CACzBC,QAAS,oCA5JjBlJ,EAAK4rD,QAAU3rC,IAAMggB,YACrBjgC,EAAKm9D,WAAa,IAAI3zD,IAJP,IAMP9E,EAAsB2rB,KAAtB3rB,QAAS+rB,EAAaJ,KAAbI,SANF,OAQfzwB,EAAKoH,OAAS1C,EAAUA,EAAQ8B,QAAU,EAC1CxG,EAAKqH,UAAY3C,EAAUA,EAAQ5B,GAAK,EAExC9C,EAAKmkB,MAAQ,CACT9Z,MAAM,EACN4zD,gBAAgB,EAChBT,mBAAmB,EACnB/sC,SAAUA,GAfCzwB,kFAmBAklB,EAAWC,EAAWC,GAAU,IACvC/a,EAASlK,KAAKgkB,MAAd9Z,MAEH8a,EAAU9a,MAAQA,GACnBlK,KAAK+8D,6DAqBT7sC,KAAY5O,GAAG,0BAA2BthB,KAAK6hC,2BAC/C3R,KAAY5O,GAAG,4BAA6BthB,KAAK09D,6BACjDxtC,KAAY5O,GAAG,mCAAoCthB,KAAKw9D,oCACxDttC,KAAY5O,GAAG,kCAAmCthB,KAAKm9D,kFAIvDjtC,KAAYluB,eAAe,0BAA2BhC,KAAK6hC,2BAC3D3R,KAAYluB,eAAe,4BAA6BhC,KAAK09D,6BAC7DxtC,KAAYluB,eAAe,mCAAoChC,KAAKw9D,oCACpEttC,KAAYluB,eAAe,kCAAmChC,KAAKm9D,oEA8G9D,IAAA1yD,EAAAzK,KACGugB,EAAYvgB,KAAKof,MAAjBmB,QADHkiB,EAGsBziC,KAAKgkB,MAAxB9Z,EAHHu4B,EAGGv4B,KAAMomB,EAHTmS,EAGSnS,SACd,IAAKpmB,EAAM,OAAO,KAClB,IAAKomB,EAAU,OAAO,KALjB,IAOG9iB,EAAa8iB,EAAb9iB,SACR,OAAKA,EACDA,EAASvH,QAAU,EAAU,MAEjCjG,KAAKg9D,WAAWh+C,QAGZU,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,YACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,mBAAoBH,EAAQgC,KAAMhC,EAAQ8F,cACjE3G,EAAAlf,EAAAmM,cAAA,OACIwzB,IAAKngC,KAAKyrD,QACV9rC,UAAU,iBACV07C,aAAcr7D,KAAKw6D,iBACnBc,aAAct7D,KAAK06D,iBACnB9N,SAAU5sD,KAAKwrD,cACdl7B,EAAS9iB,SACLuwD,MAAM,GACNC,UACAvwD,IAAI,SAAA/B,GAAC,OACFgU,EAAAlf,EAAAmM,cAAA,OAAK6K,IAAK9L,EAAE/I,GAAIw9B,IAAK,SAAAoO,GAAE,OAAI9jC,EAAKuyD,WAAW/7D,IAAIyK,EAAE/I,GAAI4rC,IAAK5uB,UAAU,iBAC/DmM,aAASpgB,EAAG,kBAAM2T,aAAU3T,EAAErF,QAASqF,EAAE/I,aAnBhD,YA7KPmd,IAAMC,YA0MdgB,OAjNA,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChByiB,KAAM,CACF4W,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQvF,WAAW0e,QAAU,YAEhF3wB,aAAYlG,KA6MJD,CAAmB+7C,ICvL5BmB,uBACF,SAAAA,EAAY7+C,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAi+D,IACfp+D,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAm+D,GAAA99D,KAAAH,KAAMof,KA6EVq9C,gCAAkC,SAAA97D,GAAU,IAChCmwB,EAAiBnwB,EAAjBmwB,aAEF6B,EAAS9yB,EAAKk/B,SAASzR,QACxBqF,IAELA,EAAO7B,aAAeA,IApFPjxB,EAuFnBu6D,0BAA4B,SAAAz5D,GAAU,IAC1B+vB,EAAW/vB,EAAX+vB,OAEFiC,EAAS9yB,EAAKk/B,SAASzR,QACxBqF,IAELA,EAAOjC,OAASA,IA7FD7wB,EAgGnB2/B,iCAAmC,SAAA7+B,GAC/Bd,EAAKq+D,mBAAqBlhD,QAAQ7E,KAAiBsnB,qBAjGpC5/B,EAoGnBs+D,+BAAiC,SAAAx9D,GAC7Bd,EAAKq+D,oBAAqB,GArGXr+D,EAwGnBu+D,+BAAiC,SAAAz9D,GAC7Bd,EAAKq+D,oBAAqB,GAzGXr+D,EA4GnBw+D,8BAAgC,SAAA19D,GAC5Bd,EAAKq+D,oBAAqB,EAE1B,IAAMvrC,EAAS9yB,EAAKk/B,SAASzR,QACxBqF,GAELA,EAAO0M,SAlHQx/B,EAqHnBy+D,iBAAmB,SAACp9D,EAAMqD,GAAY,IAC1B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB9C,EAAKykB,SACD,CACI/C,IAAK1hB,EAAK0+D,YAAYh6D,IAE1B,WACI,IAAMouB,EAAS9yB,EAAKk/B,SAASzR,QACzBqF,GACI9yB,EAAKq+D,qBACLvrC,EAAO0M,QAEPx9B,KAAgBiH,aAAa,CACzBC,QAAS,yBACT9B,OAAQZ,EACRa,UAAWvE,QArIhB9C,EA6InB2+D,wBAA0B,SAAA79D,GAAU,IACxBsG,EAAsBtG,EAAtBsG,OAAQC,EAAcvG,EAAduG,UACR3C,EAAY1E,EAAKmkB,MAAjBzf,QAER,GAAKA,EAAL,CAJgC,IAMxB8B,EAAyB9B,EAAzB8B,QAAS1D,EAAgB4B,EAAhB5B,GAAI6B,EAAYD,EAAZC,QACrB,GAAKA,GACDyC,IAAWZ,GAAWa,IAAcvE,EAExC,OAAQ6B,EAAQ,UACZ,IAAK,cAAe,IACRc,EAAad,EAAbc,SACR,GAAIA,EAAU,KACFX,EAAkCW,EAAlCX,MAAOc,EAA2BH,EAA3BG,WAAYD,EAAeF,EAAfE,WAE3B,GAAIb,EAAO,CACP,IAAMzD,EAAOyD,EAAMA,MACfzD,GACArB,EAAKy+D,iBAAiBp9D,EAAMqD,GAIpC,GAAIkB,EAAY,KACJ6B,EAAU7B,EAAV6B,MACJA,GACAzH,EAAKy+D,iBAAiBh3D,EAAO/C,GAIrC,GAAIiB,EAAY,KACJD,EAAUC,EAAVD,MACJA,GACA1F,EAAKy+D,iBAAiB/4D,EAAOhB,IAKzC,MAEJ,IAAK,eAAgB,IACTI,EAAUH,EAAVG,MACR,GAAIA,EAAO,CACP,IAAMzD,EAAOyD,EAAMA,MACfzD,GACArB,EAAKy+D,iBAAiBp9D,EAAMqD,GAIpC,MAEJ,IAAK,mBAAoB,IACbkB,EAAejB,EAAfiB,WACR,GAAIA,EAAY,KACJ6B,EAAU7B,EAAV6B,MACJA,GACAzH,EAAKy+D,iBAAiBh3D,EAAO/C,GAIrC,MAEJ,IAAK,mBAAoB,IACbiB,EAAehB,EAAfgB,WACR,GAAIA,EAAY,KACJD,EAAUC,EAAVD,MACJA,GACA1F,EAAKy+D,iBAAiB/4D,EAAOhB,OAhN9B1E,EAyNnB69D,4BAA8B,SAAA/8D,GAAU,IAC5B2vB,EAAa3vB,EAAb2vB,SACArpB,EAAsBqpB,EAAtBrpB,OAAQC,EAAcopB,EAAdppB,UACR3C,EAAY1E,EAAKmkB,MAAjBzf,QAEJA,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,GACxDrH,EAAKykB,SAAS,CAAEgM,SAAUA,KA/NfzwB,EAmOnB4+D,yBAA2B,SAAA99D,GACvBd,EAAKykB,SAAS,CACV/f,QAAS,KACT+rB,SAAU,KACVS,SAAS,EACTxP,IAAK,QAxOM1hB,EA4OnBgiC,0BAA4B,SAAAlhC,GAAU,IAC1BsG,EAAsBtG,EAAtBsG,OAAQC,EAAcvG,EAAduG,UADkB6c,EAETlkB,EAAKmkB,MAAtBzf,EAF0Bwf,EAE1Bxf,QAASgd,EAFiBwC,EAEjBxC,IAEjB,GAAIhd,GAAWA,EAAQ8B,UAAYY,GAAU1C,EAAQ5B,KAAOuE,GACxD,GAAIqa,EAAK,CACL,IAAMoR,EAAS9yB,EAAKk/B,SAASzR,QACzBqF,IACIA,EAAO+rC,OACP/rC,EAAOyM,OAEPzM,EAAO0M,cAIhB,CACH,IAAM9d,EAAM1hB,EAAK0+D,YAAYruC,KAAY3rB,SACnCwsB,EAAU/T,QAAQuE,GACP2O,KAAYI,SAC7BzwB,EAAKykB,SACD,CACI/f,QAAS2rB,KAAY3rB,QACrB+rB,SAAUJ,KAAYI,SACtBS,QAASA,EACTxP,IAAKA,GAET,WACI,IAAMoR,EAAS9yB,EAAKk/B,SAASzR,QACzBqF,IACAA,EAAOvB,YAAcvxB,EAAKokB,UACtBpkB,EAAKq+D,oBACLvrC,EAAO0M,aA3QZx/B,EAqRnB8+D,WAAa,WACT98D,KAAgBiH,aAAa,CACzBC,QAAS,2BAvRElJ,EA2RnB++D,WAAa,WAAM,IACPr6D,EAAY1E,EAAKmkB,MAAjBzf,QACHA,GAEL1C,KAAgBiH,aAAa,CACzBC,QAAS,0BACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,MAlSR9C,EAsSnBg/D,WAAa,WACTh9D,KAAgBiH,aAAa,CACzBC,QAAS,2BAxSElJ,EA4SnB0+D,YAAc,SAAAh6D,GACV,GAAIA,EAAS,KACDC,EAAYD,EAAZC,QACR,GAAIA,EAAS,KACDG,EAA4CH,EAA5CG,MAAOc,EAAqCjB,EAArCiB,WAAYD,EAAyBhB,EAAzBgB,WAAYF,EAAad,EAAbc,SAEvC,GAAIX,EAAO,CACP,IAAMzD,EAAOyD,EAAMA,MACnB,GAAIzD,EACA,OAAOoT,YAAOpT,GAItB,GAAIuE,EAAY,KACJ6B,EAAU7B,EAAV6B,MACR,GAAIA,EACA,OAAOgN,YAAOhN,GAItB,GAAI9B,EAAY,KACJD,EAAUC,EAAVD,MACR,GAAIA,EACA,OAAO+O,YAAO/O,GAItB,GAAID,EAAU,CACV,GAAIA,EAASX,MAAO,CAChB,IAAMzD,EAAOoE,EAASX,MAAMA,MAC5B,GAAIzD,EACA,OAAOoT,YAAOpT,GAItB,GAAIoE,EAASG,WAAY,KACb6B,EAAUhC,EAASG,WAAnB6B,MACR,GAAIA,EACA,OAAOgN,YAAOhN,GAItB,GAAIhC,EAASE,WAAY,KACbD,EAAUD,EAASE,WAAnBD,MACR,GAAIA,EACA,OAAO+O,YAAO/O,MAOlC,MAAO,IAhWQ1F,EAmWnBi/D,YAAc,WAAqB,IAApB5tC,IAAoBxvB,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,KAAAA,UAAA,GACvB6C,EAAY1E,EAAKmkB,MAAjBzf,QACHA,IAEL1C,KAAgBiH,aAAa,CACzBC,QAAS,0BACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBuuB,SAAUA,IAGdrxB,EAAKykB,SACD,GAKA,WACIziB,KAAgBiH,aAAa,CACzBC,QAAS,uBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBuuB,SAAUA,QAzXPrxB,EA+XnBk/D,iBAAmB,WACfl/D,EAAKi/D,aAAY,IAhYFj/D,EAmYnBguC,YAAc,WACV,IAAMlb,EAAS9yB,EAAKk/B,SAASzR,QACzBqF,GACAA,EAAO0M,QAGXx/B,EAAKi/D,aAAY,IAzYFj/D,EA4YnBm/D,iBAAmB,WAAM,IACbz6D,EAAY1E,EAAKmkB,MAAjBzf,QACR,GAAKA,EAAL,CAEA,IAAMouB,EAAS9yB,EAAKk/B,SAASzR,QACxBqF,IAEL9yB,EAAKykB,SAAS,CACV8M,YAAauB,EAAOvB,YACpBwR,kBAAmBD,aAAkBne,KAAKC,MAAMkO,EAAOvB,aAAe,MAG1EvvB,KAAgBiH,aAAa,CACzBC,QAAS,wBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnBwuB,SAAUwB,EAAOxB,SACjBC,YAAauB,EAAOvB,YACpBC,UAAW7Y,KAAKI,WA9ZL/Y,EAkanB2jC,cAAgB,WAAM,IACVj/B,EAAY1E,EAAKmkB,MAAjBzf,QACR,GAAKA,EAAL,CAEA,IAAMouB,EAAS9yB,EAAKk/B,SAASzR,QAC7B,GAAKqF,EAAL,CALkB,IAOV7B,EAAyBZ,KAAzBY,aAAcJ,EAAWR,KAAXQ,OAEdrqB,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GACXgC,EAAQ0pB,aAAShoB,EAAS1D,GAMhC,GAJAgwB,EAAO7B,aAAensB,EAAQ8tB,IAA6B3B,EAC3D6B,EAAOjC,OAASA,EAChBiC,EAAO0N,OAAQ,GAEX17B,EAAJ,CAIA,IAAI2sB,EAAS,KACT,kBAAmBqB,EACnBrB,EAASqB,EAAOssC,gBACT,qBAAsBtsC,IAC7BrB,EAASqB,EAAOusC,oBAGf5tC,GAILzvB,KAAgBiH,aAAa,CACzBC,QAAS,iCACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnB2uB,OAAQA,QArcGzxB,EAycnBs/D,gBAAkB,WAAM,IACZ56D,EAAY1E,EAAKmkB,MAAjBzf,QACR,GAAKA,EAAL,CAEA1E,EAAKykB,SAAS,CACVyM,SAAS,IAGb,IAAM4B,EAAS9yB,EAAKk/B,SAASzR,QACxBqF,GAEL9wB,KAAgBiH,aAAa,CACzBC,QAAS,wBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,GACnByuB,YAAauB,EAAOvB,YACpBD,SAAUwB,EAAOxB,SACjBE,UAAW7Y,KAAKI,UA1dL/Y,EA8dnBu/D,iBAAmB,WAAM,IACb76D,EAAY1E,EAAKmkB,MAAjBzf,QACHA,IAEL1E,EAAKykB,SAAS,CACVyM,SAAS,IAGElxB,EAAKk/B,SAASzR,SAG7BzrB,KAAgBiH,aAAa,CACzBC,QAAS,yBACT9B,OAAQ1C,EAAQ8B,QAChBa,UAAW3C,EAAQ5B,OA5eR9C,EAgfnB68D,mBAAqB,WAAM,IAGjBC,EAFmB98D,EAAKmkB,MAAtB8M,eAGa2B,IAA6BmqC,IAA2BnqC,IAE7E5yB,EAAKykB,SACD,CACIwM,aAAc6rC,GAElB,WACI,IAAMhqC,EAAS9yB,EAAKk/B,SAASzR,QACxBqF,IAELA,EAAO7B,aAAe6rC,KAI9B96D,KAAgBiH,aAAa,CACzBC,QAAS,gCACT+nB,aAAc6rC,KApgBH98D,EAwgBnBw/D,QAAU,SAAC96D,EAAS+rB,GAChB,IAAK/rB,EAAS,OAAO,EACrB,IAAK+rB,IAAaA,EAAS9iB,SAASvH,OAAQ,OAAO,EAFtB,IAIrBI,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEX6P,EAAQ8d,EAAS9iB,SAASgkB,UAAU,SAAA9lB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACjF,OAAe,IAAX6P,GAEGA,EAAQ,EAAI8d,EAAS9iB,SAASvH,QAjhBtBpG,EAohBnBy/D,QAAU,SAAC/6D,EAAS+rB,GAChB,IAAK/rB,EAAS,OAAO,EACrB,IAAK+rB,IAAaA,EAAS9iB,SAASvH,OAAQ,OAAO,EAFtB,IAIrBI,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEX6P,EAAQ8d,EAAS9iB,SAASgkB,UAAU,SAAA9lB,GAAC,OAAIA,EAAErF,UAAYA,GAAWqF,EAAE/I,KAAOA,IACjF,OAAe,IAAX6P,GAEGA,EAAQ,GAAK,GA7hBL3S,EAgiBnB0/D,sBAAwB,WACpB19D,KAAgBiH,aAAa,CACzBC,QAAS,kCACTq0D,MAAM,KAniBKv9D,EAuiBnB2/D,sBAAwB,WACpB39D,KAAgBiH,aAAa,CACzBC,QAAS,kCACTq0D,MAAM,KA1iBKv9D,EA8iBnB4/D,iBAAmB,WAAM,IACbl7D,EAAY1E,EAAKmkB,MAAjBzf,QACHA,GAELquB,aAASruB,EAAQ8B,QAAS9B,EAAQ5B,KA/iBlC9C,EAAKk/B,SAAWjf,IAAMggB,YAHP,IAKPv7B,EAAsB2rB,KAAtB3rB,QAAS+rB,EAAaJ,KAAbI,SALF,OAOfzwB,EAAKokB,UAAYy7C,IAEjB7/D,EAAKmkB,MAAQ,CACToN,YAAa,EACbwR,kBAAmBD,aAAkB,GACrCp+B,QAASA,EACT+rB,SAAUA,EACVS,SAAS,EACTxP,IAAK1hB,EAAK0+D,YAAYh6D,IAfX1E,qFAmBG8kB,EAAWC,EAAWC,GAAa,IAC7C7D,EAAUhhB,KAAKof,MAAf4B,MAD6CwhB,EAETxiC,KAAKgkB,MAAzCzf,EAF6Ci+B,EAE7Cj+B,QAAS+rB,EAFoCkS,EAEpClS,SAAU/O,EAF0BihB,EAE1BjhB,IAAKwP,EAFqByR,EAErBzR,QAEhC,OAAIpM,EAAU3D,QAAUA,IAIpB4D,EAAUrgB,UAAYA,IAItBqgB,EAAU0L,WAAaA,IAIvB1L,EAAUrD,MAAQA,GAIlBqD,EAAUmM,UAAYA,iDAQ1BnxB,IAAU0hB,GAAG,4BAA6BthB,KAAKw+D,yBAC/C5+D,IAAU0hB,GAAG,4BAA6BthB,KAAKw+D,yBAC/C5+D,IAAU0hB,GAAG,wBAAyBthB,KAAKw+D,yBAC3CtuC,KAAY5O,GAAG,0BAA2BthB,KAAK6hC,2BAC/C3R,KAAY5O,GAAG,yBAA0BthB,KAAKy+D,0BAC9CvuC,KAAY5O,GAAG,4BAA6BthB,KAAK09D,6BACjDxtC,KAAY5O,GAAG,8BAA+BthB,KAAKq+D,+BACnDnuC,KAAY5O,GAAG,+BAAgCthB,KAAKo+D,gCACpDluC,KAAY5O,GAAG,+BAAgCthB,KAAKm+D,gCACpDjuC,KAAY5O,GAAG,0BAA2BthB,KAAKo6D,2BAC/ClqC,KAAY5O,GAAG,gCAAiCthB,KAAKy8D,iCAErDtkD,KAAiBmJ,GAAG,iCAAkCthB,KAAKw/B,iFAI3D5/B,IAAUoC,eAAe,4BAA6BhC,KAAKw+D,yBAC3D5+D,IAAUoC,eAAe,4BAA6BhC,KAAKw+D,yBAC3D5+D,IAAUoC,eAAe,wBAAyBhC,KAAKw+D,yBACvDtuC,KAAYluB,eAAe,0BAA2BhC,KAAK6hC,2BAC3D3R,KAAYluB,eAAe,yBAA0BhC,KAAKy+D,0BAC1DvuC,KAAYluB,eAAe,4BAA6BhC,KAAK09D,6BAC7DxtC,KAAYluB,eAAe,8BAA+BhC,KAAKq+D,+BAC/DnuC,KAAYluB,eAAe,+BAAgChC,KAAKo+D,gCAChEluC,KAAYluB,eAAe,+BAAgChC,KAAKm+D,gCAChEjuC,KAAYluB,eAAe,0BAA2BhC,KAAKo6D,2BAC3DlqC,KAAYluB,eAAe,gCAAiChC,KAAKy8D,iCAEjEtkD,KAAiBnW,eAAe,iCAAkChC,KAAKw/B,mEA0elE,IACGjf,EAAYvgB,KAAKof,MAAjBmB,QADHkiB,EAEuCziC,KAAKgkB,MAAzC+M,EAFH0R,EAEG1R,QAASxsB,EAFZk+B,EAEYl+B,QAAS+rB,EAFrBmS,EAEqBnS,SAAU/O,EAF/BkhB,EAE+BlhB,IAEhC5c,GAAQ,EACZ,GAAIJ,EAAS,KACD8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GACjBgC,EAAQ0pB,aAAShoB,EAAS1D,GAG9B,IAAMgY,EAAQsT,aAAc1pB,GACtBo7D,EAAW9zC,aAAYtnB,GACvBgU,EAAOS,aAAQzU,GACfq7D,GAAYj7D,EACZk7D,GAAoBl7D,EACpBm7D,EAAan7D,EACbo7D,EAAcp7D,EACd06D,EAAUr/D,KAAKq/D,QAAQ96D,EAAS+rB,GAChCgvC,EAAUt/D,KAAKs/D,QAAQ/6D,EAAS+rB,GAEtC,OACI5Q,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAA,SACIgT,UAAU,sBACVwgB,IAAKngC,KAAK++B,SACVxd,IAAKA,EACL+e,UAAU,EACV0/B,UAAU,EACVvwD,MAAO,GACPE,OAAQ,GACRm0B,UAAW9jC,KAAKwjC,cAChBy8B,OAAQjgE,KAAKm/D,gBACbe,QAASlgE,KAAKo/D,iBACde,aAAcngE,KAAKg/D,iBACnBoB,QAASpgE,KAAK++D,mBAEjBx6D,GACGmb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQ8F,YAAa,kBAC5C3G,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACI4mC,UAAWi4B,EACX1/C,UAAWY,EAAQsmB,WACnB9kB,MAAM,UACNlC,QAAS7f,KAAK2+D,YACdj/C,EAAAlf,EAAAmM,cAAC0zD,GAAA7/D,EAAD,CAAkBshB,SAAS,WAE/BpC,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACImf,UAAWY,EAAQsmB,WACnB9kB,MAAM,UACNqlB,UAAW7lB,EACX1B,QAAS7f,KAAK4+D,YACb7tC,EAAUrR,EAAAlf,EAAAmM,cAAC+pC,GAAAl2C,EAAD,MAAgBkf,EAAAlf,EAAAmM,cAACgqC,GAAAn2C,EAAD,OAE/Bkf,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACI4mC,UAAWk4B,EACX3/C,UAAWY,EAAQsmB,WACnB9kB,MAAM,UACNlC,QAAS7f,KAAK6+D,YACdn/C,EAAAlf,EAAAmM,cAAC2zD,GAAA9/D,EAAD,CAAcshB,SAAS,WAE3BpC,EAAAlf,EAAAmM,cAAC4zD,GAAD,MACA7gD,EAAAlf,EAAAmM,cAAA,OACIgT,UAAU,wBACV07C,aAAcr7D,KAAKu/D,sBACnBjE,aAAct7D,KAAKw/D,sBACnB3/C,QAAS7f,KAAKy/D,kBACd//C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACVhF,EACAilD,GACGlgD,EAAAlf,EAAAmM,cAAA,QAAMgO,MAAOglD,GAAb,OAEKpnD,IAVjB,OAeImH,EAAAlf,EAAAmM,cAAC6zD,GAAD,OAEJ9gD,EAAAlf,EAAAmM,cAAC8zD,GAAD,MACCZ,GAAoBngD,EAAAlf,EAAAmM,cAAC+zD,GAAD,MACpBZ,GAAcpgD,EAAAlf,EAAAmM,cAACg0D,GAAD,MACdZ,GAAergD,EAAAlf,EAAAmM,cAACi0D,GAAD,MAChBlhD,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQsmB,WAAYhnB,QAAS7f,KAAK6tC,aACrDnuB,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,CAAWshB,SAAS,oBAxoBrBhC,IAAMC,YAspBlB4G,GALCC,YACZQ,cACArG,IA1pBW,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChB+mC,WAAY,CACRzjB,QAAS,IAEV8D,aAAYlG,KAspBI,CAAEmG,WAAW,IAGrBR,CAAQs3C,ICtkBR4C,uBA7GX,SAAAA,EAAYzhD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA6gE,IACfhhE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA+gE,GAAA1gE,KAAAH,KAAMof,KAeV0hD,uBAAyB,SAAAngE,GACrBd,EAAKykB,SAAS,CAAE21C,SAAU9hD,KAAiB4oD,iBAjB5BlhE,EAoBnBmhE,gBAAkB,SAAA11D,GACdA,EAAMkd,iBACNld,EAAMma,mBAtBS5lB,EAyBnBohE,WAAa,SAAA31D,GACTA,EAAMkd,iBACNld,EAAMma,kBACNtN,KAAiB+oD,aAAY,GAE7BrhE,EAAK0yC,6BAA6BjnC,EAAM61D,aAAajvB,QA9BtCryC,EAiCnBuhE,gBAAkB,SAAA91D,GACdA,EAAMkd,iBACNld,EAAMma,kBACNtN,KAAiB+oD,aAAY,IApCdrhE,EAuCnB0yC,6BAA+B,SAAAL,GAC3B,GAAqB,IAAjBA,EAAMjsC,OAEV,IAAK,IAAIF,EAAI,EAAGA,EAAImsC,EAAMjsC,OAAQF,IAAK,CACnC,IAAI7E,EAAOgxC,EAAMnsC,GACXvB,EAAU,CACZuE,QAAS,uBACThE,SAAU,CAAEgE,QAAS,gBAAiB4pC,KAAMzxC,EAAKyxC,KAAMznC,KAAMhK,IAGjErB,EAAK8wC,eAAensC,EAAS,SAAA4F,GAAM,OAAIxK,IAAUozC,WAAW5oC,EAAO5F,QAAQO,SAASA,SAASpC,GAAIyH,OAjDtFvK,EAqDnB8wC,eArDmB,eAAAtwC,EAAAP,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAqDF,SAAAC,EAAO8D,EAAS8E,GAAhB,IAAAunC,EAAAzmC,EAAA,OAAA6kB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACP8vC,EAAgB14B,KAAiBs8B,YAD1B,CAAA5zC,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,oBAIRmD,EAJQ,CAAA3D,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAC,KAAA,EAOTqX,KAAiBw7B,sBAAjB,mCAAA1oC,OAA0E4lC,IAPjEhwC,EAAAE,KAAA,EASUc,KAAgBiJ,KAAK,CACpC/B,QAAS,cACT1C,QAASwqC,EACTx/B,oBAAqB,EACrBuiC,sBAAuBpvC,IAblB,OASL4F,EATKvJ,EAAAmK,KAkBTnJ,KAAgBiJ,KAAK,CACjB/B,QAAS,eACT1C,QAASwqC,EACThlC,YAAa,CAACzB,EAAOzH,MAGzB2G,EAASc,GAxBAvJ,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAG,GAAAH,EAAA,SA0BTizC,MAAM,qBAAuBC,KAAKC,UAALnzC,EAAAG,KA1BpB,yBAAAH,EAAAU,SAAAb,EAAA,kBArDE,gBAAAc,EAAAe,GAAA,OAAAlC,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKmkB,MAAQ,CACTi2C,SAAU9hD,KAAiB4oD,eAJhBlhE,mFASfsY,KAAiBmJ,GAAG,uBAAwBthB,KAAK8gE,uEAIjD3oD,KAAiBnW,eAAe,uBAAwBhC,KAAK8gE,yDAsExD,IACG7G,EAAaj6D,KAAKgkB,MAAlBi2C,SAER,OACIv6C,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACK80C,GACGv6C,EAAAlf,EAAAmM,cAAA,OACIgT,UAAU,oBACV0hD,YAAarhE,KAAKghE,gBAClBM,YAAathE,KAAKohE,gBAClBG,OAAQvhE,KAAKihE,YACbvhD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,6BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,0BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,2BAAf,mBACAD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,8BAAf,+CAlGFG,IAAMC,kDCoDpC,IAwBMyhD,8MACFx9C,MAAQ,CACJy9C,SAAU,QAGdC,eAAiB,SAAAh6B,GACb7nC,EAAKykB,SAAS,CACVm9C,SAAU/5B,OAIlBi6B,YAAc,SAAAr2D,GACVA,EAAMma,kBADa,IAGXiH,EAAgB7sB,EAAKuf,MAArBsN,YACR,IAAKA,EAAa,OAAO,KAJN,IAMXC,EAAWD,EAAXC,OAER,OAAQA,EAAO,UACX,IAAK,2BAA4B,IACrBvb,EAAmBub,EAAnBvb,eAERke,aAASle,GAAgB,GACzB,MAEJ,IAAK,iCACD,MAEJ,IAAK,8BAA+B,IACxB/K,EAAwBsmB,EAAxBtmB,QAAS6X,EAAeyO,EAAfzO,WAEjB0U,aAASvsB,EAAS6X,GAAY,6EAMjC,IAAAiB,EAC+Bnf,KAAKof,MAAjC7H,EADH4H,EACG5H,EAAGgJ,EADNpB,EACMoB,QAASmM,EADfvN,EACeuN,YACZ+0C,EAAazhE,KAAKgkB,MAAlBy9C,SAEF9mD,EAAQiS,aAAgBF,EAAanV,GACrCqqD,EAAUn1C,aAAsBC,GAClChN,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACK5N,EAAE,cACHmI,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAWY,EAAQshD,MAAO1hC,IAAKngC,KAAK0hE,kBAG9C,GAGJ,OACIhiD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,iBAAkBH,EAAQuhD,aAAc,YAAnE,GAAA72D,OACQsM,EAAE,oBADV,MAAAtM,OACkCsM,EAAE,QADpC,KAEImI,EAAAlf,EAAAmM,cAACo1D,GAAAvhE,EAAD,CACIma,MAAOinD,EACPrhD,QAAS,CAAEyhD,OAAQzhD,EAAQ0hD,YAAaL,QAASrhD,EAAQqhD,SACzDM,YAAa,CACTC,cAAe,CACXC,UAAW,CACPP,MAAO,CACHQ,QAASrlD,QAAQykD,GACjBtwB,QAASswB,MAKzBa,UAAU,OACV5iD,EAAAlf,EAAAmM,cAAA,KAAGkT,QAAS7f,KAAK2hE,aAAchnD,YArE7BmF,IAAMC,WAqFb4G,GALCC,YACZ7F,IAzGW,SAAAC,GAAK,MAAK,CACrB8gD,aAAc,CACV//C,MAAOf,EAAM0d,QAAQC,QAAQC,MAEjCqjC,aAnDoBlgD,EAmDQf,EAAM0d,QAAQwqB,KAAK,KAlDxC,CACHqZ,kCAAmC,CAC/Bt/C,IAAK,EACLC,KAAM,EACNs4C,UAAW,UACX/rD,MAAO,MACPE,OAAQ,MACR6yD,YAAa,CACT/G,YAAa,gBACbp1C,YAAW,2BAAApb,OAA6B8W,EAA7B,kBAGnB0gD,+BAAgC,CAC5Bz7C,OAAQ,EACR9D,KAAM,EACNw/C,aAAc,UACdjzD,MAAO,MACPE,OAAQ,MACR6yD,YAAa,CACT/G,YAAa,gBACbp1C,YAAW,GAAApb,OAAK8W,EAAL,0CAGnB4gD,iCAAkC,CAC9Bz/C,KAAM,EACN0/C,WAAY,UACZjzD,OAAQ,MACRF,MAAO,MACP+yD,YAAa,CACT/G,YAAa,gBACbp1C,YAAW,eAAApb,OAAiB8W,EAAjB,8BAGnB8gD,gCAAiC,CAC7B97C,MAAO,EACP+7C,YAAa,UACbnzD,OAAQ,MACRF,MAAO,MACP+yD,YAAa,CACT/G,YAAa,gBACbp1C,YAAW,uCAAApb,OAAyC8W,OAWhE8/C,MAAO,CACH7+C,SAAU,WACVlB,SAAU,EACVrS,MAAO,MACPE,OAAQ,MACR6yD,YAAa,CACTh+D,QAAS,KACTsiB,OAAQ,OACRja,QAAS,QACT4C,MAAO,EACPE,OAAQ,EACRuX,YAAa,UAGrB06C,QAAS,CACL96C,OAAQ,iBAnEhB,IAAwB/E,GAwJD,CAAEoF,WAAW,IAChCC,cAGWT,CAAQ66C,IChGRuB,uBA5DX,SAAAA,EAAY3jD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA+iE,IACfljE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAijE,GAAA5iE,KAAAH,KAAMof,KAeV4jD,wBAA0B,SAAAC,GAClBpjE,EAAKuf,MAAMlY,YAAc+7D,EAAQvkD,gBAAkBukD,EAAQ1+D,UAC3D1E,EAAKqjE,aAAeD,EAAQ1+D,QAAQ5B,GACpC9C,EAAKwhB,gBAnBMxhB,EAuBnBsjE,2BAA6B,SAAAF,GAErBpjE,EAAKuf,MAAMnY,SAAWg8D,EAAQ58D,UAC5BxG,EAAKuf,MAAM8jD,cAAgBrjE,EAAKuf,MAAM8jD,cAAgBD,EAAQh2C,6BAC5DptB,EAAKuf,MAAMlY,WAAa+7D,EAAQh2C,8BAEpCptB,EAAKwhB,eA7BMxhB,mFAKf6N,KAAa4T,GAAG,0BAA2BthB,KAAKgjE,yBAChDt1D,KAAa4T,GAAG,6BAA8BthB,KAAKgjE,yBACnDnwD,IAAUyO,GAAG,uBAAwBthB,KAAKmjE,2EAI1Cz1D,KAAa1L,eAAe,0BAA2BhC,KAAKgjE,yBAC5Dt1D,KAAa1L,eAAe,6BAA8BhC,KAAKgjE,yBAC/DnwD,IAAU7Q,eAAe,uBAAwBhC,KAAKmjE,6DAoBjD,IAAAhkD,EACyBnf,KAAKof,MAA3BnY,EADHkY,EACGlY,OAAQC,EADXiY,EACWjY,UACV3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACnCsS,EAASmW,aAAkBprB,GAEjC,IAAKiV,EAAQ,OAAO,KAEpB,IAAI8+B,EAAa,KACjB,OAAQ9+B,GACJ,IAAK,SACD8+B,EAAa54B,EAAAlf,EAAAmM,cAACs4C,GAAAzkD,EAAD,CAAkBshB,SAAS,UAAUC,MAAM,UACxD,MACJ,IAAK,UACDu2B,EAAa54B,EAAAlf,EAAAmM,cAACklD,GAAArxD,EAAD,CAAcshB,SAAS,UAAUC,MAAM,aACpD,MACJ,IAAK,YACDu2B,EAAa54B,EAAAlf,EAAAmM,cAACmlD,GAAAtxD,EAAD,CAAUshB,SAAS,UAAUC,MAAM,YAChD,MACJ,IAAK,OACDu2B,EAAa54B,EAAAlf,EAAAmM,cAAColD,GAAAvxD,EAAD,CAAashB,SAAS,UAAUC,MAAM,YAI3D,OAAOrC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkB24B,UAzDpBx4B,IAAMC,6BCQnBgB,WAbA,SAAAC,GAAK,MAAK,CACrBoiD,gBAAiB,CACbjqC,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQwqB,KAAK,KAAO,UACtEnnC,MAA8B,SAAvBf,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQjhB,KAAKkhB,QAAU,aAU7D5d,CANf,SAAyB3B,GAAO,IACpBmB,EAAYnB,EAAZmB,QAER,OAAOb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,mBAAoBH,EAAQ6iD,kBAAvD,qGCQLC,sNACF5rD,WAAa,WAAM,IAAA0H,EACwEtf,EAAKuf,MAApFmB,EADOpB,EACPoB,QAAStZ,EADFkY,EACElY,OAAQC,EADViY,EACUjY,UAAWgF,EADrBiT,EACqBjT,KAAmBo3D,GADxCnkD,EAC2Bc,YAD3Bd,EACwCmkD,kBAAkBjkD,EAD1DF,EAC0DE,UAEnE9a,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAJN,IAMPC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAPN,IASPc,EAAad,EAAbc,SACR,IAAKA,EAAU,OAAO,KAVP,IAaXi+D,EAaAj+D,EAbAi+D,UACA5oD,EAYArV,EAZAqV,MACAa,EAWAlW,EAXAkW,YAEA3W,GASAS,EAVAoD,IAUApD,EATAT,OACAJ,EAQAa,EARAb,UACAc,EAOAD,EAPAC,MACAZ,EAMAW,EANAX,MACAI,EAKAO,EALAP,SACAU,EAIAH,EAJAG,WACAD,EAGAF,EAHAE,WACAH,EAEAC,EAFAD,QACAwM,EACAvM,EADAuM,KAGJ,GAAIxM,EACA,OACIqa,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKo+C,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,GACvDkE,EAAAlf,EAAAmM,cAACyf,GAAA,EAAD,CAASnlB,OAAQA,EAAQC,UAAWA,EAAW7B,QAASA,EAASga,UAAWA,KAKxF,GAAI5Z,EACA,OACIia,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKo+C,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,GACvDkE,EAAAlf,EAAAmM,cAAC6f,GAAA,EAAD,CAAWvlB,OAAQA,EAAQC,UAAWA,EAAWG,UAAW5B,EAAY4Z,UAAWA,KAK/F,GAAI7Z,EACA,OACIka,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKo+C,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,GACvDkE,EAAAlf,EAAAmM,cAAC4f,GAAA,EAAD,CAAWtlB,OAAQA,EAAQC,UAAWA,EAAWM,UAAWhC,EAAY6Z,UAAWA,KAK/F,GAAI1a,EACA,OACI+a,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKo+C,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,GACvDkE,EAAAlf,EAAAmM,cAACof,GAAA,EAAD,CAAO9kB,OAAQA,EAAQC,UAAWA,EAAWvC,MAAOA,EAAO0a,UAAWA,KAKlF,GAAIta,EACA,OACI2a,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKo+C,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,GACvDkE,EAAAlf,EAAAmM,cAACsf,GAAA,EAAD,CAAUhlB,OAAQA,EAAQC,UAAWA,EAAWnC,SAAUA,EAAUsa,UAAWA,KAK3F,GAAI5a,IACqB6P,YAAO7P,EAAUA,YAClBA,EAAUiC,WAC1B,OACIgZ,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKo+C,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,GACvDkE,EAAAlf,EAAAmM,cAACuT,GAAA,EAAD,CAAWjZ,OAAQA,EAAQC,UAAWA,EAAWzC,UAAWA,EAAW4a,UAAWA,KAMlG,GAAI9Z,GACIA,EAAMmB,UACN,OACIgZ,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKo+C,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,GACvDkE,EAAAlf,EAAAmM,cAAC2f,GAAA,EAAD,CAAOrlB,OAAQA,EAAQC,UAAWA,EAAW3B,MAAOA,EAAO8Z,UAAWA,KAMtF,GAAIxa,EAAO,CACP,IAAMqB,EAAY8J,aAAQnL,EAAMmB,MAAOkG,GACjCs3D,GACQ,YAAT3xD,GAA+B,UAATA,KACtB0xD,GAAa5oD,GAASa,IACvBtV,GACAA,EAAUuJ,QAAUvJ,EAAUyJ,OAE5B/C,EAAQ42D,EACR,CACIC,MAAO,QACPb,WAAY,EACZF,aAAc,GAElB,GACN,OACIhjD,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKq+C,GACG9jD,EAAAlf,EAAAmM,cAAC+2D,GAAA,EAAD,CACIzjD,YAAaqjD,EACb12D,MAAOA,EACP3F,OAAQA,EACRC,UAAWA,EACXrC,MAAOA,EACPwa,UAAWA,IAGlBkkD,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,IACrDgoD,GAAc9jD,EAAAlf,EAAAmM,cAAC+2D,GAAA,EAAD,CAAOz8D,OAAQA,EAAQC,UAAWA,EAAWrC,MAAOA,EAAOwa,UAAWA,KAKlG,OACIK,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACKo+C,GACG7jD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,qBAAsBH,EAAQK,kBAAmB2iD,GAE/E5oD,GAAS+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBAAkBhF,GAC1Ca,GAAekE,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBAAwBnE,6EAK1D,IACG+E,EAAYvgB,KAAKof,MAAjBmB,QAER,OACIb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,YACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,kBAAmBH,EAAQI,yBACtDjB,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBAAoB3f,KAAKyX,sBAnLlCqI,IAAMC,YAkM5BsjD,GAAQxiD,aAAe,CACnB3U,KAAMgG,IACN+N,YAAaa,IACbwiD,iBAAkBK,KAGP5iD,WA5MA,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,GACbohB,aAAaF,KA2MLD,CAAmBsiD,IC/K5BO,uBACF,SAAAA,EAAYxkD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA4jE,IACf/jE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA8jE,GAAAzjE,KAAAH,KAAMof,KA0EVykD,6BAA+B,SAAAljE,GACtBd,EAAKmkB,MAAMlF,UAEhBjf,EAAKykB,SAAS,CAAExF,UAAU,KA9EXjf,EAiFnBikE,iCAAmC,SAAAnjE,GAAU,IAAAwe,EACXtf,EAAKuf,MAA3BnY,EADiCkY,EACjClY,OAAQC,EADyBiY,EACzBjY,UADyB6c,EAEPlkB,EAAKmkB,MAA/BlF,EAFiCiF,EAEjCjF,SAAUilD,EAFuBhgD,EAEvBggD,YAEdjlD,IAEA7X,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UAC7C68D,EACAlkE,EAAKykB,SAAS,CAAEy/C,aAAa,GAAS,WAClC9qC,WAAW,WACPp5B,EAAKykB,SAAS,CAAEy/C,aAAa,KAC9B,KAGPlkE,EAAKykB,SAAS,CAAEy/C,aAAa,IAE1BA,GACPlkE,EAAKykB,SAAS,CAAEy/C,aAAa,MAlGlBlkE,EAsGnBo5D,8BAAgC,SAAAt4D,GAAU,IAAA2f,EACRzgB,EAAKuf,MAA3BnY,EAD8BqZ,EAC9BrZ,OAAQC,EADsBoZ,EACtBpZ,UACR4X,EAAane,EAAbme,SAEJ7X,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKykB,SAAS,CAAExF,WAAUilD,aAAa,KA3G5BlkE,EA+GnBmkE,sBAAwB,SAAArjE,GAAU,IACtB0F,EAAwB1F,EAAxB0F,QAAS6X,EAAevd,EAAfud,WADaiK,EAEAtoB,EAAKuf,MAA3BnY,EAFsBkhB,EAEtBlhB,OAAQC,EAFcihB,EAEdjhB,UAEZD,IAAWZ,GAAWa,IAAcgX,GACpCre,EAAKwhB,eApHMxhB,EAwHnBokE,qBAAuB,SAAAtjE,GAAU,IACrB0F,EAAwB1F,EAAxB0F,QAAS6X,EAAevd,EAAfud,WADYyK,EAEC9oB,EAAKuf,MAA3BnY,EAFqB0hB,EAErB1hB,OAAQC,EAFayhB,EAEbzhB,UAEZD,IAAWZ,GAAWa,IAAcgX,GACpCre,EAAKwhB,eA7HMxhB,EAiInBqkE,uBAAyB,SAAAvjE,GAAU,IACvB0F,EAAwB1F,EAAxB0F,QAAS6X,EAAevd,EAAfud,WADc4jB,EAEDjiC,EAAKuf,MAA3BnY,EAFuB66B,EAEvB76B,OAAQC,EAFe46B,EAEf56B,UAEhB,GAAID,IAAWZ,GACXa,IAAcgX,EAAlB,CAEA,IAAM3Z,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,GAAK3C,EAAL,CAR+B,IAUvBC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,cACD3E,EAAKwhB,kBAhJExhB,EAsJnBqkD,iBAAmB,SAAAn4C,GACfujB,aAASvjB,GAAQ,IAvJFlM,EA0JnBsjD,iBAAmB,SAAAl8C,GACf2rB,aAAS3rB,GAAQ,IA3JFpH,EA8JnBskE,gBAAkB,WACd,GAAKtkE,EAAKukE,YAEQp6D,OAAOm+B,eAAeuB,WACxC,CAJoB,IAAA/F,EAMU9jC,EAAKuf,MAA3BnY,EANY08B,EAMZ18B,OAAQC,EANIy8B,EAMJz8B,UAEV4X,GAAYpR,KAAaqR,cAAchc,IAA3B,UAAAkI,OAAyChE,EAAzC,eAAAgE,OAA6D/D,IAC/E4rB,aAAc7rB,EAAQC,EAAW4X,KAvKlBjf,EA0KnBwkE,gBAAkB,SAAAt6C,GACdA,EAAEvB,iBACFuB,EAAEtE,kBAFiB,IAAA6+C,EAIWzkE,EAAKuf,MAA3BnY,EAJWq9D,EAIXr9D,OAAQC,EAJGo9D,EAIHp9D,UAEV3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAEpBmW,YAAgBpW,GAEjCpF,KAAgBiH,aAAa,CACzBC,QAAS,oBACT9B,OAAQA,EACRC,UAAWA,IAKI3C,GAAWA,EAAQ02C,kBAEtCp5C,KAAgBiH,aAAa,CACzBC,QAAS,sBACTuxC,KAAM,CACFrzC,OAAQA,EACRsG,WAAY,CAACrG,OAlMVrH,EAwMnBwf,UAAY,SAAA/T,GACJA,IACAA,EAAMkd,iBACNld,EAAMma,mBAHO,IAAA8+C,EAMa1kE,EAAKuf,MAA3BnY,EANSs9D,EAMTt9D,OAAQC,EANCq9D,EAMDr9D,UAEhBmY,aAAUpY,EAAQC,IAhNHrH,EAmNnB2kE,mBAAqB,WACjB3kE,EAAKykB,SAAS,CAAEy/C,aAAa,KApNdlkE,EAuNnB4kE,gBAAkB,WACd5kE,EAAKukE,WAAY,GAxNFvkE,EA2NnB6kE,gBAAkB,WACd7kE,EAAKukE,WAAY,GA5NFvkE,EA+NnB8kE,eAAiB,WACb9kE,EAAK+kE,UAAW,GArNZ/kE,EAAKmkB,MAAQ,CACTlF,UAAU,EACVilD,aAAa,GAbNlkE,qFAkBG8kB,EAAWC,GAAW,IAAAigD,EACgC7kE,KAAKof,MAArE4B,EADgC6jD,EAChC7jD,MAAO/Z,EADyB49D,EACzB59D,OAAQC,EADiB29D,EACjB39D,UAAW49D,EADMD,EACNC,aAAcC,EADRF,EACQE,oBADRviC,EAEOxiC,KAAKgkB,MAA5CuD,EAFgCib,EAEhCjb,YAAazI,EAFmB0jB,EAEnB1jB,SAAUilD,EAFSvhC,EAETuhC,YAE/B,OAAIp/C,EAAU3D,QAAUA,IAIpB2D,EAAU1d,SAAWA,IAIrB0d,EAAUzd,YAAcA,IAIxByd,EAAUmgD,eAAiBA,IAI3BngD,EAAUogD,sBAAwBA,IAIlCngD,EAAU2C,cAAgBA,IAI1B3C,EAAU9F,WAAaA,GAIvB8F,EAAUm/C,cAAgBA,oDAQ9Br2D,KAAa4T,GAAG,iCAAkCthB,KAAK8jE,kCACvDp2D,KAAa4T,GAAG,8BAA+BthB,KAAKi5D,+BACpDvrD,KAAa4T,GAAG,6BAA8BthB,KAAK6jE,8BACnDn2D,KAAa4T,GAAG,uBAAwBthB,KAAKkkE,wBAC7Cx2D,KAAa4T,GAAG,sBAAuBthB,KAAKgkE,uBAC5Ct2D,KAAa4T,GAAG,qBAAsBthB,KAAKikE,qEAI3Cv2D,KAAa1L,eAAe,iCAAkChC,KAAK8jE,kCACnEp2D,KAAa1L,eAAe,8BAA+BhC,KAAKi5D,+BAChEvrD,KAAa1L,eAAe,6BAA8BhC,KAAK6jE,8BAC/Dn2D,KAAa1L,eAAe,uBAAwBhC,KAAKkkE,wBACzDx2D,KAAa1L,eAAe,sBAAuBhC,KAAKgkE,uBACxDt2D,KAAa1L,eAAe,qBAAsBhC,KAAKikE,uDA2JlD,IAAAe,EAC0DhlE,KAAKof,MAA5D7H,EADHytD,EACGztD,EAAGgJ,EADNykD,EACMzkD,QAAStZ,EADf+9D,EACe/9D,OAAQC,EADvB89D,EACuB99D,UAAW69D,EADlCC,EACkCD,oBADlCtiC,EAEqDziC,KAAKgkB,MAA/BlF,GAF3B2jB,EAEGlb,YAFHkb,EAEgBvf,KAFhBuf,EAEsBxf,IAFtBwf,EAE2B3jB,UAAUilD,EAFrCthC,EAEqCshC,YAEpCx/D,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAOmb,EAAAlf,EAAAmM,cAAA,8BALhB,IAOG0R,EAAwD9Z,EAAxD8Z,MAAOD,EAAiD7Z,EAAjD6Z,UAAW/M,EAAsC9M,EAAtC8M,oBAAqB8c,EAAiB5pB,EAAjB4pB,aAEzC1Q,EAAOiO,aAAQnnB,GACf0gE,EAAUr5C,aAAWrnB,GACrBgU,EAAOS,aAAQzU,GACfo7D,EAAW9zC,aAAYtnB,GACvB2gE,EAAQp5C,aAASvnB,EAASvE,KAAKqf,WACrCrf,KAAKmlE,OAASp4C,aAAUxoB,GACxB,IAAM6gE,EAAel4C,aAAgB3oB,GAE/BskD,EAAOuc,EACT1lD,EAAAlf,EAAAmM,cAACiT,GAAA,EAAD,CAAiB7T,OAAQq5D,EAAczqC,SAAU36B,KAAKkkD,mBAEtDxkC,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,EAAQ0zB,SAAU36B,KAAKmjD,mBAG9CkiB,EAAmB3kD,IACrB,UACAH,EAAQhc,QACR,CAAE+gE,mBAAoBxmD,GAHShf,OAAAsmB,EAAA,EAAAtmB,CAAA,GAI5BygB,EAAQglD,gBAAkBzmD,GAJEhf,OAAAsmB,EAAA,EAAAtmB,CAAA,GAM5BygB,EAAQilD,mBAAqBzB,IAAgBjlD,IAGpD,OACIY,EAAAlf,EAAAmM,cAAA,OACIgT,UAAW0lD,EACXI,YAAazlE,KAAK0kE,gBAClBgB,WAAY1lE,KAAK2kE,eACjBhgC,YAAa3kC,KAAKykE,gBAClB5kD,QAAS7f,KAAKmkE,gBACdwB,eAAgB3lE,KAAKwkE,oBACpBO,GAAuBrlD,EAAAlf,EAAAmM,cAACi5D,GAAD,MACxBlmD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAAA,KAAGgT,UAAU,wBACZkpC,EACDnpC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kBACTwO,GAAgBzO,EAAAlf,EAAAmM,cAACovB,GAAA,EAAD,CAAe90B,OAAQA,EAAQ2rB,UAAQ,EAAC7mB,OAAQq5D,EAAc91C,UAAQ,IACvFnB,GAAgBzO,EAAAlf,EAAAmM,cAACk5D,GAAD,CAASn5C,YAAayB,IACvCzO,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBACXD,EAAAlf,EAAAmM,cAAA,oBACC0R,EAAQ,GACLqB,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAA,KAAGgT,UAAU,uBACbD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,iBAAhB,OAEKtB,EAFL,cAOPD,EAAY,GAAKsB,EAAAlf,EAAAmM,cAAA,YAAO4K,EAAE,iBAAT,QAClBmI,EAAAlf,EAAAmM,cAACm5D,GAAD,CAAe7+D,OAAQA,EAAQC,UAAWA,IAC1CwY,EAAAlf,EAAAmM,cAAA,KAAGgT,UAAU,eAAeE,QAAS7f,KAAKqkE,iBACtC3kD,EAAAlf,EAAAmM,cAAA,QAAMgO,MAAOglD,GAAWpnD,MAInCyE,QAAQ3L,IAAwBqO,EAAAlf,EAAAmM,cAAC63B,GAAA,EAAD,CAAOv9B,OAAQA,EAAQC,UAAWmK,IAClE6zD,EACDxlD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgBlC,GAC9BwnD,GAAWvlD,EAAAlf,EAAAmM,cAACo5D,GAAD,CAAS9+D,OAAQA,EAAQC,UAAWA,EAAWmY,UAAWrf,KAAKqf,sBA1S7EU,cAuTP4G,GALCC,YACZ7F,IAtUW,SAAAC,GAAK,MAAK,CACrBzc,QAAS,CACLsiB,gBAAiB,eAErBm/C,mBAAoB,CAChBjkD,MAAOf,EAAM0d,QAAQC,QAAQC,MAEjC2mC,gBAAiB,CACb1+C,gBAAiB7F,EAAM0d,QAAQC,QAAQC,KAAO,MAElDqnC,yBAA0B,CACtB/hD,KAAM,CAAE2C,gBAAiB7F,EAAM0d,QAAQC,QAAQC,KAAO,MACtDza,GAAI,CAAE0C,gBAAiB,gBAE3B2+C,mBAAoB,CAChB/gE,UAAW,6BAuTI,CAAE0iB,WAAW,IAChCC,cAGWT,CAAQi9C,IC7URsC,WArBY,SAAA7lE,GAAe,IAAZmS,EAAYnS,EAAZmS,MACpB2zD,EAAU,GAAAl7D,OAAM,GAAuB,GAAlBuZ,KAAK4hD,IAAI5zD,GAApB,KACV6zD,EAAS,GAAAp7D,OAAM,GAAuB,GAAlBuZ,KAAK8hD,IAAI9zD,GAApB,KAEf,OACIkN,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,+BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,mCACfD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,+BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,4BAA4B/S,MAAO,CAAE6C,MAAO02D,KAC3DzmD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,2BAA2B/S,MAAO,CAAE6C,MAAO42D,oBCcxEE,uBACF,SAAAA,EAAYnnD,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAumE,IACf1mE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAymE,GAAApmE,KAAAH,KAAMof,KA2CVonD,0BAA4B,SAAA7lE,GAAU,IAC1B0F,EAA+B1F,EAA/B0F,QAASogE,EAAsB9lE,EAAtB8lE,kBACE5mE,EAAKuf,MAAhBnY,SAEOZ,GAEfxG,EAAKykB,SAAS,CAAEpd,UAAWu/D,KAlDZ5mE,EAqDnB05C,YAAc,WAAM,IACRtyC,EAAWpH,EAAKuf,MAAhBnY,OACAC,EAAcrH,EAAKmkB,MAAnB9c,UAEHD,IACAC,IAEWwG,KAAaxK,IAAI+D,EAAQC,IAGzCrF,KAAgBiJ,KAAK,CACjB/B,QAAS,aACT1C,QAASY,EACTiX,WAAYhX,IAEXkE,KAAK,SAAAhB,GACFsD,KAAazM,IAAImJ,GACjBvK,EAAKwhB,gBAER1X,MAAM,SAAA/F,GACH,IAAMqb,EAAiB,CACnBlW,QAAS,iBACT1C,QAASY,EACTtE,GAAIuE,EACJ1C,QAAS,MAEbkJ,KAAazM,IAAIge,GACjBpf,EAAKwhB,mBAhFExhB,EA2GnB0lB,YAAc,SAAAja,GAAS,IACXrE,EAAWpH,EAAKuf,MAAhBnY,OACAC,EAAcrH,EAAKmkB,MAAnB9c,UAEHA,GAEL0rB,aAAS3rB,EAAQC,IAjHFrH,EAoHnBqpC,aAAe,SAAA59B,GACXA,EAAMkd,iBACNld,EAAMma,kBAEN5lB,EAAKykB,SAAS,CAAEpd,UAAW,QArH3B,IAAMlD,EAAO6O,IAAU3P,IAAIkc,EAAMnY,QAHlB,OAIfpH,EAAKmkB,MAAQ,CACT+nC,gBAAiB3sC,EAAMnY,OACvBC,UAAWlD,GAAQA,EAAKyiE,kBAAoBziE,EAAKyiE,kBAAoB,GAN1D5mE,kFA0BAklB,EAAWC,EAAWC,GAAU,IACvC/d,EAAclH,KAAKgkB,MAAnB9c,UAEJA,GAAa8d,EAAU9d,YAAcA,GACrClH,KAAKu5C,0DAKTv5C,KAAKu5C,cAEL1mC,IAAUyO,GAAG,0BAA2BthB,KAAKwmE,0EAI7C3zD,IAAU7Q,eAAe,0BAA2BhC,KAAKwmE,yEA2CvC7hD,EAAWC,EAAWC,GAAa,IAAA1F,EACxBnf,KAAKof,MAA1BnY,EAD6CkY,EAC7ClY,OAAQsQ,EADqC4H,EACrC5H,EAAGyJ,EADkC7B,EAClC6B,MACX9Z,EAAclH,KAAKgkB,MAAnB9c,UAER,OAAIyd,EAAUpN,IAAMA,IAIhBoN,EAAU3D,QAAUA,IAIpB2D,EAAU1d,SAAWA,GAIrB2d,EAAU1d,YAAcA,qCAuBvB,IAAAoZ,EAC0BtgB,KAAKof,MAA5BnY,EADHqZ,EACGrZ,OAAQsZ,EADXD,EACWC,QAAShJ,EADpB+I,EACoB/I,EACjBrQ,EAAclH,KAAKgkB,MAAnB9c,UAEF3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAEzC,IAAK3C,EAAS,OAAO,KAErB,IAAIC,EAAWD,EAAyBkT,aAAWlT,EAASgT,GAAnCA,EAAE,WACrBrR,EAAYwpB,aAAkBzoB,EAAQC,GAM5C,OAJIuoB,aAAiBlrB,KACjBC,EAAU+S,EAAE,mBAIZmI,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,iBAAkBH,EAAQ4d,cAAe5d,EAAQ8F,aACvExG,QAAS7f,KAAKulB,aACd7F,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,0BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,eAAgBH,EAAQI,yBAClDza,GAAawZ,EAAAlf,EAAAmM,cAACm4B,GAAA,EAAD,CAAW79B,OAAQA,EAAQC,UAAWA,EAAWhB,UAAWA,IAC1EwZ,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,0BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,sBAAuBH,EAAQK,kBACrDrJ,EAAE,kBAEPmI,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,0BAA0Bnb,IAE7Ckb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gCACXD,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CAAYmf,UAAWY,EAAQsmB,WAAYhnB,QAAS7f,KAAKkpC,cACrDxpB,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,6DA/IQ4e,EAAO4E,GAAO,IAClC+nC,EAAoB/nC,EAApB+nC,gBACA9kD,EAAWmY,EAAXnY,OAER,GAAI8kD,IAAoB9kD,EAAQ,CAC5B,IAAMjD,EAAO6O,IAAU3P,IAAI+D,GAE3B,MAAO,CACH8kD,gBAAiB9kD,EACjBC,UAAWlD,GAAQA,EAAKyiE,kBAAoBziE,EAAKyiE,kBAAoB,GAI7E,OAAO,YAxBa3mD,IAAMC,YA4KnB4G,GALCC,YACZ7F,IApLW,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,GACbohB,aAAaF,GACbkG,aAAYlG,GAFC,CAGhB6lB,WAAY,GAGZ1I,cAAe,CACXhF,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQvF,WAAW0e,QAAU,UAC/E91B,MAAOf,EAAM0d,QAAQjhB,KAAKkhB,YA4KX,CAAExX,WAAW,IAChCC,cAGWT,CAAQ4/C,cC/LjBG,WAAiB,CACnBj3D,MAAO,GACPE,OAAQ,GACRkvB,aAAc,MACd/X,OAAQ,wBAaN6/C,eACF,SAAAA,EAAYvnD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA2mE,IACf9mE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA6mE,GAAAxmE,KAAAH,KAAMof,KAkDV0kD,iCAAmC,SAAAnjE,GAAU,IAAAwe,EACXtf,EAAKuf,MAA3BnY,EADiCkY,EACjClY,OAAQC,EADyBiY,EACzBjY,UADyB6c,EAEPlkB,EAAKmkB,MAA/BlF,EAFiCiF,EAEjCjF,SAAUilD,EAFuBhgD,EAEvBggD,YAEdjlD,IAEA7X,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UAC7C68D,EACAlkE,EAAKykB,SAAS,CAAEy/C,aAAa,GAAS,WAClC9qC,WAAW,WACPp5B,EAAKykB,SAAS,CAAEy/C,aAAa,KAC9B,KAGPlkE,EAAKykB,SAAS,CAAEy/C,aAAa,IAE1BA,GACPlkE,EAAKykB,SAAS,CAAEy/C,aAAa,MApElBlkE,EAwEnB2kE,mBAAqB,WACjB3kE,EAAKykB,SAAS,CAAEy/C,aAAa,KAzEdlkE,EA4EnBwf,UAAY,SAAA/T,GACJA,IACAA,EAAMkd,iBACNld,EAAMma,mBAHO,IAAAnF,EAMazgB,EAAKuf,MAA3BnY,EANSqZ,EAMTrZ,OAAQC,EANCoZ,EAMDpZ,UAEhBmY,aAAUpY,EAAQC,IA1EdrH,EAAKmkB,MAAQ,CACT+/C,aAAa,GAXNlkE,qFAgBG8kB,EAAWC,GAAW,IAAA+D,EACyB3oB,KAAKof,MAA9DnY,EADgC0hB,EAChC1hB,OAAQC,EADwByhB,EACxBzhB,UAAW49D,EADan8C,EACbm8C,aAAcC,EADDp8C,EACCo8C,oBACjChB,EAAgB/jE,KAAKgkB,MAArB+/C,YAER,OAAIp/C,EAAU1d,SAAWA,IAIrB0d,EAAUzd,YAAcA,IAIxByd,EAAUmgD,eAAiBA,IAI3BngD,EAAUogD,sBAAwBA,GAIlCngD,EAAUm/C,cAAgBA,iDAQ9Br2D,KAAa4T,GAAG,iCAAkCthB,KAAK8jE,iFAIvDp2D,KAAa1L,eAAe,iCAAkChC,KAAK8jE,mEAuC9D,IAAAhiC,EACuD9hC,KAAKof,MAAzDmB,EADHuhB,EACGvhB,QAAStZ,EADZ66B,EACY76B,OAAQC,EADpB46B,EACoB56B,UAAW69D,EAD/BjjC,EAC+BijC,oBAC5BhB,EAAgB/jE,KAAKgkB,MAArB+/C,YAEFx/D,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAOmb,EAAAlf,EAAAmM,cAAA,sCALhB,IAOGnI,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAOkb,EAAAlf,EAAAmM,cAAA,sCARhB,IAUG9H,EAAUL,EAAVK,MAEF4Y,EAAO+P,aAAyBjpB,GAAS,GAEzC8gE,EAAmB3kD,IAAW,kBAAD5gB,OAAAsmB,EAAA,EAAAtmB,CAAA,GAAuBygB,EAAQilD,mBAAqBzB,IAEvF,OACIrkD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAW0lD,EAAkBM,eAAgB3lE,KAAKwkE,oBAClDO,GAAuBrlD,EAAAlf,EAAAmM,cAACi5D,GAAD,MACxBlmD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,2BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,2BAA2BlC,IAE7C5Y,GACG6a,EAAAlf,EAAAmM,cAAC+2D,GAAA,EAAD,CACIz8D,OAAQA,EACRC,UAAWA,EACXrC,MAAOA,EACP+H,MAAO85D,GACPrnD,UAAWrf,KAAKqf,oBApHXS,IAAMC,WA4HpBgB,OAtIA,SAAAC,GAAK,MAAK,CACrBilD,yBAA0B,CACtB/hD,KAAM,CAAE2C,gBAAiB7F,EAAM0d,QAAQC,QAAQC,KAAO,MACtDza,GAAI,CAAE0C,gBAAiB,gBAE3B2+C,mBAAoB,CAChB/gE,UAAW,6BAgIe,CAAE0iB,WAAW,GAAhCpG,CAAwC4lD,wBClIjDC,uBACF,SAAAA,EAAYxnD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA4mE,IACf/mE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA8mE,GAAAzmE,KAAAH,KAAMof,KAuBVynD,iCAAmC,SAAAlmE,GAAU,IACjC46B,EAAS56B,EAAT46B,KACMurC,EAAgBjnE,EAAKmkB,MAA3BuX,KAER,IAAIurC,GAAevrC,EAAKlK,YAAcy1C,EAAYz1C,UAAlD,CAEAxxB,EAAKykB,SAAS,CACViX,KAAMP,KAAaO,KACnBt4B,MAAOpD,EAAKknE,SAAS/rC,KAAaO,QAGtC,IAAM57B,EAAQC,IAAUwD,WAChB8Q,EAAaqnB,EAAbrnB,SACRD,YAAoBtU,EAAOuU,EAASA,YArCrBrU,EAwCnBmnE,gCAAkC,SAAArmE,GAAU,IAChC46B,EAAS56B,EAAT46B,KAUR,GARA17B,EAAKykB,SAAS,CACViX,OACAt4B,MAAOpD,EAAKknE,SAASxrC,GACrB0rC,iBAAkB,EAClBC,aAAa,EACbC,YAAY,IAGX5rC,EAAL,CAEA,IAAM57B,EAAQC,IAAUwD,WAChB8Q,EAAaqnB,EAAbrnB,SACRD,YAAoBtU,EAAOuU,EAASA,YAvDrBrU,EA0DnBmuC,WAAa,SAAA3oC,GACcxF,EAAKmkB,MAApBmjD,YAEH9hE,GAELxD,KAAgBiH,aAAa,CACzBC,QAAS,0BACT1D,aAjEWxF,EAqEnBunE,mBAAqB,SAAAC,GAAa,IACtBpkE,EAAUpD,EAAKmkB,MAAf/gB,MAEFoC,EAAUpC,EAAMw9C,KAAK,SAAA/0C,GAAC,OAAIA,EAAErG,QAAQ1C,KAAO0kE,IACjD,GAAKhiE,EAAL,CAEA,IAAM1F,EAAQC,IAAUwD,WACxBiN,YAAmB1Q,EAAO0F,EAAS,MAEnC,IAAImwB,EAAiB,EACjB31B,EAAKynE,UAAYznE,EAAKynE,SAASh6C,UAC/BkI,EAAiBhR,KAAKC,MAAM5kB,EAAKynE,SAASh6C,QAAQi6C,YAAcC,MAG5C3nE,EAAK4nE,oBAAoBJ,EAAWpkE,EAAOuyB,GACnDnyB,QAAQ,SAAAqI,GACpB2E,YAAmB1Q,EAAO+L,EAAG,UArFlB7L,EAyFnB4nE,oBAAsB,SAACJ,EAAWnzD,EAAUshB,GACxC,IAAKthB,EAAU,MAAO,GAEtB,IAAMwzD,EAAU,GACVl1D,EAAQ0B,EAASsd,UAAU,SAAA9lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAO0kE,IACvD,IAAe,IAAX70D,EAAc,MAAO,GAEzB,IAAMyjB,EAAMzR,KAAKC,MAAMjS,EAAQgjB,GACzBU,EAAS1jB,EAAQgjB,EAEjBY,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EA6B5B,OA3BIE,GAAW,IACPG,GAAc,GACdmxC,EAAQj+D,KAAK+rB,EAAiBY,EAAUG,GAE5CmxC,EAAQj+D,KAAK+rB,EAAiBY,EAAUF,GACpCM,EAAahB,GACbkyC,EAAQj+D,KAAK+rB,EAAiBY,EAAUI,IAI5CD,GAAc,GACdmxC,EAAQj+D,KAAK+rB,EAAiBS,EAAMM,GAEpCC,EAAahB,GACbkyC,EAAQj+D,KAAK+rB,EAAiBS,EAAMO,GAGpCH,EAAU7R,KAAKqR,KAAK3hB,EAASjO,OAASuvB,KAClCe,GAAc,GACdmxC,EAAQj+D,KAAK+rB,EAAiBa,EAAUE,GAE5CmxC,EAAQj+D,KAAK+rB,EAAiBa,EAAUH,GACpCM,EAAahB,GACbkyC,EAAQj+D,KAAK+rB,EAAiBa,EAAUG,IAIzCkxC,EAAQj6D,IAAI,SAAA1H,GAAC,OAAImO,EAASnO,MAnIlBlG,EAsInB6kE,gBAAkB,SAAAp5D,GACd,IAAM+7D,EAAY70C,OAAOlnB,EAAMC,OAAO89B,QAAQg+B,WACzCA,GAEAxnE,EAAKukE,YAENvkE,EAAK8nE,qBAAuBN,IAC5BxnE,EAAK8nE,mBAAqB,MAE9B9nE,EAAKykB,SAAS,CAAE2iD,iBAAkBI,IAClCxnE,EAAKunE,mBAAmBC,KAhJTxnE,EAmJnB4kE,gBAAkB,SAAAn5D,GACd,IAAM+7D,EAAY70C,OAAOlnB,EAAMC,OAAO89B,QAAQg+B,WAC9C,GAAKA,EAAL,CAEAxnE,EAAK8nE,mBAAqBN,EAC1B,IAAMzuD,EAAMJ,KAAKI,MAiBjB,OAfA/Y,EAAKykB,SAAS,CAAE2iD,iBAAkBI,EAAWh2C,UAAWzY,EAAKsuD,aAAa,EAAOC,YAAY,IAC7FluC,WAAW,WACep5B,EAAKmkB,MAAnBqN,YACUzY,GACd/Y,EAAKykB,SAAS,CAAE4iD,aAAa,EAAMC,YAAY,KAEpD,KAEHtnE,EAAKunE,mBAAmBC,GAExBxnE,EAAKukE,WAAY,EACjBr/D,SAAS6iE,iBAAiB,UAAW/nE,EAAKgoE,eAE1Cv8D,EAAMkd,iBACNld,EAAMma,mBACC,IAzKQ5lB,EA4KnBgoE,cAAgB,WACZhoE,EAAKykB,SAAS,CAAE2iD,iBAAkB,EAAG51C,UAAW,EAAG61C,aAAa,IAChErnE,EAAKukE,WAAY,EACjBr/D,SAAS+iE,oBAAoB,UAAWjoE,EAAKgoE,gBA/K9BhoE,EAkLnBknE,SAAW,SAAAxrC,GACP,IAAMt4B,EAAQ,GACd,IAAKs4B,EAAM,OAAOt4B,EAElB,IAAM8kE,EAAO,IAAI1+D,IACT6K,EAA4BqnB,EAA5BrnB,SAAUsnB,EAAkBD,EAAlBC,cAgBlB,OAfItnB,GACAA,EAASA,SAAS7Q,QAAQ,SAAAqI,GACtBzI,EAAMwG,KAAKiC,GACXq8D,EAAK9mE,IAAIyK,EAAErG,QAAQ1C,GAAI+I,EAAErG,QAAQ1C,MAGrC64B,GACAA,EAActnB,SAAS7Q,QAAQ,SAAAqI,GACtBq8D,EAAKhlE,IAAI2I,EAAErG,QAAQ1C,MACpBM,EAAMwG,KAAKiC,GACXq8D,EAAK9mE,IAAIyK,EAAErG,QAAQ1C,GAAI+I,EAAErG,QAAQ1C,OAKtCM,GApMPpD,EAAKynE,SAAWxnD,IAAMggB,YAEtBjgC,EAAKmkB,MAAQ,CACTuX,KAAM,KACNt4B,MAAO,GACPgkE,iBAAkB,EAClBC,aAAa,EACbC,YAAY,GAVDtnE,mFAefm7B,KAAa1Z,GAAG,gCAAiCthB,KAAKgnE,iCACtDhsC,KAAa1Z,GAAG,iCAAkCthB,KAAK6mE,iFAIvD7rC,KAAah5B,eAAe,gCAAiChC,KAAKgnE,iCAClEhsC,KAAah5B,eAAe,iCAAkChC,KAAK6mE,mEAqL9D,IAAAp8D,EAAAzK,KACGugB,EAAYvgB,KAAKof,MAAjBmB,QADHwD,EAEkD/jB,KAAKgkB,MAApDuX,EAFHxX,EAEGwX,KAAMt4B,EAFT8gB,EAES9gB,MAAOgkE,EAFhBljD,EAEgBkjD,iBAAkBC,EAFlCnjD,EAEkCmjD,YACvC,IAAK3rC,EAAM,OAAO,KAClB,IAAKt4B,EAAO,OAAO,KACnB,IAAKA,EAAMgD,OAAQ,OAAO,KAE1B,IAAM+5D,EAAW/8D,EAAMwK,IAAI,SAAA/B,GAAC,OACxBgU,EAAAlf,EAAAmM,cAAA,OACIgT,UAAU,0BACVnI,IAAK9L,EAAErG,QAAQ1C,GACfqlE,kBAAiBt8D,EAAErG,QAAQ1C,GAC3BiK,MAAO,CAAE6C,MAAO+3D,IAA2B73D,OAAQ63D,KACnD3nD,QAAS,kBAAMpV,EAAKujC,WAAWtiC,KAC/BgU,EAAAlf,EAAAmM,cAACyf,GAAA,EAAD,CACI5U,IAAK9L,EAAErG,QAAQ1C,GACfgd,UAAU,kCACV+Z,SAAO,EACPr0B,QAASqG,EACTuU,YAAagoD,IACbxuC,MAAM,OAKZ9D,EAAe1yB,EAAMuuB,UAAU,SAAA9lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAOskE,IACrD5hE,GAA4B,IAAlBswB,EAAsB1yB,EAAM0yB,GAAgB,KAE5D,OACIjW,EAAAlf,EAAAmM,cAAA,OACIwzB,IAAKngC,KAAKsnE,SACV3nD,UAAWe,IAAW,gBAAiBH,EAAQ8F,YAAa9F,EAAQgC,MACpEkjD,YAAazlE,KAAK0kE,gBAClB//B,YAAa3kC,KAAKykE,iBACjBzE,EACAhjD,QAAQ3X,IAAY6hE,GAAexnD,EAAAlf,EAAAmM,cAAC8zB,GAAA,EAAD,CAAgBp7B,QAASA,YA9OlDya,IAAMC,YAoPlBgB,OA3PA,SAAAC,GAAK,OAAAlhB,OAAAmhB,EAAA,EAAAnhB,CAAA,CAChByiB,KAAM,CACF4W,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQvF,WAAW0e,QAAU,YAEhF3wB,aAAYlG,KAuPJD,CAAmB6lD,IC/O5BsB,WAAqBpoE,OAAOgwB,OAAO,CACrCC,KAAM,OACNo4C,iBAAkB,mBAClBC,iBAAkB,mBAClBC,kBAAmB,oBACnBC,qBAAsB,0BASpBC,eACF,SAAAA,EAAYnpD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAuoE,IACf1oE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAyoE,GAAApoE,KAAAH,KAAMof,KA6JVyiB,0BAA4B,SAAAlhC,GACxB,IAAM07B,EAAOx8B,EAAK4rD,QAAQn+B,QAEpBk7C,EAAmBnsC,EAAKgoB,aACxBokB,EAAgBpsC,EAAKiM,UAC3BzoC,EAAKykB,SAAS,CAAEokD,cAAc,GAAQ,WAC9BrsC,EAAKiM,YAAcmgC,IACnBpsC,EAAKiM,WAAa9jB,KAAKqW,IAAI2tC,EAAmBnsC,EAAKgoB,kBArK5CxkD,EA0KnB8oE,0BAA4B,SAAAC,GACxB,IAAMvsC,EAAOx8B,EAAK4rD,QAAQn+B,QAE1BztB,EAAK2oE,iBAAmBnsC,EAAKgoB,aAC7BxkD,EAAK4oE,cAAgBpsC,EAAKiM,WA9KXzoC,EAiLnB4hC,uBAAyB,SAAAmnC,GACrB,IAAMvsC,EAAOx8B,EAAK4rD,QAAQn+B,QAK1BztB,EAAKykB,SAAS,CAAEokD,cAAc,GAAS,WAC/BrsC,EAAKiM,YAAczoC,EAAK4oE,gBACxBpsC,EAAKiM,WAAa9jB,KAAKqW,IAAIh7B,EAAK2oE,iBAAmBnsC,EAAKgoB,kBAzLjDxkD,EA8LnBgpE,wBAA0B,SAAAloE,GACtBd,EAAKykB,SAAS,CACVwkD,gBAAiBp7D,KAAaqR,cAAc7S,KAAO,EACnD68D,eAAgBb,GAAmBI,wBAjMxBzoE,EAqMnBqxD,2BAA6B,SAAAvwD,GACNd,EAAKuf,MAAhBnY,SAEOtG,EAAOsG,QAClBpH,EAAKykB,SAAS,CAAE66B,aAAcx+C,EAAOo4B,cAzM1Bl5B,EA6MnBqkE,uBAAyB,SAAAvjE,GAAU,IACvBsG,EAAWpH,EAAKuf,MAAhBnY,OACAwL,EAAY5S,EAAKmkB,MAAjBvR,QACApM,EAAwB1F,EAAxB0F,QAAS6X,EAAevd,EAAfud,WAEjB,GAAIjX,IAAWZ,IAEsC,IAAjDoM,EAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOub,IAAoB,CACpD,IAAM3Z,EAAUmJ,KAAaxK,IAAImD,EAAS6X,GAC1C,IAAK3Z,EAAS,OAEd,IAAM5E,EAAQC,IAAUwD,WACxB6N,YAAoBtR,EAAO,CAAC4E,MAzNjB1E,EA6NnBmpE,wBAA0B,SAAAroE,GACHd,EAAKuf,MAAhBnY,OACOtG,EAAO0F,SA/NPxG,EAkOnBopE,6BAA+B,SAAAtoE,GAAU,IAC7B4D,EAA4B5D,EAA5B4D,QAASma,EAAmB/d,EAAnB+d,eAEjB,GADmB7e,EAAKuf,MAAhBnY,SACO1C,EAAQ8B,QAAvB,CAEA,IAAI6iE,GAAsB,EAE1B,OADoB3kE,EAAZC,QACQ,UACZ,IAAK,cACD0kE,GAAsB,EAK9B,GAAKA,EAAL,CAEA,IAAIH,EAAiBb,GAAmBn4C,KAClCsM,EAAOx8B,EAAK4rD,QAAQn+B,QAEtB+O,EAAKiM,YAAcjM,EAAKkM,aAAelM,EAAKgoB,aAC5C0kB,EAAiBb,GAAmBC,iBAG/B5jE,EAAQyoB,cACb+7C,EAAiBb,GAAmBC,kBAGxCxkE,QAAQ4F,IAAI,mEAAqEw/D,GACjFlpE,EAAKspE,eAAezqD,EAAgBna,EAASwkE,GAC7C,IAAMppE,EAAQC,IAAUwD,WACxB6N,YAAoBtR,EAAO,CAAC4E,IAC5BgkE,EAAaa,aAAa,CAAC7kE,OAjQZ1E,EAoQnBwpE,mBAAqB,SAAA1oE,GACjB,GAAKd,EAAKypE,UAAV,CAD2B,IAGnB/kE,EAAY5D,EAAZ4D,QAER,GADmB1E,EAAKuf,MAAhBnY,SACO1C,EAAQ8B,QAAvB,CAEA,IAAI0iE,EAAiBb,GAAmBn4C,KAClCsM,EAAOx8B,EAAK4rD,QAAQn+B,QAEtB+O,EAAKiM,YAAcjM,EAAKkM,aAAelM,EAAKgoB,aAC5C0kB,EAAiBb,GAAmBC,iBAG/B5jE,EAAQyoB,cACb+7C,EAAiBb,GAAmBC,kBAGxC,IAAM11D,EAAU,CAAClO,GAEjBZ,QAAQ4F,IAAI,yDAA2Dw/D,GACvElpE,EAAK0pE,YAAY1pE,EAAKstB,eAAe1a,GAAUs2D,GAC/C,IAAMppE,EAAQC,IAAUwD,WACxB6N,YAAoBtR,EAAO8S,GAC3B81D,EAAaa,aAAa32D,MA5RX5S,EA+RnB2pE,uBAAyB,SAAA7oE,GACFd,EAAKuf,MAAhBnY,SACOtG,EAAO0F,SAEjB1F,EAAO8oE,cAEZ5pE,EAAK6pE,cAAc/oE,EAAOkL,cArSXhM,EAwSnB8pE,kBAAoB,WAChB,GAAK9pE,EAAK2N,SAAV,CAIA,IAFA,IAAMA,EAAW,IAAInE,IACfpG,EAAQ2mE,aAAY/pE,EAAK4rD,QAAS5rD,EAAKgqE,UACpC9jE,EAAI,EAAGA,EAAI9C,EAAMgD,OAAQF,IAAK,CACnC,IAAMxB,EAAU1E,EAAK2N,SAASvK,EAAM8C,IACpC,GAAIxB,EAAS,KAAAulE,EACqBvlE,EAAQ6a,MAA9BnY,EADC6iE,EACD7iE,OAAQC,EADP4iE,EACO5iE,UACVsQ,EAAG,GAAAvM,OAAMhE,EAAN,KAAAgE,OAAgB/D,GACzBsG,EAASvM,IAAIuW,EAAKA,IAI1B3V,KAAgBiH,aAAa,CACzBC,QAAS,6BACTyE,SAAUA,MAxTC3N,EAmfnBkqE,sBAnfmB,eAAA1pE,EAAAP,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAmfK,SAAAC,EAAM0J,GAAN,IAAA4/D,EAAAC,EAAAlkE,EAAA,OAAAkpB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACdipE,EAAiB,EACnBC,EAAa7/D,GAAUA,EAAOoD,SAASvH,OAAS,GAAKmE,EAAOoD,SAASvH,OAASikE,IAEzEnkE,EAAI,EAJO,YAIJA,EAAIikE,GAAkBC,GAJlB,CAAAppE,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKDlB,EAAKizD,aALJ,OAKhB1oD,EALgBvJ,EAAAmK,KAMhBi/D,EAAa7/D,GAAUA,EAAOoD,SAASvH,OAAS,GAAKmE,EAAOoD,SAASvH,OAASikE,IAN9D,OAI8BnkE,IAJ9BlF,EAAAE,KAAA,iCAAAF,EAAAU,SAAAb,MAnfL,gBAAAc,GAAA,OAAAnB,EAAAoB,MAAAzB,KAAA0B,YAAA,GAAA7B,EA6fnBizD,WA7fmBhzD,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KA6fN,SAAAyB,IAAA,IAAA+E,EAAAkjE,EAAAtgB,EAAAz/C,EAAAzK,EAAA,OAAAsvB,EAAAzuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UACDkG,EAAWpH,EAAKuf,MAAhBnY,OADC,CAAA9E,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,qBAILxB,EAAKgsD,QAJA,CAAA1pD,EAAApB,KAAA,eAAAoB,EAAAd,OAAA,qBAMLxB,EAAKuqE,oBANA,CAAAjoE,EAAApB,KAAA,eAOLlB,EAAKwqE,wBAPAloE,EAAAd,OAAA,wBAWL8oE,EAAgB,EAChBtqE,EAAKmkB,MAAMvR,SAAW5S,EAAKmkB,MAAMvR,QAAQxM,OAAS,IAClDkkE,EAAgBtqE,EAAKmkB,MAAMvR,QAAQ,GAAG9P,IAG1C9C,EAAKgsD,SAAU,EAEThC,EAAYhqD,EAAKgqD,UAlBd1nD,EAAArB,KAAA,GAAAqB,EAAApB,KAAA,GAsBUc,KAAgBiJ,KAAK,CAChC/B,QAAS,iBACT1C,QAASY,EACTmrB,gBAAiB+3C,EACjBj/C,OAAQ,EACRmH,MAAO63C,MA3BN,eAsBL9/D,EAtBKjI,EAAA6I,KA8BCrL,EAAQC,IAAUwD,WA9BnBjB,EAAApB,KAAA,GA+BC8yD,aAAa5iD,YAAoBtR,EAAOyK,EAAOoD,UAAWsmD,KA/B3D,eAAA3xD,EAAArB,KAAA,GAiCLjB,EAAKgsD,SAAU,EAjCV1pD,EAAA48C,OAAA,eAoCL8K,IAAchqD,EAAKgqD,UApCd,CAAA1nD,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,qBAwCLxB,EAAKuf,MAAMnY,SAAWA,EAxCjB,CAAA9E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,yBA6CTqM,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASwwD,UAChBn+D,EAAKyqE,aAAazqE,EAAKstB,eAAe/iB,EAAOoD,UAAW,WAC/CpD,EAAOoD,SAASvH,QACjBpG,EAAKwqE,0BAGb9B,EAAaa,aAAah/D,EAAOoD,UApDxBrL,EAAAd,OAAA,SAsDF+I,GAtDE,yBAAAjI,EAAAZ,SAAAW,EAAA,uBA7fMrC,EAsjBnBstB,eAAiB,SAAA3f,GACb,OAAOA,EAAS7B,OAAO,SAAAD,GAAC,MAA2B,yBAAvBA,EAAElH,QAAQ,YAvjBvB3E,EA0jBnBwqE,sBA1jBmBvqE,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KA0jBK,SAAAwqD,IAAA,IAAAhkD,EAAAwV,EAAAtC,EAAAowD,EAAAJ,EAAAtgB,EAAAz/C,EAAAzK,EAAA,OAAAsvB,EAAAzuB,EAAAI,KAAA,SAAAsqD,GAAA,cAAAA,EAAApqD,KAAAoqD,EAAAnqD,MAAA,UACZkG,EAAWpH,EAAKuf,MAAhBnY,OADY,CAAAikD,EAAAnqD,KAAA,eAAAmqD,EAAA7pD,OAAA,qBAIhBxB,EAAKgsD,QAJW,CAAAX,EAAAnqD,KAAA,eAAAmqD,EAAA7pD,OAAA,oBAMdob,EAAeF,YAAgBtV,GANjB,CAAAikD,EAAAnqD,KAAA,eAAAmqD,EAAA7pD,OAAA,oBASd8Y,EAAWH,KAAgBI,YAAYqC,GATzB,CAAAyuC,EAAAnqD,KAAA,gBAAAmqD,EAAA7pD,OAAA,qBAWf8Y,EAASqwD,6BAXM,CAAAtf,EAAAnqD,KAAA,gBAAAmqD,EAAA7pD,OAAA,yBAapBxB,EAAKuqE,qBAAsB,EAbPlf,EAAAnqD,KAAA,GAeSc,KAAgBiJ,KAAK,CAC9C/B,QAAS,uBACTwQ,eAAgBY,EAASqwD,+BAjBT,WAedD,EAfcrf,EAAAlgD,KAAA,CAAAkgD,EAAAnqD,KAAA,gBAAAmqD,EAAA7pD,OAAA,yBAsBhB8oE,EAAgB,EAEhBtqE,EAAKmkB,MAAMvR,SACX5S,EAAKmkB,MAAMvR,QAAQxM,OAAS,GAC5BpG,EAAKmkB,MAAMvR,QAAQ,GAAGpM,UAAYkkE,EAAe5nE,KAEjDwnE,EAAgBtqE,EAAKmkB,MAAMvR,QAAQ,GAAG9P,IAG1C9C,EAAKgsD,SAAU,EAEThC,EAAYhqD,EAAKgqD,UAjCHqB,EAAApqD,KAAA,GAAAoqD,EAAAnqD,KAAA,GAqCDc,KAAgBiJ,KAAK,CAChC/B,QAAS,iBACT1C,QAASkkE,EAAe5nE,GACxByvB,gBAAiB+3C,EACjBj/C,OAAQ,EACRmH,MAAO63C,MA1CK,eAqChB9/D,EArCgB8gD,EAAAlgD,KA6CVrL,EAAQC,IAAUwD,WA7CR8nD,EAAAnqD,KAAA,GA8CV8yD,aAAa5iD,YAAoBtR,EAAOyK,EAAOoD,UAAWsmD,KA9ChD,eAAA5I,EAAApqD,KAAA,GAgDhBjB,EAAKgsD,SAAU,EAhDCX,EAAAnM,OAAA,eAmDhB8K,IAAchqD,EAAKgqD,UAnDH,CAAAqB,EAAAnqD,KAAA,gBAAAmqD,EAAA7pD,OAAA,qBAuDhBxB,EAAKuf,MAAMnY,SAAWA,EAvDN,CAAAikD,EAAAnqD,KAAA,gBAAAmqD,EAAA7pD,OAAA,kBA4DpBqM,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASwwD,UAChBn+D,EAAKyqE,aAAazqE,EAAKstB,eAAe/iB,EAAOoD,WAC7C+6D,EAAaa,aAAah/D,EAAOoD,UA/Db,yBAAA09C,EAAA3pD,SAAA0pD,EAAA,uBA1jBLprD,EA4nBnB6rD,eA5nBmB5rD,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KA4nBF,SAAAkK,IAAA,IAAA1D,EAAAjD,EAAAmmE,EAAAtgB,EAAAz/C,EAAAzK,EAAA,OAAAsvB,EAAAzuB,EAAAI,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,UACLkG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAFd,CAAA4D,EAAA9J,KAAA,eAAA8J,EAAAxJ,OAAA,qBAKTxB,EAAKgsD,QALI,CAAAhhD,EAAA9J,KAAA,eAAA8J,EAAAxJ,OAAA,qBAMTxB,EAAKypE,UANI,CAAAz+D,EAAA9J,KAAA,eAAA8J,EAAAxJ,OAAA,wBAQT8oE,EAAgB,EAChBtqE,EAAKmkB,MAAMvR,SAAW5S,EAAKmkB,MAAMvR,QAAQxM,OAAS,IAClDkkE,EAAgBtqE,EAAKmkB,MAAMvR,QAAQ5S,EAAKmkB,MAAMvR,QAAQxM,OAAS,GAAGtD,IAGtE9C,EAAKgsD,SAAU,EAEThC,EAAYhqD,EAAKgqD,UAfVh/C,EAAA/J,KAAA,GAAA+J,EAAA9J,KAAA,GAmBMc,KAAgBiJ,KAAK,CAChC/B,QAAS,iBACT1C,QAASY,EACTmrB,gBAAiB+3C,EACjBj/C,QAASg/C,IAAsB,EAC/B73C,MAAO63C,IAAsB,IAxBxB,eAmBT9/D,EAnBSS,EAAAG,KA2BHrL,EAAQC,IAAUwD,WA3BfyH,EAAA9J,KAAA,GA4BH8yD,aAAa5iD,YAAoBtR,EAAOyK,EAAOoD,UAAWsmD,KA5BvD,eAAAjpD,EAAA/J,KAAA,GA8BTjB,EAAKgsD,SAAU,EA9BNhhD,EAAAk0C,OAAA,eAiCT8K,IAAchqD,EAAKgqD,UAjCV,CAAAh/C,EAAA9J,KAAA,gBAAA8J,EAAAxJ,OAAA,qBAqCTxB,EAAKuf,MAAMnY,SAAWA,EArCb,CAAA4D,EAAA9J,KAAA,gBAAA8J,EAAAxJ,OAAA,yBAyCT2C,EAAKqT,aACLxX,EAAKypE,UAAYl/D,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKqT,aAAa1U,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F9C,EAAKypE,WAAY,EAGrBn8C,aAAe/iB,EAAQvK,EAAKmkB,MAAMvR,SAIlC/E,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASwwD,UAChBr6D,QAAQ4F,IAAI,0DACZ1J,EAAK0pE,YAAY1pE,EAAKstB,eAAe/iB,EAAOoD,UAAW06D,GAAmBn4C,MAC1Ew4C,EAAaa,aAAah/D,EAAOoD,UAvDpB3C,EAAAxJ,OAAA,SAyDN+I,GAzDM,yBAAAS,EAAAtJ,SAAAoJ,EAAA,uBA5nBE9K,EAyuBnB2rD,aAAe,WACX3rD,EAAK8pE,oBAEL,IAAMttC,EAAOx8B,EAAK4rD,QAAQn+B,QAG1B,GAAIztB,EAAK4qE,qBAGL,OAFA9mE,QAAQ4F,IAAI,iDACZ1J,EAAK4qE,sBAAuB,GAI5B5qE,EAAK6qE,iCACL/mE,QAAQ4F,IAAI,wDAIZ8yB,EAAKiM,WAAa,GAClB3kC,QAAQ4F,IAAI,kCACZ1J,EAAKizD,cACEz2B,EAAKiM,UAAYjM,EAAKgoB,eAAiBhoB,EAAKkM,eACnD5kC,QAAQ4F,IAAI,sCACZ1J,EAAK6rD,mBA/vBM7rD,EAqwBnB8qE,qBAAuB,SAAA1lD,GAAY,IAAA9F,EACDtf,EAAKuf,MAA3BnY,EADuBkY,EACvBlY,OADuB8c,GAAA5E,EACfjY,UACoBrH,EAAKmkB,OAAjC+kD,EAFuBhlD,EAEvBglD,eAAgBt2D,EAFOsR,EAEPtR,QAChB61B,EAA0CrjB,EAA1CqjB,UAAWC,EAA+BtjB,EAA/BsjB,aAAc8b,EAAiBp/B,EAAjBo/B,aAUjC,GARA1gD,QAAQ4F,IAAR,8DAAA0B,OAEqB89D,EAFrB,uCAAA99D,OAGwBq9B,EAHxB,0CAAAr9B,OAI2Bs9B,EAJ3B,0CAAAt9B,OAK2Bo5C,EAL3B,4BAAAp5C,OAMahE,IAET8hE,IAAmBb,GAAmBn4C,WACnC,GAAIg5C,IAAmBb,GAAmBC,iBAC7CtoE,EAAK+qE,sBACF,GAAI7B,IAAmBb,GAAmBG,kBAC7CxoE,EAAKgrE,uBACF,GAAI9B,IAAmBb,GAAmBE,iBAAkB,CAC/D,IAAM/rC,EAAOx8B,EAAK4rD,QAAQn+B,QAC1B3pB,QAAQ4F,IAAR,qEAAA0B,OAEqBoxB,EAAKiM,UAF1B,2CAAAr9B,OAGwBoxB,EAAKgoB,aAH7B,2CAAAp5C,OAIwBoxB,EAAKkM,aAJ7B,gCAAAt9B,OAKahE,IAIb,IADA,IAAI6jE,GAAW,EACN/kE,EAAI,EAAGA,EAAI0M,EAAQxM,OAAQF,IAAK,CACrC,IAAIglE,EAAgBlrE,EAAKmrE,SAAS9nE,IAAI6C,GAClCzC,EAAO25D,eAAqB8N,GAChC,GAAIznE,GAEIynE,EAAc3rD,MAAM2lD,oBAAqB,CACzC1oC,EAAKiM,UAAYhlC,EAAK45D,UACtB4N,GAAW,EACX,OAKPA,GACDjrE,EAAK+qE,iBAGTjnE,QAAQ4F,IAAR,oEAAA0B,OAEqBoxB,EAAKiM,UAF1B,2CAAAr9B,OAGwBoxB,EAAKgoB,aAH7B,2CAAAp5C,OAIwBoxB,EAAKkM,aAJ7B,gCAAAt9B,OAKahE,SAEV,GAAI8hE,IAAmBb,GAAmBI,qBAAsB,CACnE,IAAMjsC,EAAOx8B,EAAK4rD,QAAQn+B,QAC1B3pB,QAAQ4F,IAAR,yEAAA0B,OAEqBoxB,EAAKiM,UAF1B,2CAAAr9B,OAGwBoxB,EAAKgoB,aAH7B,2CAAAp5C,OAIwBoxB,EAAKkM,aAJ7B,gCAAAt9B,OAKahE,IAEbo1B,EAAKiM,UAAYA,GAAajM,EAAKkM,aAAeA,GAClD5kC,QAAQ4F,IAAR,wEAAA0B,OAEqBoxB,EAAKiM,UAF1B,2CAAAr9B,OAGwBoxB,EAAKgoB,aAH7B,2CAAAp5C,OAIwBoxB,EAAKkM,aAJ7B,gCAAAt9B,OAKahE,MAz0BFpH,EA80BnBgrE,gBAAkB,WAAM,IAAAvqD,EACUzgB,EAAKuf,MAA3BnY,EADYqZ,EACZrZ,OAAQC,EADIoZ,EACJpZ,UACRuL,EAAY5S,EAAKmkB,MAAjBvR,QAEF4pB,EAAOx8B,EAAK4rD,QAAQn+B,QAC1B3pB,QAAQ4F,IAAR,uCAAA0B,OAC2C/D,EAD3C,2CAAA+D,OAEqBoxB,EAAKiM,UAF1B,uCAAAr9B,OAGwBoxB,EAAKgoB,aAH7B,uCAAAp5C,OAIwBoxB,EAAKkM,aAJ7B,4BAAAt9B,OAKahE,IAIb,IADA,IAAI6jE,GAAW,EACN/kE,EAAI,EAAGA,EAAI0M,EAAQxM,OAAQF,IAAK,CACrC,IAAIglE,EAAgBlrE,EAAKmrE,SAAS9nE,IAAI6C,GAClCzC,EAAO25D,eAAqB8N,GAChC,GAAIznE,GAEIynE,EAAc3rD,MAAMlY,YAAcA,EAAW,CAC7Cm1B,EAAKiM,UAAYhlC,EAAK45D,UAAY7gC,EAAKgoB,aAAe,EACtDymB,GAAW,EACX,OAKPA,GACDjrE,EAAK+qE,iBAGTjnE,QAAQ4F,IAAR,uCAAA0B,OAC2C/D,EAD3C,0CAAA+D,OAEqBoxB,EAAKiM,UAF1B,uCAAAr9B,OAGwBoxB,EAAKgoB,aAH7B,uCAAAp5C,OAIwBoxB,EAAKkM,aAJ7B,4BAAAt9B,OAKahE,KAl3BEpH,EAs3BnB+qE,eAAiB,WACb/qE,EAAK4qE,sBAAuB,EAC5B,IAAMpuC,EAAOx8B,EAAK4rD,QAAQn+B,QAC1B3pB,QAAQ4F,IAAR,oEAAA0B,OAEwBoxB,EAAKkM,aAF7B,uCAAAt9B,OAGwBoxB,EAAKgoB,aAH7B,oCAAAp5C,OAIqBoxB,EAAKiM,UAJ1B,4BAAAr9B,OAKapL,EAAKuf,MAAMnY,SAGFo1B,EAAKkM,aAAelM,EAAKgoB,eACzBhoB,EAAKiM,WACvBjM,EAAKiM,UAAYjM,EAAKkM,aAAelM,EAAKgoB,aAC1C1gD,QAAQ4F,IAAR,oEAAA0B,OAEqBoxB,EAAKiM,UAF1B,2CAAAr9B,OAGwBoxB,EAAKgoB,aAH7B,2CAAAp5C,OAIwBoxB,EAAKkM,aAJ7B,8CAAAt9B,OAK2BpL,EAAK4qE,qBALhC,gCAAAx/D,OAMapL,EAAKuf,MAAMnY,UAGxBtD,QAAQ4F,IAAR,oFAAA0B,OAEqBoxB,EAAKiM,UAF1B,2CAAAr9B,OAGwBoxB,EAAKgoB,aAH7B,2CAAAp5C,OAIwBoxB,EAAKkM,aAJ7B,8CAAAt9B,OAK2BpL,EAAK4qE,qBALhC,gCAAAx/D,OAMapL,EAAKuf,MAAMnY,UAn5BbpH,EAw5BnBorE,cAx5BmBnrE,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAw5BH,SAAAyqE,IAAA,IAAAjkE,EAAAjD,EAAAquB,EAAAw3B,EAAAz/C,EAAAzK,EAAA,OAAAsvB,EAAAzuB,EAAAI,KAAA,SAAAuqE,GAAA,cAAAA,EAAArqE,KAAAqqE,EAAApqE,MAAA,UACJkG,EAAWpH,EAAKuf,MAAhBnY,OACFjD,EAAO6O,IAAU3P,IAAI+D,GAFf,CAAAkkE,EAAApqE,KAAA,eAAAoqE,EAAA9pE,OAAA,wBAKZxB,EAAKgqD,UAAYrxC,KAAKI,MACtB/Y,EAAKgsD,SAAU,EACfhsD,EAAKypE,WAAY,EAEK,EACP,EACTj3C,EAAQ63C,IAERrgB,EAAYhqD,EAAKgqD,UAbXshB,EAAArqE,KAAA,GAAAqqE,EAAApqE,KAAA,GAiBOc,KAAgBiJ,KAAK,CAChC/B,QAAS,iBACT1C,QAASrC,EAAKrB,GACdyvB,gBAXc,EAYdlH,OAXO,EAYPmH,MAAOA,IAtBH,eAiBRjoB,EAjBQ+gE,EAAAngE,KAyBFrL,EAAQC,IAAUwD,WACxBwQ,YAAiBjU,EAAO,CAACsH,IA1BjBkkE,EAAApqE,KAAA,GA2BF8yD,aAAa5iD,YAAoBtR,EAAOyK,EAAOoD,UAAWsmD,KA3BxD,eAAAqX,EAAArqE,KAAA,GA6BRjB,EAAKgsD,SAAU,EA7BPsf,EAAApsB,OAAA,eAgCR8K,IAAchqD,EAAKgqD,UAhCX,CAAAshB,EAAApqE,KAAA,gBAAAoqE,EAAA9pE,OAAA,qBAsCRxB,EAAKuf,MAAMnY,SAAWA,EAtCd,CAAAkkE,EAAApqE,KAAA,gBAAAoqE,EAAA9pE,OAAA,kBA0CR2C,EAAKqT,aACLxX,EAAKypE,UAAYl/D,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKqT,aAAa1U,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F9C,EAAKypE,WAAY,EAGrB57D,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASwwD,UAGS,EACzBr6D,QAAQ4F,IAAI,yCAEZ1J,EAAK0qC,QAHoB,EAGQngC,EAAOoD,SAAU06D,GAAmBC,kBAErEI,EAAaa,aAAah/D,EAAOoD,UAEjC3N,EAAKkqE,sBAAsB3/D,GA3Df,yBAAA+gE,EAAA5pE,SAAA2pE,EAAA,uBAx5BGrrE,EAs9BnBurE,oBAAsB,SAAA9/D,GAClBA,EAAMkd,iBACNld,EAAMma,kBAFqB,IAInBxe,EAAWpH,EAAKuf,MAAhBnY,OACH0V,YAAa1V,IAElBkR,KAAiB+oD,aAAY,IA19B7Bv9D,QAAQ4F,IAAR,6BAAA0B,OAAyCmU,EAAMnY,OAA/C,gBAAAgE,OAAoEmU,EAAMlY,YAE1ErH,EAAKgqD,UAAYrxC,KAAKI,MACtB/Y,EAAKmkB,MAAQ,CACT8hB,WAAY,EACZulC,cAAe,KACf3C,cAAc,EACdj2D,QAAS,GACT0sC,cAAc,EACd2pB,iBAAiB,EACjBC,eAAgBb,GAAmBn4C,KACnCu7C,mBAAoB,EACpBC,mBAAmB,GAGvB1rE,EAAK4rD,QAAU3rC,IAAMggB,YACrBjgC,EAAKgqE,SAAW/pD,IAAMggB,YAEtBjgC,EAAKmrE,SAAW,IAAI3hE,IAEpBxJ,EAAK8pE,kBAAoB6B,aAAS3rE,EAAK8pE,kBAAmB,KAvB3C9pE,uFA0CKklB,EAAWC,GAAW,IAClC/d,EAAWjH,KAAKof,MAAhBnY,OAEFo1B,EAAOr8B,KAAKyrD,QAAQn+B,QACpBrI,EAAW,CACbqjB,UAAWjM,EAAKiM,UAChBC,aAAclM,EAAKkM,aACnB8b,aAAchoB,EAAKgoB,cAWvB,OARA1gD,QAAQ4F,IAAR,iEAAA0B,OAEqBoxB,EAAKiM,UAF1B,uCAAAr9B,OAGwBoxB,EAAKkM,aAH7B,uCAAAt9B,OAIwBoxB,EAAKgoB,aAJ7B,4BAAAp5C,OAKahE,IAGNge,6CAGQF,EAAWC,EAAWC,GAAU,IAAAkD,EACjBnoB,KAAKof,MAA3BnY,EADuCkhB,EACvClhB,OAAQC,EAD+BihB,EAC/BjhB,UAEVm1B,EAAOr8B,KAAKyrD,QAAQn+B,QAC1B3pB,QAAQ4F,IAAR,2CAAA0B,OAC+ChE,EAD/C,gBAAAgE,OACoE/D,EADpE,kCAAA+D,OAEmB8Z,EAAU9d,OAF7B,qBAAAgE,OAEuD8Z,EAAU7d,UAFjE,oCAAA+D,OAGqBoxB,EAAKiM,UAH1B,uCAAAr9B,OAIwBoxB,EAAKkM,aAJ7B,uCAAAt9B,OAKwBoxB,EAAKgoB,eAGzBt/B,EAAU9d,SAAWA,GAAU8d,EAAU7d,YAAcA,EACvDlH,KAAKmjD,iBAAiBl8C,EAAQ8d,EAAU9d,OAAQC,EAAW6d,EAAU7d,WAErElH,KAAK2qE,qBAAqB1lD,iDAIZN,EAAWC,GAAW,IAAA+D,EACH3oB,KAAKof,MAAlCnY,EADgC0hB,EAChC1hB,OAAQC,EADwByhB,EACxBzhB,UAAW8Z,EADa2H,EACb3H,MADawhB,EAEsDxiC,KAAKgkB,MAA3F0kD,EAFgClmC,EAEhCkmC,aAAcj2D,EAFkB+vB,EAElB/vB,QAASwnD,EAFSz3B,EAETy3B,SAAU9a,EAFD3c,EAEC2c,aAAc2pB,EAFftmC,EAEesmC,gBAAiByC,EAFhC/oC,EAEgC+oC,kBAExE,OAAI5mD,EAAU3D,QAAUA,IAIpB2D,EAAU1d,SAAWA,IAIrB0d,EAAUzd,YAAcA,IAIxB0d,EAAU8jD,eAAiBA,IAI3B9jD,EAAUnS,UAAYA,IAItBmS,EAAUq1C,WAAaA,IAIvBr1C,EAAUu6B,eAAiBA,IAI3Bv6B,EAAUkkD,kBAAoBA,GAI9BlkD,EAAU2mD,oBAAsBA,qDAOpB,IACRtkE,EAAWjH,KAAKof,MAAhBnY,OACRjH,KAAKmjD,iBAAiBl8C,EAAQ,GAE9ByG,KAAa4T,GAAG,mBAAoBthB,KAAKqpE,oBACzC37D,KAAa4T,GAAG,uBAAwBthB,KAAKwpE,wBAC7C97D,KAAa4T,GAAG,uBAAwBthB,KAAKkkE,wBAC7Cx2D,KAAa4T,GAAG,6BAA8BthB,KAAKipE,8BACnDv7D,KAAa4T,GAAG,8BAA+BthB,KAAK6oE,yBACpDn7D,KAAa4T,GAAG,6BAA8BthB,KAAK6oE,yBACnDh2D,IAAUyO,GAAG,wBAAyBthB,KAAKgpE,yBAC3Cn2D,IAAUyO,GAAG,2BAA4BthB,KAAKkxD,4BAE9ChhC,KAAY5O,GAAG,0BAA2BthB,KAAK6hC,2BAC/C3R,KAAY5O,GAAG,0BAA2BthB,KAAK2oE,2BAC/Cz4C,KAAY5O,GAAG,uBAAwBthB,KAAKyhC,uEAI5C/zB,KAAa1L,eAAe,mBAAoBhC,KAAKqpE,oBACrD37D,KAAa1L,eAAe,uBAAwBhC,KAAKwpE,wBACzD97D,KAAa1L,eAAe,uBAAwBhC,KAAKkkE,wBACzDx2D,KAAa1L,eAAe,6BAA8BhC,KAAKipE,8BAC/Dv7D,KAAa1L,eAAe,8BAA+BhC,KAAK6oE,yBAChEn7D,KAAa1L,eAAe,6BAA8BhC,KAAK6oE,yBAC/Dh2D,IAAU7Q,eAAe,wBAAyBhC,KAAKgpE,yBACvDn2D,IAAU7Q,eAAe,2BAA4BhC,KAAKkxD,4BAE1DhhC,KAAYluB,eAAe,0BAA2BhC,KAAK6hC,2BAC3D3R,KAAYluB,eAAe,0BAA2BhC,KAAK2oE,2BAC3Dz4C,KAAYluB,eAAe,uBAAwBhC,KAAKyhC,yGAyLrCx6B,EAAQ6gD,EAAgB5gD,EAAWshD,6GAChDxkD,EAAO6O,IAAU3P,IAAI+D,GACrBwkE,EAAe54D,IAAU3P,IAAI4kD,GAEnC9nD,KAAK6pD,UAAYrxC,KAAKI,MACtB5Y,KAAK6rD,SAAU,EACf7rD,KAAKspE,WAAY,EACjBtpE,KAAKoqE,qBAAsB,EAE3BpqE,KAAK0qE,kCAAmC,GACpC1mE,0BACAnC,KAAgBiJ,KAAK,CACjB/B,QAAS,WACT1C,QAASrC,EAAKrB,KAGZwiE,GAAUj+D,GAAalD,EAAK2T,aAAe,EAC3CwyD,EACFhF,GAAUnhE,EAAK2T,aAAe,EAAI3T,EAAK0nE,2BAA6BxkE,GAAwB,EAC1FgkB,EAAUi6C,GAAUnhE,EAAK2T,aAAe,GAAMzQ,GAAa,EAAIgjE,IAAsB,EACrF73C,EACD8yC,GAAUnhE,EAAK2T,aAAe,GAAMzQ,EAAY,EAAIgjE,IAAsBA,IAEzErgB,EAAY7pD,KAAK6pD,oBACFhoD,KAAgBiJ,KAAK,CACtC/B,QAAS,iBACT1C,QAASrC,EAAKrB,GACdyvB,gBAAiB+3C,EACjBj/C,OAAQA,EACRmH,MAAOA,eALLjoB,SAQFy/C,IAAc7pD,KAAK6pD,gEAMnB7lD,EAAKqT,aACLrX,KAAKspE,UAAYl/D,EAAOoD,SAASvH,OAAS,GAAKjC,EAAKqT,aAAa1U,KAAOyH,EAAOoD,SAAS,GAAG7K,GAE3F3C,KAAKspE,WAAY,EAGrB57D,KAAaC,SAASvD,EAAOoD,UAC7BpD,EAAOoD,SAASwwD,UAGZsN,EAAqB94C,OAAOm5C,YAC5B3nE,GAAQA,EAAK2T,aAAe,oBACnB5R,EAAIqE,EAAOoD,SAASvH,OAAS,eAAGF,GAAK,uBAClCpD,EAAOyH,EAAOoD,SAASzH,GAAvBpD,MAEHyH,EAAOoD,SAASzH,GAAGinB,aACpBrqB,EAAKqB,EAAK0nE,4BACV/oE,EAAK2oE,oBAELA,EAAqB3oE,8DAPoBoD,mCAarDulE,EAAqBA,IAAuB94C,OAAOm5C,UAAY,EAAIL,EACnE3nE,QAAQ4F,IAAI,uCAAyC+hE,GAEjDvC,EAAiBb,GAAmBC,iBACpCjhE,EACA6hE,EAAiBb,GAAmBG,kBAC7BlD,GAAUmG,IACjBvC,EAAiBb,GAAmBE,kBAIlCzoE,EAAQC,IAAUwD,WACxBwQ,YAAiBjU,EAAO,CAACsH,IACzB4M,YAAiBlU,EAAOsH,aAClB4sD,aAAa5iD,YAAoBtR,EAAOyK,EAAOoD,UAAWsmD,oBAEhE9zD,KAAKuqC,QAAQ+gC,EAAoBlhE,EAAOoD,SAAUu7D,EAAgB,WAC9Dt+D,EAAKigE,kCAAmC,EACpCxjE,GACA2rB,aAAiB5rB,EAAQC,KAIjCqhE,EAAaa,aAAah/D,EAAOoD,UAGjC2O,YAAgBnY,EAAKrB,IAEfipE,EAAsB3yC,WAAW,WACnCxuB,EAAK6Z,SAAS,CAAEinD,mBAAmB,KACpCM,eACG7rE,KAAK+pE,sBAAsB3/D,WACjCwzD,aAAagO,GACb5rE,KAAKskB,SAAS,CAAEinD,mBAAmB,4BAEnCvrE,KAAKuqC,QACD,EACA,GACA29B,GAAmBC,iBACnB,kBAAO19D,EAAKigE,kCAAmC,YAInDe,GACA5pE,KAAgBiJ,KAAK,CACjB/B,QAAS,YACT1C,QAASolE,EAAa9oE,iKAiBR6K,GAEtB,IAAK,IAAIzH,EAAIyH,EAASvH,OAAS,EAAGF,GAAK,EAAGA,IAAK,CAC3C,IAAIxB,EAAUiJ,EAASzH,GACvB,GAAIxB,GAAWA,EAAQC,QACnB,OAAQD,EAAQC,QAAQ,UACpB,IAAK,eAAgB,IAAAsnE,EACD9rE,KAAK+rE,gBAAgBxnE,GADpBynE,EAAAlsE,OAAAm6C,EAAA,EAAAn6C,CAAAgsE,EAAA,GACZnpE,EADYqpE,EAAA,GAEjB,GAFiBA,EAAA,GAGH97D,aAAa3L,EAAQC,QAAQK,MAAMmB,OACpCoC,MACLxI,IAAUwS,oBAAoBzP,EAAI4B,GAG1C,MAEJ,IAAK,iBAAkB,IAAA0nE,EACHjsE,KAAKksE,kBAAkB3nE,GADpB4nE,EAAArsE,OAAAm6C,EAAA,EAAAn6C,CAAAmsE,EAAA,GACdtpE,EADcwpE,EAAA,GAEnB,GAFmBA,EAAA,GAGL5nE,EAAQC,QAAQa,QAAQA,QACzB+C,MACLxI,IAAUwS,oBAAoBzP,EAAI4B,qCAiNtD+mE,EAAoB74D,EAASs2D,EAAgBz/D,GACjDtJ,KAAKskB,SACD,CAAEgnD,mBAAoBA,EAAoB74D,QAASA,EAASs2D,eAAgBA,GAC5Ez/D,wCAIKmJ,EAASnJ,GACK,IAAnBmJ,EAAQxM,OAKZjG,KAAKskB,SACD,CAAE7R,QAASA,EAAQxH,OAAOjL,KAAKgkB,MAAMvR,SAAUs2D,eAAgBb,GAAmBI,sBAClFh/D,GANIA,GAAUA,2CAUP8iE,EAAc7nE,EAASwkE,EAAgBz/D,GAC7C/E,GAELvE,KAAKskB,SACD,CACI7R,QAASzS,KAAKgkB,MAAMvR,QAAQ9G,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAOypE,IAAcnhE,OAAO,CAAC1G,IACvEwkE,eAAgBA,GAEpBz/D,uCAIImJ,EAASs2D,EAAgBz/D,GACV,IAAnBmJ,EAAQxM,QAEZjG,KAAKskB,SAAS,CAAE7R,QAASzS,KAAKgkB,MAAMvR,QAAQxH,OAAOwH,GAAUs2D,eAAgBA,GAAkBz/D,yCAGrFuC,EAAavC,GAAU,IACzBmJ,EAAYzS,KAAKgkB,MAAjBvR,QACR,GAAuB,IAAnBA,EAAQxM,OAAZ,CAEA,IAAIwH,EAAM,IAAIpE,IAAIwC,EAAY4B,IAAI,SAAA/B,GAAC,MAAI,CAACA,EAAGA,MAE3C1L,KAAKskB,SACD,CAAE7R,QAASA,EAAQ9G,OAAO,SAAAD,GAAC,OAAK+B,EAAI1K,IAAI2I,EAAE/I,MAAMomE,eAAgBb,GAAmBC,kBACnF7+D,qCA2PC,IAAA+kC,EAAAruC,KAAA8hC,EACuB9hC,KAAKof,MAAzBmB,EADHuhB,EACGvhB,QAAStZ,EADZ66B,EACY76B,OADZw7B,EAEqFziC,KAAKgkB,MAAvFvR,EAFHgwB,EAEGhwB,QAAS64D,EAFZ7oC,EAEY6oC,mBAAoBnsB,EAFhC1c,EAEgC0c,aAAc2pB,EAF9CrmC,EAE8CqmC,gBAAiByC,EAF/D9oC,EAE+D8oC,kBA6BpE,OA3BA5nE,QAAQ4F,IAAR,oCAAA0B,OAAgDk0C,GAAgB1sC,GAEhEzS,KAAKgrE,SAAShsD,QACdhf,KAAKwN,SAAW2xC,EACV,KACA1sC,EAAQhF,IAAI,SAAC/B,EAAG3F,GAAJ,OACRiR,aAAiBtL,GACbgU,EAAAlf,EAAAmM,cAAC0/D,GAAD,CACI70D,IAAG,WAAAvM,OAAaS,EAAErF,QAAf,gBAAA4E,OAAqCS,EAAE/I,IAC1Cw9B,IAAK,SAAAoO,GAAE,OAAIF,EAAK28B,SAAS/pE,IAAI8E,EAAGwoC,IAChCtnC,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACboiE,oBAAqBuG,IAAuB5/D,EAAE/I,KAGlD+c,EAAAlf,EAAAmM,cAAC2/D,GAAD,CACI90D,IAAG,WAAAvM,OAAaS,EAAErF,QAAf,gBAAA4E,OAAqCS,EAAE/I,IAC1Cw9B,IAAK,SAAAoO,GAAE,OAAIF,EAAK28B,SAAS/pE,IAAI8E,EAAGwoC,IAChCtnC,OAAQyE,EAAErF,QACVa,UAAWwE,EAAE/I,GACb4pE,WAAS,EACTzH,aAAcp5D,EAAEiT,cAChBomD,oBAAqBuG,IAAuB5/D,EAAE/I,OAM5D+c,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAWH,EAAQ4Y,WAAY,gBAAiB,CACvDqzC,iCAAkC1D,IAEtCzH,YAAarhE,KAAKorE,qBAClB1rD,EAAAlf,EAAAmM,cAAA,OAAKwzB,IAAKngC,KAAKyrD,QAAS9rC,UAAU,wBAAwBitC,SAAU5sD,KAAKwrD,cACrE9rC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sBACfD,EAAAlf,EAAAmM,cAAA,OAAKwzB,IAAKngC,KAAK6pE,SAAUlqD,UAAU,uBAC9B4rD,GAAqBp5B,MAAMjuB,KAAKiuB,MAAM,IAAK,SAACqiB,EAAGzuD,GAAJ,OAAU2Z,EAAAlf,EAAAmM,cAAC8/D,GAAD,CAAoBj6D,MAAOzM,EAAGyR,IAAKzR,MACxF/F,KAAKwN,WAGdkS,EAAAlf,EAAAmM,cAAC+/D,GAAD,CAAezlE,OAAQA,IACvByY,EAAAlf,EAAAmM,cAACggE,GAAD,MACAjtD,EAAAlf,EAAAmM,cAACigE,GAAD,0DAn/BoBxtD,EAAO4E,GACnC,OAAI5E,EAAMnY,SAAW+c,EAAM8hB,YAAc1mB,EAAMlY,YAAc8c,EAAMqnD,cACxD,CACHvlC,WAAY1mB,EAAMnY,OAClBokE,cAAejsD,EAAMlY,UACrBi4C,cAAc,EACd2pB,iBAAiB,EACjBC,eAAgBb,GAAmBC,iBACnCmD,mBAAoB,GAIrB,0CA+ZS99D,GACXA,GACmB,IAApBA,EAASvH,QACRuH,EAAS,GAAGnH,SAEjBxE,KAAgBiJ,KAAK,CACjB/B,QAAS,eACT1C,QAASmH,EAAS,GAAGnH,QACrBwF,YAAa2B,EAASC,IAAI,SAAA/B,GAAC,OAAIA,EAAE/I,cA/clBmd,IAAMC,WAqhClBgB,OA3hCA,SAAAC,GAAK,MAAK,CACrBmY,WAAY,CACRA,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQwqB,KAAK,KAAO,iBAyhC5C,CAAE/hC,WAAW,GAAhCpG,CAAwCwnD,8CCjiCjDsE,8MACF7oD,MAAQ,CACJkiB,SAAU,QAGdC,gBAAkB,SAAA76B,GACdzL,EAAK6kC,WAAWp5B,EAAM86B,kBAG1B1B,WAAa,SAAAwB,GACTrmC,EAAKykB,SAAS,CAAE4hB,gBAGpB2H,YAAc,WACVhuC,EAAKykB,SAAS,CAAE4hB,SAAU,UAG9BqU,eAAiB,WACb16C,EAAKguC,cADc,IAGXt2B,EAAM1X,EAAKuf,MAAX7H,EAEFijC,EAAO36C,EAAKitE,gBAAgB9xC,KAAahnB,YAC/C,GAAKwmC,EAAL,CAEAC,IAAKD,GAEL,IAAMhjC,EAAG,GAAAvM,OAAMuvC,EAAN,uBACHj2C,EAAUgT,EAAE,cAGlB1X,EAAK66C,sBAAsBljC,EAAKjT,EAFjB,UAKnBuoE,gBAAkB,SAAA94D,GACd,IAAKA,EAAY,MAAO,GADI,IAGpB2+B,EAAS3+B,EAAT2+B,KACR,IAAKA,EAAM,MAAO,GAElB,IAAM6Q,EAAoBC,KAAYvgD,IAAI,YAE1C,OAAQsgD,EAAoBA,EAAkBhuC,MAAQ,yBAA2B,eAAiBm9B,KAGtG+H,sBAAwB,SAACljC,EAAKjT,EAASkR,GACnC,GAAK+B,EAAL,CAD8C,IAAA2H,EAGNtf,EAAKuf,MAArCu7B,EAHsCx7B,EAGtCw7B,gBAAiBp6B,EAHqBpB,EAGrBoB,QAHqBpB,EAGZ5H,EAClC,GAAKojC,EAAL,CAIIxiC,KAAiByiC,mBAAmBpjC,EAAKqjC,IAAqC,IAAsBplC,IAEpGklC,EAAgBp2C,EAAS,CACrBu2C,iBAAkBD,IAClBplC,OAAQ,CACJiK,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACIgX,IAAI,QACJsvB,aAAW,QACX/kB,MAAM,UACNpC,UAAWY,EAAQ8P,MACnBxQ,QAAS,kBAAM1H,KAAiB4iC,sBAAsBvjC,KACtDkI,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,eAOpBusE,YAAc,WACVltE,EAAKguC,cAEL,IAAM2M,EAAO36C,EAAKitE,gBAAgB9xC,KAAahnB,YAC1CwmC,IAEL34C,KAAgBiH,aAAa,CACzBC,QAAS,yBACTiL,WAAY,OAGhBnS,KAAgBiH,aAAa,CACzBC,QAAS,sBACTuxC,KAAM,CAAEE,oFAIP,IAAAl6B,EAC6BtgB,KAAKof,MAA/BmB,EADHD,EACGC,QAAShJ,EADZ+I,EACY/I,EAAGoI,EADfW,EACeX,UACZumB,EAAalmC,KAAKgkB,MAAlBkiB,SAER,OACIxmB,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACi6B,EAAApmC,EAAD,CACImf,UAAWY,EAAQsmB,WAAa,IAAMlnB,EACtCmnB,aAAW,QACX58B,KAAM8S,QAAQkpB,GACdrmB,QAAS7f,KAAKmmC,iBACdzmB,EAAAlf,EAAAmM,cAAC8yC,GAAAj/C,EAAD,OAEJkf,EAAAlf,EAAAmM,cAACq6B,GAAAxmC,EAAD,CACImC,GAAG,cACHujC,SAAUA,EACVh8B,KAAM8S,QAAQkpB,GACde,mBAAoB,KACpBC,sBAAoB,EACpBC,qBAAqB,EACrBzd,aAAc,CACVC,SAAU,SACVC,WAAY,SAEhBC,gBAAiB,CACbF,SAAU,MACVC,WAAY,SAEhBL,QAASvpB,KAAK6tC,aACdnuB,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAKu6C,gBACpB76B,EAAAlf,EAAAmM,cAAC06B,GAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAACqgE,GAAAxsE,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CAAcm+B,QAASpnB,EAAE,eAE7BmI,EAAAlf,EAAAmM,cAACqd,GAAAxpB,EAAD,CAAUqf,QAAS7f,KAAK+sE,aACpBrtD,EAAAlf,EAAAmM,cAAC06B,GAAA7mC,EAAD,KACIkf,EAAAlf,EAAAmM,cAACsgE,GAAAzsE,EAAD,OAEJkf,EAAAlf,EAAAmM,cAAC46B,GAAA/mC,EAAD,CAAcm+B,QAASpnB,EAAE,6BA/HbuI,IAAMC,WA+I3B4G,GANCC,YACZ7F,IAhJW,SAAAC,GAAK,MAAK,CACrBqP,MAAO,CACHjN,QAASpC,EAAM+7B,QAAQC,KAAO,KA8If,CAAE71B,WAAW,IAChCC,cACA81B,eAGWv2B,CAAQkmD,ICtHjBK,uBACF,SAAAA,EAAY9tD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAktE,IACfrtE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAotE,GAAA/sE,KAAAH,KAAMof,KAwBV+tD,iCAAmC,SAAAxsE,GAAU,IACjCqT,EAAegnB,KAAfhnB,WAERnU,EAAKykB,SAAS,CAAEtQ,gBA5BDnU,EA+BnButE,6BAA+B,SAAAzsE,GAAU,IAC7BqT,EAAerT,EAAfqT,WAIR,GAFAnU,EAAKykB,SAAS,CAAEtQ,eAEZA,EAAY,CACZ,IAAMrU,EAAQC,IAAUwD,WACxB2Q,YAAsBpU,EAAOqU,KAtClBnU,EA0CnBguC,YAAc,WACVhsC,KAAgBiH,aAAa,CACzBC,QAAS,yBACTiL,WAAY,QA7CDnU,EAiDnBswD,WAAa,WAAM,IACPn8C,EAAenU,EAAKmkB,MAApBhQ,WACR,GAAKA,EAAL,CAFe,IAIPqnB,EAAiBrnB,EAAjBqnB,aAERx5B,KAAgBiJ,KAAK,CACjB/B,QAAS,mBACTimB,OAAQhb,EAAWrR,GACnB04B,cAAeA,IAGnBx7B,EAAKguC,gBA7DUhuC,EAgEnBunE,mBAAqB,SAAAC,GAAa,IAGxBhiE,EAFiBxF,EAAKmkB,MAApBhQ,WACAE,SACiBusC,KAAK,SAAA/0C,GAAC,OAAIA,EAAErG,QAAQ1C,KAAO0kE,IACpD,GAAKhiE,EAAL,CAEA,IAAM1F,EAAQC,IAAUwD,WACxBiN,YAAmB1Q,EAAO0F,EAAS,MAEXxF,EAAK4nE,oBAAoBJ,GACjChkE,QAAQ,SAAAqI,GACpB2E,YAAmB1Q,EAAO+L,EAAG,UA3ElB7L,EA+EnB4nE,oBAAsB,SAAAJ,GAAa,IACvBrzD,EAAenU,EAAKmkB,MAApBhQ,WACR,IAAKA,EAAY,MAAO,GAFO,IAIvBE,EAAaF,EAAbE,SACR,IAAKA,EAAU,MAAO,GAEtB,IAAMwzD,EAAU,GACVl1D,EAAQ0B,EAASsd,UAAU,SAAA9lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAO0kE,IACvD,IAAe,IAAX70D,EAAc,MAAO,GAEzB,IACMyjB,EAAMzR,KAAKC,MAAMjS,EADE,GAEnB0jB,EAAS1jB,EAFU,EAInB4jB,EAAUH,EAAM,EAChBI,EAAUJ,EAAM,EAChBM,EAAaL,EAAS,EACtBM,EAAaN,EAAS,EA6B5B,OA3BIE,GAAW,IACPG,GAAc,GACdmxC,EAAQj+D,KAXS,EAWe2sB,EAAUG,GAE9CmxC,EAAQj+D,KAba,EAaW2sB,EAAUF,GACtCM,EAdiB,GAejBkxC,EAAQj+D,KAfS,EAee2sB,EAAUI,IAI9CD,GAAc,GACdmxC,EAAQj+D,KApBa,EAoBWwsB,EAAMM,GAEtCC,EAtBqB,GAuBrBkxC,EAAQj+D,KAvBa,EAuBWwsB,EAAMO,GAGtCH,EAAU7R,KAAKqR,KAAK3hB,EAASjO,OA1BR,KA2BjBswB,GAAc,GACdmxC,EAAQj+D,KA5BS,EA4Be4sB,EAAUE,GAE9CmxC,EAAQj+D,KA9Ba,EA8BW4sB,EAAUH,GACtCM,EA/BiB,GAgCjBkxC,EAAQj+D,KAhCS,EAgCe4sB,EAAUG,IAI3CkxC,EAAQj6D,IAAI,SAAA1H,GAAC,OAAImO,EAASnO,MA9HlBlG,EAiInB6kE,gBAAkB,SAAAp5D,GACd,IAAM+7D,EAAY70C,OAAOlnB,EAAMC,OAAO89B,QAAQg+B,WACzCA,GAEAxnE,EAAKukE,YAEVvkE,EAAKykB,SAAS,CAAE+iD,cAChBxnE,EAAKunE,mBAAmBC,KAxITxnE,EA2InB4kE,gBAAkB,SAAAn5D,GACd,IAAM+7D,EAAY70C,OAAOlnB,EAAMC,OAAO89B,QAAQg+B,WAC9C,GAAKA,EAUL,OARAxnE,EAAKykB,SAAS,CAAE+iD,cAChBxnE,EAAKunE,mBAAmBC,GAExBxnE,EAAKukE,WAAY,EACjBr/D,SAAS6iE,iBAAiB,UAAW/nE,EAAKgoE,eAE1Cv8D,EAAMkd,iBACNld,EAAMma,mBACC,GAvJQ5lB,EA0JnBgoE,cAAgB,WACZhoE,EAAKykB,SAAS,CAAE+iD,UAAW,IAC3BxnE,EAAKukE,WAAY,EACjBr/D,SAAS+iE,oBAAoB,UAAWjoE,EAAKgoE,gBA1J7ChoE,EAAKmkB,MAAQ,CACThQ,WAAYgnB,KAAahnB,WACzBqzD,UAAW,GALAxnE,qFASG8kB,EAAWC,EAAWC,GAAa,IAAAd,EACnB/jB,KAAKgkB,MAA/BhQ,EAD6C+P,EAC7C/P,WAAYqzD,EADiCtjD,EACjCsjD,UAEpB,OAAOrzD,IAAe4Q,EAAU5Q,YAAcqzD,IAAcziD,EAAUyiD,sDAItErsC,KAAa1Z,GAAG,yBAA0BthB,KAAKotE,8BAC/CpyC,KAAa1Z,GAAG,6BAA8BthB,KAAKmtE,iFAInDnyC,KAAah5B,eAAe,yBAA0BhC,KAAKotE,8BAC3DpyC,KAAah5B,eAAe,6BAA8BhC,KAAKmtE,mEA0I1D,IAAAhuD,EACkBnf,KAAKof,MAApB7H,EADH4H,EACG5H,EAAGgJ,EADNpB,EACMoB,QADNiiB,EAE6BxiC,KAAKgkB,MAA/BhQ,EAFHwuB,EAEGxuB,WAAYqzD,EAFf7kC,EAEe6kC,UACpB,IAAKrzD,EAAY,OAAO,KAHnB,IAKG2G,EAAkC3G,EAAlC2G,MAAOzG,EAA2BF,EAA3BE,SAAUmnB,EAAiBrnB,EAAjBqnB,aAEnBp4B,EAAQiR,EAASzG,IAAI,SAAA/B,GAAC,OACxBgU,EAAAlf,EAAAmM,cAAA,OACIgT,UAAU,0BACVnI,IAAK9L,EAAErG,QAAQ1C,GACfqlE,kBAAiBt8D,EAAErG,QAAQ1C,GAC3BiK,MAAO,CAAE6C,MAAO,GAAIE,OAAQ,KAC5B+P,EAAAlf,EAAAmM,cAACyf,GAAA,EAAD,CACI5U,IAAK9L,EAAErG,QAAQ1C,GACfgd,UAAU,kCACV+Z,SAAO,EACPr0B,QAASqG,EACTuU,YAAagoD,IACbxuC,MAAM,IAEV/Z,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iCAAiCjU,EAAE+hB,UAIpDkI,EAAezhB,EAASsd,UAAU,SAAA9lB,GAAC,OAAIA,EAAErG,QAAQ1C,KAAO0kE,IACxDhiE,GAA4B,IAAlBswB,EAAsBzhB,EAASyhB,GAAgB,KAE/D,OACIjW,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACImf,UAAWY,EAAQkuB,WACnBvkC,MAAI,EACJggB,mBAAoB,EACpBX,QAASvpB,KAAK6tC,YACd1jB,kBAAgB,gCAChB5J,QAAS,CAAEw4B,MAAOx4B,EAAQg2C,YAC1B72C,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CACImC,GAAG,gCACHgd,UAAWe,IAAWH,EAAQ8sD,gBAATvtE,OAAAsmB,EAAA,EAAAtmB,CAAA,GAChBygB,EAAQ+sD,qBAAuBtwD,QAAQ3X,KAE5CgqC,mBAAiB,GACjB3vB,EAAAlf,EAAAmM,cAACgiC,GAAAnuC,EAAD,CAAYimB,QAAQ,KAAK9G,UAAWY,EAAQ+uB,eAAgBuS,QAAM,GAC7DlnC,GAEL+E,EAAAlf,EAAAmM,cAAC4gE,GAAD,CAAuB5tD,UAAWY,EAAQitD,mBAE9C9tD,EAAAlf,EAAAmM,cAAC0d,GAAA7pB,EAAD,CACI+f,QAAS,CAAEgC,KAAMhC,EAAQmuB,aACzB+2B,YAAazlE,KAAK0kE,gBAClBgB,WAAY1lE,KAAK2kE,eACjBhgC,YAAa3kC,KAAKykE,iBACjBxhE,GAELyc,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,CAAemf,UAAWe,IAAW5gB,OAAAsmB,EAAA,EAAAtmB,CAAA,GAAGygB,EAAQ+sD,qBAAuBtwD,QAAQ3X,MAC3Eqa,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUlC,QAAS7f,KAAK6tC,aACjCt2B,EAAE,WAEPmI,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQuhB,MAAM,UAAUlC,QAAS7f,KAAKmwD,YAClB54C,EAAf8jB,EAAiB,SAAc,SAGvCre,QAAQ3X,IAAYqa,EAAAlf,EAAAmM,cAAC8zB,GAAA,EAAD,CAAgBp7B,QAASA,YA/N/Bya,IAAMC,YA4OtB4G,GALCC,YACZ7F,IAvQW,SAAAC,GAAK,MAAK,CACrB0tB,YAAa,CACT7hC,QAAS,OACT4gE,SAAU,OACVxY,UAAW,IACX7xC,QAAS,cACT+V,WAAY,eAEhBo9B,UAAW,CACP9mD,MAAO,KAEX49D,gBAAiB,CACbxgE,QAAS,OACT6gE,cAAe,MACfhX,WAAY,UAEhBjoB,WAAY,CACR1sB,MAAOf,EAAM0d,QAAQjhB,KAAKkhB,SAE9B6uC,gBAAiB,CACb1mD,OAAQ,uBAEZwoB,eAAgB,CACZV,SAAU,EACV++B,WAAY,GAEhBL,qBAAsB,CAClBnqD,cAAe,WA6OnBiE,cAGWT,CAAQumD,IChRjBU,uBACF,SAAAA,EAAYxuD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA4tE,IACf/tE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA8tE,GAAAztE,KAAAH,KAAMof,KAsCVyuD,8BAAgC,WAC5BhuE,EAAKwhB,eAxCUxhB,EA2CnBiuE,2BAA6B,WACzBjuE,EAAKwhB,eA5CUxhB,EA+CnBkxC,qBAAuB,SAAApwC,GACnBd,EAAKykB,SAAS,CACVrd,OAAQtG,EAAOqwC,WACf9pC,UAAWvG,EAAO2nD,iBAlDPzoD,EAsDnB+qE,eAAiB,WACb/qE,EAAKkuE,aAAanD,kBAvDH/qE,EA0DnBorE,cAAgB,WACZprE,EAAKkuE,aAAa9C,iBA3DHprE,EA8DnBgrE,gBAAkB,WACdhrE,EAAKkuE,aAAalD,mBA5DlBhrE,EAAKmkB,MAAQ,CACT/c,OAAQkR,KAAiBs8B,YACzBvtC,UAAWiR,KAAiBowC,eAC5BylB,cAAe,GANJnuE,qFAUG8kB,EAAWC,GAC7B,OAAID,EAAUpN,IAAMvX,KAAKof,MAAM7H,IAG3BqN,EAAU3d,SAAWjH,KAAKgkB,MAAM/c,SAGhC2d,EAAU1d,YAAclH,KAAKgkB,MAAM9c,WAGnC0d,EAAUopD,gBAAkBhuE,KAAKgkB,MAAMjF,4DAQ3C5G,KAAiBmJ,GAAG,oCAAqCthB,KAAK6tE,+BAC9D11D,KAAiBmJ,GAAG,qBAAsBthB,KAAK+wC,sBAC/C54B,KAAiBmJ,GAAG,2BAA4BthB,KAAK8tE,2EAIrD31D,KAAiBnW,eAAe,oCAAqChC,KAAK6tE,+BAC1E11D,KAAiBnW,eAAe,qBAAsBhC,KAAK+wC,sBAC3D54B,KAAiBnW,eAAe,2BAA4BhC,KAAK8tE,6DA8B5D,IAAArjE,EAAAzK,KAiCGuX,EAAMvX,KAAKof,MAAX7H,EAjCHwM,EAkCwC/jB,KAAKgkB,MAA1C/c,EAlCH8c,EAkCG9c,OAAQC,EAlCX6c,EAkCW7c,UACRmuD,GAnCHtxC,EAkCsBiqD,cACsB71D,KAAzCk9C,sBAAsBtB,EAAmB57C,KAAnB47C,eAE9B,OACIr0C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,iBAAkB,CAAEutD,8BAA+B5Y,KAC1E31C,EAAAlf,EAAAmM,cAACuhE,GAAD,MACAxuD,EAAAlf,EAAAmM,cAACwhE,GAAD,CAAQlnE,OAAQA,IAChByY,EAAAlf,EAAAmM,cAACyhE,GAAD,CAAcre,SAAU,SAAA5vB,GAAG,OAAK11B,EAAKsjE,aAAe5tC,GAAMl5B,OAAQA,EAAQC,UAAWA,KACnFD,GAAUyY,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACRzF,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CAAM7N,IAAKkR,GACPr0C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iCACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sDACXD,EAAAlf,EAAAmM,cAACuoC,GAAA10C,EAAD,CAAUuhB,MAAM,UAAUD,SAAS,aAI/CpC,EAAAlf,EAAAmM,cAAC+jD,GAAA,EAAD,CAAM7N,GAAIkR,GACNr0C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,kCACXD,EAAAlf,EAAAmM,cAAA,WAAM4K,EAAE,qBAIpBmI,EAAAlf,EAAAmM,cAAC8oC,GAAA,EAAD,CAAQxuC,OAAQA,IAChByY,EAAAlf,EAAAmM,cAAC0hE,GAAD,MACA3uD,EAAAlf,EAAAmM,cAAC2hE,GAAD,cA7HYvuD,cAyIb4G,GANCC,YACZ6kB,cACArkB,cACAwkB,cAGWjlB,CAAQinD,2ICtGRW,uBA1CX,SAAAA,EAAYnvD,GAAQ,OAAAtf,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAuuE,GAAAzuE,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAyuE,GAAApuE,KAAAH,KACVof,0EAGD,IAAAD,EACyBnf,KAAKof,MAA3BnY,EADHkY,EACGlY,OAAQC,EADXiY,EACWjY,UAEV3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAErB,IAAMwH,EAASmhB,aAAgB3oB,GACzBo7D,EAAW9zC,aAAYtnB,GAEvBiqE,EAAcziE,EAChB2T,EAAAlf,EAAAmM,cAACiT,GAAA,EAAD,CAAiB7T,OAAQA,IAEzB2T,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,IAG7B,OACIyY,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gCACV6uD,EACD9uD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gCACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBACXD,EAAAlf,EAAAmM,cAACovB,GAAA,EAAD,CAAe90B,OAAQA,EAAQ8E,OAAQA,KAE3C2T,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iCACXD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,gBAAgBggD,cA7B3B7/C,IAAMC,sBCHjC0uD,uBACF,SAAAA,EAAYrvD,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAyuE,IACf5uE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA2uE,GAAAtuE,KAAAH,KAAMof,KAGVmG,YAAc,SAAAja,GACVA,EAAMma,mBALS5lB,wEAQV,IACG4d,EAASzd,KAAKof,MAAd3B,KAER,OACIiC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBAAgBE,QAAS7f,KAAKulB,aACzC7F,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sBAAsBlC,WAd1BqC,IAAMC,YAwBjC0uD,GAAa5tD,aAAe,GAEb4tD,oBClBTC,WAAS5uD,IAAMqwB,KAAK,kBAAMvmC,QAAA8J,IAAA,CAAAkK,EAAAmM,EAAA,GAAAnM,EAAAmM,EAAA,KAAA3e,KAAAwS,EAAAwyB,KAAA,cAyXjBu+B,eAtXX,SAAAA,EAAYvvD,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA2uE,IACf9uE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA6uE,GAAAxuE,KAAAH,KAAMof,KA+FVwvD,2BAA6B,SAAAjuE,GAAU,IAAAwe,EACLtf,EAAKuf,MAA3BnY,EAD2BkY,EAC3BlY,OAAQC,EADmBiY,EACnBjY,UAEZD,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,WACjDrH,EAAKgvE,uBApGMhvE,EAwGnBgvE,oBAxGmB/uE,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAwGG,SAAAC,IAAA,IAAA4f,EAAArZ,EAAAC,EAAAgF,EAAA4iE,EAAAC,EAAA7tE,EAAA8tE,EAAA,OAAA//C,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAAAuf,EACkBzgB,EAAKuf,MAAjCnY,EADUqZ,EACVrZ,OAAQC,EADEoZ,EACFpZ,UAAWgF,EADToU,EACSpU,KAEtB0hB,aAAgB3mB,EAAQC,GAHX,CAAArG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAytE,EAOY78D,YAAahL,EAAQC,EAAWgF,GAP5C6iE,EAAAjvE,OAAAm6C,EAAA,EAAAn6C,CAAAgvE,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAOI7tE,EAPJ6tE,EAAA,GAAAluE,EAAAE,KAAA,EAQUlB,EAAKovE,iBAAiB/tE,GARhC,OAQZ8tE,EARYnuE,EAAAmK,KAUlBnL,EAAKykB,SAAS,CAAE0qD,kBAVE,wBAAAnuE,EAAAU,SAAAb,MAxGHb,EAqHnBovE,iBAAmB,SAAA/tE,GACf,OAAO,IAAI0I,QAAQ,SAAAC,GACf,GAAK3I,EAAL,CAKA,IAAMkH,EAAOxI,IAAUqI,QAAQ/G,EAAKyB,IACpC,GAAKyF,EAAL,CAKA,IAAM8mE,EAAa,IAAIC,WACvBD,EAAWE,OAAS,SAAA9jE,GAAK,OAAIzB,EAAQkqC,KAAKs7B,MAAM/jE,EAAMC,OAAOnB,UAC7D8kE,EAAW7kE,QAAU,kBAAMR,EAAQ,OACnCqlE,EAAWI,QAAU,kBAAMzlE,EAAQ,OACnCqlE,EAAWK,WAAWnnE,QARlByB,EAAQ,WANRA,EAAQ,SAxHDhK,EA0InB2+D,wBAA0B,SAAA79D,GAAU,IAAAwnB,EACItoB,EAAKuf,MAAjCnY,EADwBkhB,EACxBlhB,OAAQC,EADgBihB,EAChBjhB,UAAWgF,EADKic,EACLjc,KAE3B,GAAIjF,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UAAW,KAAAsoE,EAC9Bv9D,YAAahL,EAAQC,EAAWgF,GADFujE,EAAA3vE,OAAAm6C,EAAA,EAAAn6C,CAAA0vE,EAAA,GACrD//D,EADqDggE,EAAA,GAC9C9/D,EAD8C8/D,EAAA,GACtCvuE,EADsCuuE,EAAA,GAE5D5vE,EAAKykB,SAAS,CACV7U,QACAE,SACAzO,WAlJOrB,EAuJnB6vE,iCAAmC,SAAA/uE,GAAU,IAAAgoB,EACX9oB,EAAKuf,MAA3BnY,EADiC0hB,EACjC1hB,OAAQC,EADyByhB,EACzBzhB,UAEhB,GAAID,IAAWtG,EAAOsG,QAAUC,IAAcvG,EAAOuG,UAAW,KAAAyoE,EAC9B39D,YAAoB/K,EAAQC,GADE0oE,EAAA9vE,OAAAm6C,EAAA,EAAAn6C,CAAA6vE,EAAA,GACrDlgE,EADqDmgE,EAAA,GAC9CjgE,EAD8CigE,EAAA,GACtC1uE,EADsC0uE,EAAA,GAE5D/vE,EAAKykB,SAAS,CACVmsB,eAAgBhhC,EAChBihC,gBAAiB/gC,EACjBjJ,UAAWxF,MA/JJrB,EAoKnBqkE,uBAAyB,SAAAvjE,GAAU,IAAAmhC,EACKjiC,EAAKuf,MAAjCnY,EADuB66B,EACvB76B,OAAQC,EADe46B,EACf56B,UAAWgF,EADI41B,EACJ51B,KACnB7F,EAAwB1F,EAAxB0F,QAAS6X,EAAevd,EAAfud,WAEjB,GAAIjX,IAAWZ,GAAWa,IAAcgX,EAAY,KAAA2xD,EAClB59D,YAAahL,EAAQC,EAAWgF,GADd4jE,EAAAhwE,OAAAm6C,EAAA,EAAAn6C,CAAA+vE,EAAA,GACzCpgE,EADyCqgE,EAAA,GAClCngE,EADkCmgE,EAAA,GAC1B5uE,EAD0B4uE,EAAA,GAE1CvrE,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACnCuW,EAAOiO,aAAQnnB,GACrB1E,EAAKykB,SAAS,CACV7U,MAAOA,EACPE,OAAQA,EACRzO,KAAMA,EACNuc,KAAMA,MAhLC5d,EAqLnBkwE,mBAAqB,SAAAzkE,GACbA,GAAOA,EAAMma,kBAEjB5lB,EAAKuf,MAAMS,QAAQvU,IAxLJzL,EA2LnBmwE,YAAc,SAAAC,GACVpwE,EAAKykB,SAAS,CACV2rD,WA1LJpwE,EAAKk/B,SAAWjf,IAAMggB,YACtBjgC,EAAKqwE,UAAYpwD,IAAMggB,YAJR,IAAA6D,EAMqB9jC,EAAKuf,MAAjCnY,EANO08B,EAMP18B,OAAQC,EANDy8B,EAMCz8B,UAAWgF,EANZy3B,EAMYz3B,KANZikE,EAQal+D,YAAahL,EAAQC,EAAWgF,GAR7CkkE,EAAAtwE,OAAAm6C,EAAA,EAAAn6C,CAAAqwE,EAAA,GAQV1gE,EARU2gE,EAAA,GAQHzgE,EARGygE,EAAA,GAQKlvE,EARLkvE,EAAA,GASflvE,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EATlB,IAAAmvE,EAWoCr+D,YAAoB/K,EAAQC,GAXhEopE,EAAAxwE,OAAAm6C,EAAA,EAAAn6C,CAAAuwE,EAAA,GAWV5/B,EAXU6/B,EAAA,GAWM5/B,EAXN4/B,EAAA,GAWuB5pE,EAXvB4pE,EAAA,GAYf5pE,EAAY9G,IAAUsD,IAAIwD,EAAU/D,KAAO+D,EAE3C,IAAMnC,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACnCuW,EAAOiO,aAAQnnB,GAfN,OAoBf1E,EAAKmkB,MAAQ,CACTisD,MAAO,EACPnqC,WAAY7+B,EACZokE,cAAenkE,EACfqpE,WAAW,EACX9gE,MAAOA,EACPE,OAAQA,EACRzO,KAAMA,EACNuc,KAAMA,EACNgzB,eAAgBA,EAChBC,gBAAiBA,EACjBhqC,UAAWA,GAGf7G,EAAKgvE,sBAlCUhvE,mFAqEfD,IAAU0hB,GAAG,2BAA4BthB,KAAK4uE,4BAC9ChvE,IAAU0hB,GAAG,wBAAyBthB,KAAKw+D,yBAC3C5+D,IAAU0hB,GAAG,wBAAyBthB,KAAKw+D,yBAC3C5+D,IAAU0hB,GAAG,4BAA6BthB,KAAKw+D,yBAC/C5+D,IAAU0hB,GAAG,iCAAkCthB,KAAK0vE,kCACpD9vE,IAAU0hB,GAAG,qCAAsCthB,KAAK0vE,kCACxDhiE,KAAa4T,GAAG,uBAAwBthB,KAAKkkE,uEAI7CtkE,IAAUoC,eAAe,2BAA4BhC,KAAK4uE,4BAC1DhvE,IAAUoC,eAAe,wBAAyBhC,KAAKw+D,yBACvD5+D,IAAUoC,eAAe,wBAAyBhC,KAAKw+D,yBACvD5+D,IAAUoC,eAAe,4BAA6BhC,KAAKw+D,yBAC3D5+D,IAAUoC,eAAe,iCAAkChC,KAAK0vE,kCAChE9vE,IAAUoC,eAAe,qCAAsChC,KAAK0vE,kCACpEhiE,KAAa1L,eAAe,uBAAwBhC,KAAKkkE,mEAG1Cn/C,EAAWC,EAAWC,GAAU,IAAAq/C,EACjBtkE,KAAKof,MAA3BnY,EADuCq9D,EACvCr9D,OAAQC,EAD+Bo9D,EAC/Bp9D,UAEZ6d,EAAU9d,SAAWA,GAAU8d,EAAU7d,YAAcA,GACvDlH,KAAK6uE,uDAqGJ,IAAApkE,EAAAzK,KAAAukE,EACyBvkE,KAAKof,MAA3BnY,EADHs9D,EACGt9D,OAAQC,EADXq9D,EACWr9D,UADX6c,EAYD/jB,KAAKgkB,MATLgrD,EAHCjrD,EAGDirD,cACAv/D,EAJCsU,EAIDtU,MACAE,EALCoU,EAKDpU,OACA8gC,EANC1sB,EAMD0sB,eACAC,EAPC3sB,EAOD2sB,gBACAxvC,EARC6iB,EAQD7iB,KACAuc,EATCsG,EASDtG,KACA/W,EAVCqd,EAUDrd,UACA6pE,EAXCxsD,EAWDwsD,UAEJ,IAAKrvE,EAAM,OAAO,KAElB,IAAMkH,EAAOxI,IAAUqI,QAAQ/G,EAAKyB,KAAOzB,EAAKkH,KAC1CmZ,EAAM3hB,IAAU4I,WAAWJ,IAAS,GAEpCooE,EAAgB9pE,EAAY9G,IAAUqI,QAAQvB,EAAU/D,KAAO+D,EAAU0B,KAAO,KAChF8vB,EAAet4B,IAAU4I,WAAWgoE,GACpC72C,EAAY5E,aAAmB,CAAEtlB,MAAOghC,EAAgB9gC,OAAQ+gC,IAEhE+/B,EAAU9iD,aAAe1mB,EAAQC,GACjCwpE,EAAc3iD,aAAmB9mB,EAAQC,GACzCypE,EAAW/iD,aAAgB3mB,EAAQC,GACrC0pE,EAAanhE,EACbohE,EAAclhE,EAClB,GAAI6U,KAAKkC,IAAIkqD,EAAYC,GAAe,IAAK,CACzC,IAAMhhE,EAAQ,IAAM2U,KAAKkC,IAAIkqD,EAAYC,GAEzCA,EAAcA,GADdD,EAAaA,EAAaC,EAAc,IAAMrsD,KAAKC,MAAMmsD,EAAa/gE,IAC7B,IAAM2U,KAAKC,MAAMosD,EAAchhE,GAG5E,IAAIrL,EAAU,KACd,GAAIisE,EACAjsE,EACIkb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gCACXD,EAAAlf,EAAAmM,cAAA,SACIwzB,IAAKngC,KAAK++B,SACVpf,UAAU,oCACV4B,IAAKA,EACL1B,QAAS7f,KAAK+vE,mBACd/P,UAAQ,EACR1/B,UAAQ,EACR7wB,MAAOmhE,EACPjhE,OAAQkhE,EACR5Q,OAAQ,WACJx1D,EAAK6Z,SAAS,CAAEisD,WAAW,IAC3B1uE,KAAgBiH,aAAa,CACzBC,QAAS,iCAGjB+6B,UAAW,WACP,IAAMnR,EAASloB,EAAKs0B,SAASzR,QACzBqF,IACAA,EAAOjC,OAASR,KAAYQ,SAGpCwvC,QAAS,WACLr+D,KAAgBiH,aAAa,CACzBC,QAAS,kCAGjBq3D,QAAS,WACLv+D,KAAgBiH,aAAa,CACzBC,QAAS,kCAGjB+nE,eAAgB,WACZ,IAAMn+C,EAASloB,EAAKs0B,SAASzR,QACzBqF,GACA9wB,KAAgBiH,aAAa,CACzBC,QAAS,0BACT2nB,OAAQiC,EAAOjC,aAK7B6/C,KACIhvD,GAAO2W,EACLxY,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,uCAAwC,CAC1DqZ,gBAAiBJ,IAErBpY,IAAK2W,EACLtW,IAAI,GACJnS,MAAOmhE,EACPjhE,OAAQkhE,IAGZnxD,EAAAlf,EAAAmM,cAAA,OACIgT,UAAU,uCACV/S,MAAO,CACH6C,MAAOmhE,EACPjhE,OAAQkhE,YAM7B,GAAIH,EACPlsE,EACIkb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gCACXD,EAAAlf,EAAAmM,cAAA,SACIgT,UAAU,oCACV4B,IAAKA,EACL1B,QAAS7f,KAAK+vE,mBACdxvC,MAAI,EACJD,UAAQ,EACR7wB,MAAOmhE,EACPjhE,OAAQkhE,EACR5Q,OAAQ,WACJx1D,EAAK6Z,SAAS,CAAEisD,WAAW,QAGjCA,KACIhvD,GAAO2W,EACLxY,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,uCAAwC,CAC1DqZ,gBAAiBJ,IAErBpY,IAAK2W,EACLtW,IAAI,GACJnS,MAAOmhE,EACPjhE,OAAQkhE,IAGZnxD,EAAAlf,EAAAmM,cAAA,OACIgT,UAAU,uCACV/S,MAAO,CACH6C,MAAOmhE,EACPjhE,OAAQkhE,YAM7B,GAAIF,EAAU,CACjB,IAAMI,EAAiB,CACnBxwC,MAAM,EACNywC,UAAU,EAEVhC,cAAeA,EACfiC,iBAAkB,CACdC,oBAAqB,mBAGrBjB,EAAUjwE,KAAKgkB,MAAfisD,MAERzrE,EACIkb,EAAAlf,EAAAmM,cAAC+hE,GAAD,CACIvuC,IAAKngC,KAAKkwE,UACVD,MAAOA,EACPpnD,QAASkoD,EACTphE,OAAO,OACPF,MAAO,IACP0hE,WAAW,EACXC,UAAU,SAIlB5sE,EAAUkb,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,6BAA6B4B,IAAKA,EAAKK,IAAI,GAAG/B,QAAS7f,KAAK+vE,qBAGzF,OACIrwD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAC+S,EAAAlf,EAAMm0C,SAAP,CAAgBC,SAAS,IAAIpwC,GAE7Bkb,EAAAlf,EAAAmM,cAACwqB,GAAA,EAAD,CAAcj2B,KAAMA,EAAMy3B,OAAQ,IACjClb,GAAQA,EAAKxX,OAAS,GAAKyZ,EAAAlf,EAAAmM,cAAC0kE,GAAD,CAAc5zD,KAAMA,wDArU5B2B,EAAO4E,GAAO,IAClC/c,EAA4BmY,EAA5BnY,OAAQC,EAAoBkY,EAApBlY,UAAWgF,EAASkT,EAATlT,KAE3B,GAAIjF,IAAW+c,EAAM8hB,YAAc5+B,IAAc8c,EAAMqnD,cAAe,KAAAiG,EACtCr/D,YAAahL,EAAQC,EAAWgF,GADMqlE,EAAAzxE,OAAAm6C,EAAA,EAAAn6C,CAAAwxE,EAAA,GAC7D7hE,EAD6D8hE,EAAA,GACtD5hE,EADsD4hE,EAAA,GAC9CrwE,EAD8CqwE,EAAA,GAElErwE,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAFiC,IAAAswE,EAIfx/D,YAAoB/K,EAAQC,GAJbuqE,EAAA3xE,OAAAm6C,EAAA,EAAAn6C,CAAA0xE,EAAA,GAI7D/gC,EAJ6DghC,EAAA,GAI7C/gC,EAJ6C+gC,EAAA,GAI5B/qE,EAJ4B+qE,EAAA,GAKlE/qE,EAAY9G,IAAUsD,IAAIwD,EAAU/D,KAAO+D,EAE3C,IAAMnC,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GAGzC,MAAO,CACH+oE,MAAO,EACPnqC,WAAY7+B,EACZokE,cAAenkE,EACfqpE,WAAW,EACX9gE,MAAOA,EACPE,OAAQA,EACRzO,KAAMA,EACNuc,KAVSiO,aAAQnnB,GAWjBksC,eAAgBA,EAChBC,gBAAiBA,EACjBhqC,UAAWA,GAInB,OAAO,YAlEkBoZ,IAAMC,WCsBxB2xD,sNAhCXnsD,YAAc,SAAAja,GACVA,EAAMma,kBADa,IAAAtG,EAGWtf,EAAKuf,MAA3BgoB,EAHWjoB,EAGXioB,SAAUvnB,EAHCV,EAGDU,QAEdunB,GAEJvnB,EAAQvU,4EAGH,IAAAgV,EACoCtgB,KAAKof,MAAtCgoB,EADH9mB,EACG8mB,SAAUuqC,EADbrxD,EACaqxD,SAAUC,EADvBtxD,EACuBsxD,SAEtBjyD,EAAYe,IACd0mB,EAAW,+BAAiC,sBAC5C,CAAEyqC,+BAAgCF,IAGtC,OACIjyD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWA,EAAWE,QAAS7f,KAAKulB,aACpCqsD,UArBe9xD,IAAMC,YCyBvB+xD,4LAzBF,IAAA3yD,EACuBnf,KAAKof,MAAzBzE,EADHwE,EACGxE,MAAO+lC,EADVvhC,EACUuhC,SAEf,OACIhhC,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,4BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oCACXD,EAAAlf,EAAAmM,cAAA,YAAOgO,GAEHqC,QAAQ0jC,IACJhhC,EAAAlf,EAAAmM,cAAA,mBAEK+zC,YAZG5gC,IAAMC,YCCpCgyD,sNACFxsD,YAAc,SAAAja,GACVA,EAAMma,kBADa,IAAAtG,EAGWtf,EAAKuf,MAA3BS,EAHWV,EAGXU,QAHWV,EAGFioB,UAIjBvnB,EAAQvU,4EAGH,IAAAgV,EACmDtgB,KAAKof,MAArDqD,EADHnC,EACGmC,QAASmvD,EADZtxD,EACYsxD,SAAUrxD,EADtBD,EACsBC,QAAS6mB,EAD/B9mB,EAC+B8mB,SAAUzsB,EADzC2F,EACyC3F,MAE9C,OACI+E,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW0mB,EAAW,sCAAwC,6BAApDtnC,OAAAsmB,EAAA,EAAAtmB,CAAA,GAChBygB,EAAQkC,QAAUA,IAEvB9H,MAAOA,EACPkF,QAAS7f,KAAKulB,aACbqsD,UArBqB9xD,IAAMC,YAkC7BgB,OAxCA,SAAAC,GAAK,MAAK,CACrByB,QAAS,CACLV,MAAOf,EAAM0d,QAAQC,QAAQC,QAsCtB7d,CAAmBgxD,yBCvC5BC,GAAY,CACd5uD,QAAS,GACTrB,MAAO,SAGLkwD,eACF,SAAAA,EAAY7yD,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAiyE,IACfpyE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAmyE,GAAA9xE,KAAAH,KAAMof,KA4CVo/C,wBAA0B,SAAA79D,GAAU,IACxBqH,EAAWnI,EAAKmkB,MAAhBhc,OAEJA,IAAWrH,EAAOqH,QAClBnI,EAAKykB,SAAS,CACV8iB,SAAU6qC,EAA0BC,aAAalqE,MAlD1CnI,EA2DnB0lB,YAAc,SAAAja,GACVA,EAAMma,kBADa,IAGX5F,EAAYhgB,EAAKuf,MAAjBS,QACahgB,EAAKmkB,MAAlBojB,UAGRvnB,EAAQvU,IAlEO,IAGPtD,EAAWoX,EAAXpX,OAHO,OAKfnI,EAAKmkB,MAAQ,CACTmuD,gBAAiBnqE,EACjBA,OAAQA,EACRo/B,SAAU6qC,EAA0BC,aAAalqE,IARtCnI,mFA4BfD,IAAU0hB,GAAG,4BAA6BthB,KAAKw+D,yBAC/C5+D,IAAU0hB,GAAG,uBAAwBthB,KAAKw+D,yBAC1C5+D,IAAU0hB,GAAG,2BAA4BthB,KAAKw+D,yBAC9C5+D,IAAU0hB,GAAG,wBAAyBthB,KAAKw+D,yBAC3C5+D,IAAU0hB,GAAG,uBAAwBthB,KAAKw+D,yBAC1C5+D,IAAU0hB,GAAG,wBAAyBthB,KAAKw+D,wEAI3C5+D,IAAUoC,eAAe,4BAA6BhC,KAAKw+D,yBAC3D5+D,IAAUoC,eAAe,uBAAwBhC,KAAKw+D,yBACtD5+D,IAAUoC,eAAe,2BAA4BhC,KAAKw+D,yBAC1D5+D,IAAUoC,eAAe,wBAAyBhC,KAAKw+D,yBACvD5+D,IAAUoC,eAAe,uBAAwBhC,KAAKw+D,yBACtD5+D,IAAUoC,eAAe,wBAAyBhC,KAAKw+D,0DA2BlD,IACG7jD,EAAU3a,KAAKof,MAAfzE,MACAysB,EAAapnC,KAAKgkB,MAAlBojB,SAER,OACI1nB,EAAAlf,EAAAmM,cAACylE,GAAD,CAAyBhrC,SAAUA,EAAUzsB,MAAOA,EAAOkF,QAAS7f,KAAKulB,aACrE7F,EAAAlf,EAAAmM,cAAC0lE,GAAA7xE,EAAD,CAAUoM,MAAOolE,yDA/DG5yD,EAAO4E,GAAO,IAClChc,EAAWoX,EAAXpX,OAGR,OAAIA,IAFwBgc,EAApBmuD,gBAGG,CACHA,gBAAiBnqE,EACjBA,OAAQA,EACRo/B,SAAU6qC,EAA0BC,aAAalqE,IAIlD,YAzByB8X,IAAMC,WAAxCkyD,GAwDKC,aAAe,SAAAlqE,GAClB,OAAQgV,QAAQpd,IAAUqI,QAAQD,KA+B3BiqE,UC7CTK,WAAmB,CACrBlvD,QAAS,GACTmvD,UAAW,eAGTP,GAAY,CACd5uD,QAAS,IAGPovD,GAAsB,CACxBpvD,QAAS,IAGPqvD,eACF,SAAAA,EAAYrzD,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAyyE,IACf5yE,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA2yE,GAAAtyE,KAAAH,KAAMof,KA4FV8rB,UAAY,SAAA5/B,GACR,GAAsB,KAAlBA,EAAMu9B,QAAgB,CAEtB,GADqChpC,EAAKmkB,MAAlC0uD,yBACsB,OAE9B7yE,EAAKguC,mBACoB,KAAlBviC,EAAMu9B,QACbhpC,EAAKg/D,aACoB,KAAlBvzD,EAAMu9B,SACbhpC,EAAK8yE,kBAtGM9yE,EA0GnBqkE,uBAAyB,SAAAvjE,GAAU,IACvB0F,EAAkD1F,EAAlD0F,QAAS6X,EAAyCvd,EAAzCud,WAAYK,EAA6B5d,EAA7B4d,YAAaD,EAAgB3d,EAAhB2d,YAClCrX,EAAWpH,EAAKuf,MAAhBnY,OAFuB8c,EAGUlkB,EAAKmkB,MAAtC4uD,EAHuB7uD,EAGvB6uD,iBAAkB1gD,EAHKnO,EAGLmO,WAE1B,GAAIjrB,IAAWZ,EAAf,CAEA,IAAM9B,EAAUmJ,KAAaxK,IAAImD,EAAS6X,GAC1C,GAAK3Z,EAAL,CAKA,GAHA8N,YAAuB,CAAC9N,IAELmpB,aAAenP,KAAiBmP,aAAepP,GAClD,CACZ,GACIze,EAAK4S,QAAQxM,QAAU,IACtBpG,EAAKgzE,kBACFC,aAAQ50D,EAAYre,EAAK4S,QAAQ,GAAG9P,GAAI9C,EAAK4S,QAAQ5S,EAAK4S,QAAQxM,OAAS,GAAGtD,KACpF,CAGE,IAFA,IAAIowE,GAAW,EACXtgE,EAAU,GACL1M,EAAI,EAAGA,EAAIlG,EAAK4S,QAAQxM,OAAQF,IACjClG,EAAK4S,QAAQ1M,GAAGpD,GAAKub,EACrBzL,EAAQhJ,KAAK5J,EAAK4S,QAAQ1M,KAErBgtE,IACDA,GAAW,EACXtgE,EAAQhJ,KAAKlF,IAEjBkO,EAAQhJ,KAAK5J,EAAK4S,QAAQ1M,KAGlClG,EAAK4S,QAAUA,EAGnB,IAAMD,EAAQ3S,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IACnD/yE,EAAKykB,SAAS,CACV0uD,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,GACxC0f,WAAYA,EAAa,IAKjC,IADuBxE,aAAenP,IAAgBmP,aAAepP,GAClD,CACf,IAAI40D,EAAarzE,EAAK4S,QAGtB,GAFA5S,EAAK4S,QAAU5S,EAAK4S,QAAQ9G,OAAO,SAAAD,GAAC,OAAIA,EAAE/I,KAAOub,IAE7C00D,IAAqB10D,EAAY,CACjC,IAAMi1D,EAAY,IAAI9pE,IACtB8pE,EAAUlyE,IAAIid,EAAYA,GAE1Bre,EAAKmxB,gBAAgBkiD,EAAYC,GACjCtzE,EAAKykB,SAAS,CACV4N,WAAY1N,KAAKkC,IAAIwL,EAAa,EAAG,SAEtC,CACH,IAAM1f,EAAQ3S,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IACnD/yE,EAAKykB,SAAS,CACV0uD,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,GACxC0f,WAAY1N,KAAKkC,IAAIwL,EAAa,EAAG,UAvKlCryB,EA6KnB2pE,uBAAyB,SAAA7oE,GAAU,IACvB0F,EAAuC1F,EAAvC0F,QAASwF,EAA8BlL,EAA9BkL,YAAa49D,EAAiB9oE,EAAjB8oE,aACtBxiE,EAAWpH,EAAKuf,MAAhBnY,OAFuBu7B,EAGU3iC,EAAKmkB,MAAtC4uD,EAHuBpwC,EAGvBowC,iBAAkB1gD,EAHKsQ,EAGLtQ,WAE1B,GAAKu3C,GACDxiE,IAAWZ,EAAf,CAEA,IAAM8sE,EAAYtnE,EAAYuhB,OAAO,SAACC,EAAa+lD,GAE/C,OADA/lD,EAAYpsB,IAAImyE,EAAWA,GACpB/lD,GACR,IAAIhkB,KAED6pE,EAAarzE,EAAK4S,QACpB4gE,EAAeH,EAAWjtE,OAE9BpG,EAAK4S,QAAU5S,EAAK4S,QAAQ9G,OAAO,SAAAD,GAAC,OAAKynE,EAAUpwE,IAAI2I,EAAE/I,MACzD0wE,GAAgBxzE,EAAK4S,QAAQxM,OAE7BpG,EAAKykB,SAAS,CAAE4N,WAAY1N,KAAKkC,IAAIwL,EAAamhD,EAAc,KAE3DxzE,EAAK4S,QAAQxM,OAKdktE,EAAUpwE,IAAI6vE,IACd/yE,EAAKmxB,gBAAgBkiD,EAAYC,GALjCh7D,KAAiBwW,sBAAsB,QAnM5B9uB,EA4MnBwpE,mBAAqB,SAAA1oE,GAAU,IACnBsG,EAAWpH,EAAKuf,MAAhBnY,OADmBw7B,EAEc5iC,EAAKmkB,MAAtC4uD,EAFmBnwC,EAEnBmwC,iBAAkB1gD,EAFCuQ,EAEDvQ,WAElB3tB,EAAY5D,EAAZ4D,QACR,GAAKA,GACAmpB,aAAenpB,EAAQC,UAExBD,EAAQ8B,UAAYY,GACnBpH,EAAKgzE,iBAAV,CAEAhzE,EAAK4S,QAAU,CAAClO,GAAS0G,OAAOpL,EAAK4S,SACrC,IAAMD,EAAQ3S,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IAEnD/yE,EAAKykB,SAAS,CACV0uD,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,GACxC0f,WAAYA,EAAa,MA7NdryB,EAiOnByzE,UAAY,SAACrsE,EAAQC,GACjB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,KAFU,IAIvBC,EAAYD,EAAZC,QACR,IAAKA,EAAS,OAAO,KAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,MAAO,CACHuE,QAAS,iCAGjB,IAAK,eAKL,IAAK,eACD,MAAO,CACHA,QAAS,qCAGjB,QACI,OAAO,OAzPAlJ,EA8PnB0zE,YA9PmBzzE,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KA8PL,SAAAC,IAAA,IAAAye,EAAAlY,EAAAC,EAAAyE,EAAAvB,EAAAwoE,EAAApgE,EAAAghE,EAAAC,EAAAh6D,EAAAi6D,EAAA,OAAAzkD,EAAAzuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,UAAAoe,EACoBtf,EAAKuf,MAA3BnY,EADEkY,EACFlY,OAAQC,EADNiY,EACMjY,UAEVyE,EAAS9L,EAAKyzE,UAAUrsE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVwkB,YAAa,IAEbrmB,EAVM,CAAAxJ,EAAApB,KAAA,eAAAoB,EAAApB,KAAA,EAWSc,KAAgBiJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACTkrB,MAAO,GACP/gB,eAAgB,EAChBghB,gBAAiBlrB,EACjBgkB,QAASyoD,IACTthD,MAAO,EAAIshD,IACXhoE,OAAQA,IAnBN,OAWNvB,EAXMjI,EAAA6I,KAAA,UAuBVmiB,aAAe/iB,EAAQvK,EAAK4S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B3N,EAAK4S,QAAUrI,EAAOoD,SACtB3N,EAAKgzE,iBAA8C,IAA3BzoE,EAAOoD,SAASvH,OAEhC2sE,EAAqB/yE,EAAKmkB,MAA1B4uD,iBACFpgE,EAAQ3S,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IAEnD/yE,EAAKykB,SAAS,CACV0uD,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,MAG7B,IAAXA,EArCM,CAAArQ,EAAApB,KAAA,SAsCNlB,EAAK4S,QAAU,CAAC/E,KAAaxK,IAAI+D,EAAQ2rE,IACzClgE,YAA0B,EAAG7S,EAAK4S,SAvC5BtQ,EAAApB,KAAA,oBAyCN2R,YAA0BF,EAAO3S,EAAK4S,SAEhC9G,EAAS9L,EAAKyzE,UAAUrsE,EAAQC,GA3ChC,CAAA/E,EAAApB,KAAA,gBAAAoB,EAAAd,OAAA,kBA8CAoyE,EAAW,KACbh6D,EAAQ,EA/CNi6D,EAAAzkD,EAAAzuB,EAAAC,KAAA,SAAAizE,IAAA,IAAAtpE,EAAAwoE,EAAApgE,EAAA,OAAAyc,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAiDmBc,KAAgBiJ,KAAK,CACtC/B,QAAS,qBACT1C,QAASY,EACTkrB,MAAO,GACP/gB,eAAgB,EAChBghB,gBAAiBvyB,EAAK4S,QAAQxM,OAAS,EAAIpG,EAAK4S,QAAQ,GAAG9P,GAAK,EAChEuoB,QAAS,GACTmH,MAAO,IACP1mB,OAAQA,IAzDV,OAiDIvB,EAjDJvJ,EAAAmK,KA2DFyO,GAASrP,EAAOoD,SAASvH,OAEzBknB,aAAe/iB,EAAQvK,EAAK4S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B3N,EAAK4S,QAAUrI,EAAOoD,SAASvC,OAAOpL,EAAK4S,SAC3C5S,EAAKgzE,iBAA8C,IAA3BzoE,EAAOoD,SAASvH,OAEhC2sE,EAAqB/yE,EAAKmkB,MAA1B4uD,iBACFpgE,EAAQ3S,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IAEnD/yE,EAAKykB,SAAS,CACV0uD,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,GACxCqgE,iBAAkBhzE,EAAKgzE,iBACvB3gD,WAAY9nB,EAAO4nB,cA1ErB,yBAAAnxB,EAAAU,SAAAmyE,KAAA,WAgDE7zE,EAAKgzE,oBAAoBp5D,EAAQg6D,GAhDnC,CAAAtxE,EAAApB,KAAA,gBAAAoB,EAAAyxE,cAAAF,IAAA,iBAAAvxE,EAAApB,KAAA,kCAAAoB,EAAAZ,SAAAb,MA9PKb,EA8UnBguC,YAAc,WACV11B,KAAiBwW,sBAAsB,MADvB,IAGRikD,EAAqB/yE,EAAKmkB,MAA1B4uD,iBACFpgE,EAAQ3S,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,KACpC,IAAXpgE,GACAD,YAAgCC,EAAO3S,EAAK4S,UApVjC5S,EAwVnBg0E,cAAgB,SAACpvE,EAAWF,GACxB,GAAKA,EAAL,CADoC,IAE5B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAK8B,EAAL,CAJoC,IAMjBvD,EAAoBuD,EAA/BA,UAAiBopB,EAAcppB,EAAdopB,UACzB,GAAK3sB,EAAL,CAPoC,IASxB8G,EAAW9G,EAAfyB,GAER+O,YAAexQ,EAAM2sB,GAAalrB,EAAI4B,EAAS,kBAAM3E,IAAUkI,oBAAoBzB,EAAS1D,EAAIqF,SAnWjFnI,EAsWnBi0E,aAAe,SAAC/uE,EAAUR,GACtB,GAAKA,EAAL,CADkC,IAE1B8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAKoC,EAAL,CAJkC,IAMhB7D,EAAoB6D,EAA9BA,SAAgB8oB,EAAc9oB,EAAd8oB,UACxB,GAAK3sB,EAAL,CAPkC,IAStB8G,EAAW9G,EAAfyB,GAER+O,YAAexQ,EAAM2sB,GAAalrB,EAAI4B,EAAS,kBAAM3E,IAAUgH,mBAAmBP,EAAS1D,EAAIqF,SAjXhFnI,EAoXnBk0E,UAAY,SAACxuE,EAAOhB,GAChB,GAAKA,EAAL,CAD4B,IAEpB8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAK4C,EAAL,CAJ4B,IAMbrE,EAAoBqE,EAA3BA,MAAasoB,EAActoB,EAAdsoB,UACrB,GAAK3sB,EAAL,CAP4B,IAShB8G,EAAW9G,EAAfyB,GAER+O,YAAexQ,EAAM2sB,GAAalrB,EAAI4B,EAAS,kBAAM3E,IAAUgI,gBAAgBvB,EAAS1D,EAAIqF,SA/X7EnI,EAkYnBm0E,UAAY,SAACnvE,EAAON,GAChB,GAAKA,EAAL,CAD4B,IAEpB8B,EAAgB9B,EAAhB8B,QAAS1D,EAAO4B,EAAP5B,GAEjB,GAAKkC,EAAL,CAEA,IAAMqB,EAAY8J,aAAQnL,EAAMmB,MAAOiK,KACvC,GAAK/J,EAAL,CAP4B,IASbhF,EAASgF,EAAhBrB,MACR,GAAK3D,EAAL,CAV4B,IAYhB8G,EAAW9G,EAAfyB,GAER+O,YAAexQ,EAAMA,EAAKyB,GAAK,OAAQ4B,EAAS,kBAAM3E,IAAUwG,gBAAgBC,EAAS1D,EAAIqF,UAhZ9EnI,EAmZnBo0E,WAAa,WAAM,IACPhtE,EAAWpH,EAAKuf,MAAhBnY,OACA2rE,EAAqB/yE,EAAKmkB,MAA1B4uD,iBAEFruE,EAAUmJ,KAAaxK,IAAI+D,EAAQ2rE,GACzC,GAAKruE,EAAL,CALe,IAOPC,EAAYD,EAAZC,QACR,GAAKA,EAEL,OAAQA,EAAQ,UACZ,IAAK,mBAAoB,IACbC,EAAcD,EAAdC,UAER5E,EAAKg0E,cAAcpvE,EAAWF,GAC9B,MAEJ,IAAK,yBAA0B,IACnBM,EAAUL,EAAVK,MAERhF,EAAKm0E,UAAUnvE,EAAON,GACtB,MAEJ,IAAK,kBAAmB,IACZQ,EAAaP,EAAbO,SAERlF,EAAKi0E,aAAa/uE,EAAUR,GAC5B,MAEJ,IAAK,eAAgB,IACTM,EAAUL,EAAVK,MAERhF,EAAKm0E,UAAUnvE,EAAON,GACtB,MAEJ,IAAK,cAAe,IACRe,EAAad,EAAbc,SACR,IAAKA,EAAU,OAFC,IAIRb,EAAsCa,EAAtCb,UAAWM,EAA2BO,EAA3BP,SAAUF,EAAiBS,EAAjBT,MAAOU,EAAUD,EAAVC,MAEpC,GAAId,EAEA,YADA5E,EAAKg0E,cAAcpvE,EAAWF,GAIlC,GAAIQ,EAEA,YADAlF,EAAKi0E,aAAa/uE,EAAUR,GAIhC,GAAIM,EAEA,YADAhF,EAAKm0E,UAAUnvE,EAAON,GAI1B,GAAIgB,EAEA,YADA1F,EAAKk0E,UAAUxuE,EAAOhB,GAG1B,MAEJ,IAAK,eAAgB,IACTgB,EAAUf,EAAVe,MAER1F,EAAKk0E,UAAUxuE,EAAOhB,MApdf1E,EA0dnBs3D,cAAgB,WAAM,IACVlwD,EAAWpH,EAAKuf,MAAhBnY,OACA2rE,EAAqB/yE,EAAKmkB,MAA1B4uD,iBAER/wE,KAAgBiH,aAAa,CACzBC,QAAS,sBACTuxC,KAAM,CACFrzC,OAAQA,EACRsG,WAAY,CAACqlE,OAleN/yE,EAuenBqpC,aAAe,WACXrpC,EAAKq0E,oBAxeUr0E,EAigBnBozE,iBAAmB,SAAAzgE,GACf,OAAe,IAAXA,GAEcA,EAAQ,EACP3S,EAAK4S,QAAQxM,QArgBjBpG,EAwgBnB8yE,eAAiB,SAAArnE,GACTA,GACAA,EAAMma,kBAFY,IAKdmtD,EAAqB/yE,EAAKmkB,MAA1B4uD,iBAEFjhD,EADQ9xB,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IACzB,EAE1B,OAAO/yE,EAAKs0E,UAAUxiD,EAAW,WACzBA,IAAc9xB,EAAK4S,QAAQxM,OAAS,GACpCpG,EAAKu0E,kBAnhBEv0E,EAwhBnBu0E,aAxhBmBt0E,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAwhBJ,SAAAyB,IAAA,IAAAimB,EAAAlhB,EAAAC,EAAA0rE,EAAAjnE,EAAAvB,EAAAoI,EAAA,OAAAyc,EAAAzuB,EAAAI,KAAA,SAAAsqD,GAAA,cAAAA,EAAApqD,KAAAoqD,EAAAnqD,MAAA,UAAAonB,EACmBtoB,EAAKuf,MAA3BnY,EADGkhB,EACHlhB,OAAQC,EADLihB,EACKjhB,UACR0rE,EAAqB/yE,EAAKmkB,MAA1B4uD,iBAEFjnE,EAAS9L,EAAKyzE,UAAUrsE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVwkB,YAAa,IAEbrmB,EAXO,CAAAu/C,EAAAnqD,KAAA,eAAAmqD,EAAAnqD,KAAA,EAYQc,KAAgBiJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACTkrB,MAAO,GACP/gB,eAAgB,EAChBghB,gBAAiBwgD,EACjB1nD,OAAQ,EACRmH,MAAOshD,IACPhoE,OAAQA,IApBL,OAYPvB,EAZO8gD,EAAAlgD,KAAA,OAwBXmiB,aAAe/iB,EAAQvK,EAAK4S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B3N,EAAK4S,QAAU5S,EAAK4S,QAAQxH,OAAOb,EAAOoD,UAEpCgF,EAAQ3S,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IAEnD/yE,EAAKykB,SAAS,CACV0uD,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,GACxC0f,WAAY9nB,EAAO4nB,cAlCZ,yBAAAk5B,EAAA3pD,SAAAW,MAxhBIrC,EA8jBnBmzE,aAAe,SAAAxgE,GACX,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAlkBL3S,EAqkBnBg/D,WAAa,SAAAvzD,GACLA,GACAA,EAAMma,kBAFQ,IAKVmtD,EAAqB/yE,EAAKmkB,MAA1B4uD,iBAEFjhD,EADQ9xB,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IACzB,EAE1B,OAAO/yE,EAAKs0E,UAAUxiD,EAAW,WACX,IAAdA,GACA9xB,EAAKw0E,cAhlBEx0E,EAqlBnBw0E,SArlBmBv0E,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAqlBR,SAAAwqD,IAAA,IAAAtiC,EAAA1hB,EAAAC,EAAA0rE,EAAAjnE,EAAAvB,EAAAoI,EAAA,OAAAyc,EAAAzuB,EAAAI,KAAA,SAAAiK,GAAA,cAAAA,EAAA/J,KAAA+J,EAAA9J,MAAA,UAAA4nB,EACuB9oB,EAAKuf,MAA3BnY,EADD0hB,EACC1hB,OAAQC,EADTyhB,EACSzhB,UACR0rE,EAAqB/yE,EAAKmkB,MAA1B4uD,iBAEFjnE,EAAS9L,EAAKyzE,UAAUrsE,EAAQC,GAElCkD,EAAS,CACTrB,QAAS,WACTyE,SAAU,GACVwkB,YAAa,IAEbrmB,EAXG,CAAAd,EAAA9J,KAAA,eAAA8J,EAAA9J,KAAA,EAYYc,KAAgBiJ,KAAK,CAChC/B,QAAS,qBACT1C,QAASY,EACTkrB,MAAO,GACP/gB,eAAgB,EAChBghB,gBAAiBwgD,EACjB1nD,QAASyoD,IACTthD,MAAOshD,IAAoB,EAC3BhoE,OAAQA,IApBT,OAYHvB,EAZGS,EAAAG,KAAA,OAwBPmiB,aAAe/iB,EAAQvK,EAAK4S,SAC5B/E,KAAaC,SAASvD,EAAOoD,UAE7B3N,EAAKgzE,iBAA8C,IAA3BzoE,EAAOoD,SAASvH,OACxCpG,EAAK4S,QAAUrI,EAAOoD,SAASvC,OAAOpL,EAAK4S,SAErCD,EAAQ3S,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IAEnD/yE,EAAKykB,SAAS,CACV0uD,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,GACxCqgE,iBAAkBhzE,EAAKgzE,iBACvB3gD,WAAY9nB,EAAO4nB,cApChB,yBAAAnnB,EAAAtJ,SAAA0pD,MArlBQprD,EA6nBnBs0E,UAAY,SAAC3hE,EAAOlJ,GAChB,QAAIkJ,EAAQ,OACRA,GAAS3S,EAAK4S,QAAQxM,UAE1BpG,EAAKykB,SACD,CACIsuD,iBAAkB/yE,EAAK4S,QAAQD,GAAO7P,GACtCqwE,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,IAE5ClJ,GAGJoJ,YAA0BF,EAAO3S,EAAK4S,UAC/B,KA3oBQ5S,EA8oBnBmxB,gBAAkB,SAACkiD,EAAYC,GAK3B,IALyC,IACjCP,EAAqB/yE,EAAKmkB,MAA1B4uD,iBAEFpgE,EAAQ0gE,EAAW1hD,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,IAC7C0B,EAAS,EACJvuE,EAAIyM,EAAQ,EAAGzM,GAAK,EAAGA,IAC5B,GAAIotE,IAAcA,EAAUpwE,IAAImwE,EAAWntE,GAAGpD,IAAK,CAC/C2xE,EAASpB,EAAWntE,GAAGpD,GACvB,MAGR,IAAK2xE,EACD,IAAK,IAAIvuE,EAAIyM,EAAQ,EAAGzM,EAAImtE,EAAWjtE,OAAQF,IAC3C,GAAIotE,IAAcA,EAAUpwE,IAAImwE,EAAWntE,GAAGpD,IAAK,CAC/C2xE,EAASpB,EAAWntE,GAAGpD,GACvB,MAKZ,GAAK2xE,EAAL,CAEA,IAAM3iD,EAAY9xB,EAAK4S,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAO2xE,IAEvD,OAAOz0E,EAAKs0E,UAAUxiD,EAAW,WACX,IAAdA,EACA9xB,EAAKw0E,WACE1iD,IAAc9xB,EAAK4S,QAAQxM,OAAS,GAC3CpG,EAAKu0E,mBA1qBEv0E,EA+qBnBq0E,iBAAmB,WACfr0E,EAAKykB,SAAS,CAAEouD,0BAA0B,KAhrB3B7yE,EAmrBnB00E,kBAAoB,WAChB10E,EAAKykB,SAAS,CAAEouD,0BAA0B,KAprB3B7yE,EAurBnBswD,WAAa,WACTtwD,EAAKykB,SAAS,CAAEouD,0BAA0B,IAD3B,IAGPzrE,EAAWpH,EAAKuf,MAAhBnY,OAHO67B,EAI4BjjC,EAAKmkB,MAAxC4uD,EAJO9vC,EAIP8vC,iBAAkB4B,EAJX1xC,EAIW0xC,aAEpBjwE,EAAUmJ,KAAaxK,IAAI+D,EAAQ2rE,GACzC,GAAKruE,EAAL,CAPe,IASP4zD,EAA+D5zD,EAA/D4zD,6BAA8BrB,EAAiCvyD,EAAjCuyD,8BACjBqB,GAAgCrB,IAGrDj1D,KAAgBiJ,KAAK,CACjB/B,QAAS,iBACT1C,QAASY,EACT4E,YAAa,CAAC+mE,GACd9mE,OAAQgrD,GAAgC0d,MAxsB7B30E,EA4sBnB40E,yBAA2B,SAAAnpE,GACvBzL,EAAKykB,SAAS,CAAEkwD,aAAclpE,EAAMC,OAAOkX,WA7sB5B5iB,EAgtBnB60E,mBAAqB,WAAM,IAGnBC,EAAiB,uBACrB,OAHuB90E,EAAKmkB,MAApBmV,YAIJ,IAAK,uBACDw7C,EAAiB,oBACjB,MAEJ,IAAK,oBACDA,EAAiB,qBACjB,MAEJ,IAAK,qBACDA,EAAiB,uBAKzB90E,EAAKykB,SAAS,CACV6U,WAAYw7C,KApuBD90E,EAwuBnB+0E,kBAAoB,WAChB,GAAK/0E,EAAKg1E,WAAV,CADsB,IAGdvnD,EAAYztB,EAAKg1E,WAAjBvnD,QACR,GAAKA,EAAL,CAJsB,IAOhBwnD,EADYj1E,EAAKmkB,MAAfisD,MACkB,EAAI,EAAI,GAElCpwE,EAAKykB,SAAS,CAAE2rD,MAAO6E,IAEvBxnD,EAAQ0iD,YAAY8E,MAnvBLj1E,EAsvBnBu4D,eAAiB,SAACnxD,EAAQC,GACtB,IAAM3C,EAAUmJ,KAAaxK,IAAI+D,EAAQC,GACzC,IAAK3C,EAAS,OAAO,EAFe,IAI5B02C,EAA8B12C,EAA9B02C,iBAAkBz2C,EAAYD,EAAZC,QAC1B,IAAKA,EAAS,OAAO,EAErB,OAAQA,EAAQ,UACZ,IAAK,yBACD,OAAO,EAEX,QACI,OAAOy2C,IA/vBfp7C,EAAKg1E,WAAa/0D,IAAMggB,YACxBjgC,EAAK4S,QAAU,GAJA,IAAAqvB,EAMejiC,EAAKuf,MAA3BnY,EANO66B,EAMP76B,OAAQC,EAND46B,EAMC56B,UAND,OAQfrH,EAAKmkB,MAAQ,CACTisD,MAAO,EACP92C,WAAY,uBACZ2M,WAAY7+B,EACZokE,cAAenkE,EACf0rE,iBAAkB1rE,EAClB8rE,cAAc,EACdC,kBAAkB,EAClBP,0BAA0B,EAC1B8B,cAAc,GAjBH30E,qFAqBG8kB,EAAWC,GAAW,IAAA+e,EACV3jC,KAAKof,MAA3BnY,EADgC08B,EAChC18B,OAAQC,EADwBy8B,EACxBz8B,UADwB67B,EAWpC/iC,KAAKgkB,MARLmV,EAHoC4J,EAGpC5J,WACAy5C,EAJoC7vC,EAIpC6vC,iBACAF,EALoC3vC,EAKpC2vC,yBACAG,EANoC9vC,EAMpC8vC,iBACAG,EAPoCjwC,EAOpCiwC,aACAC,EARoClwC,EAQpCkwC,iBACAhD,EAToCltC,EASpCktC,MACA/9C,EAVoC6Q,EAUpC7Q,WAGJ,OAAItN,EAAUuU,aAAeA,IAIzBxU,EAAU1d,SAAWA,IAIrB0d,EAAUzd,YAAcA,IAIxB0d,EAAUguD,mBAAqBA,IAI/BhuD,EAAUmwD,kBAAoB9B,IAI9BruD,EAAUouD,eAAiBA,IAI3BpuD,EAAUiuD,mBAAqBA,IAI/BjuD,EAAUsN,aAAeA,IAIzBtN,EAAU8tD,2BAA6BA,GAIvC9tD,EAAUqrD,QAAUA,sDAQxBjwE,KAAKuzE,cAELxuE,SAAS6iE,iBAAiB,UAAW5nE,KAAKkrC,WAAW,GACrDx9B,KAAa4T,GAAG,uBAAwBthB,KAAKwpE,wBAC7C97D,KAAa4T,GAAG,mBAAoBthB,KAAKqpE,oBACzC37D,KAAa4T,GAAG,uBAAwBthB,KAAKkkE,uEAI7Cn/D,SAAS+iE,oBAAoB,UAAW9nE,KAAKkrC,WAAW,GACxDx9B,KAAa1L,eAAe,uBAAwBhC,KAAKwpE,wBACzD97D,KAAa1L,eAAe,mBAAoBhC,KAAKqpE,oBACrD37D,KAAa1L,eAAe,uBAAwBhC,KAAKkkE,yDA6qBpD,IAAAI,EACiBtkE,KAAKof,MAAnBnY,EADHq9D,EACGr9D,OAAQsQ,EADX+sD,EACW/sD,EADXy9D,EAYDh1E,KAAKgkB,MATLmV,EAHC67C,EAGD77C,WACAy5C,EAJCoC,EAIDpC,iBACAF,EALCsC,EAKDtC,yBACA8B,EANCQ,EAMDR,aACA3B,EAPCmC,EAODnC,iBACAG,EARCgC,EAQDhC,aACAC,EATC+B,EASD/B,iBACAhD,EAVC+E,EAUD/E,MACA/9C,EAXC8iD,EAWD9iD,WAGA1f,GAAS,EACT0f,GAAc2gD,IACdrgE,EAAQxS,KAAKyS,QAAQ+e,UAAU,SAAA9lB,GAAC,OAAIA,EAAE/I,KAAOiwE,KAEjD,IAAMa,EAAWjvD,KAAKkC,IAAI1mB,KAAKyS,QAAQxM,OAAQisB,GAEzC3tB,EAAUmJ,KAAaxK,IAAI+D,EAAQ2rE,GACjC9b,EAA+DvyD,EAA/DuyD,6BAA8BqB,EAAiC5zD,EAAjC4zD,6BAEhCP,EAAed,GAAgCqB,EAC/CC,EAAiBp4D,KAAKo4D,eAAenxD,EAAQ2rE,GAE/CqC,EAA4B,GAE5BA,EADAtnD,aAAe1mB,EAAQ2rE,GACKr7D,EAAE,yBACvBwW,aAAmB9mB,EAAQ2rE,GACNr7D,EAAE,uBAEFA,EAAE,yBAElC,IAAM29D,EAAqBxC,EACvBhzD,EAAAlf,EAAAmM,cAACsd,EAAAzpB,EAAD,CACI0pB,mBAAoB,EACpBhgB,KAAMwoE,EACNnpD,QAASvpB,KAAKu0E,kBACdpqD,kBAAgB,qBAChBzK,EAAAlf,EAAAmM,cAACyd,EAAA5pB,EAAD,CAAamC,GAAG,qBAAqB4U,EAAE,YACvCmI,EAAAlf,EAAAmM,cAAC0d,GAAA7pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC2d,GAAA9pB,EAAD,KAAoBy0E,GACnBne,GACGp3C,EAAAlf,EAAAmM,cAACmhD,GAAAttD,EAAD,CACIgmD,MAAOjvC,EAAE,gBACTw2C,QACIruC,EAAAlf,EAAAmM,cAACmsD,GAAAt4D,EAAD,CAAUuhB,MAAM,UAAUvM,MAAM,YAAY4M,SAAUpiB,KAAKy0E,2BAE/DhyD,QAAS+xD,KAIrB90D,EAAAlf,EAAAmM,cAAC4d,EAAA/pB,EAAD,KACIkf,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKu0E,kBAAmBxyD,MAAM,WAC1CxK,EAAE,WAEPmI,EAAAlf,EAAAmM,cAAC6d,EAAAhqB,EAAD,CAAQqf,QAAS7f,KAAKmwD,WAAYpuC,MAAM,WACnCxK,EAAE,SAIf,KA9DCu3D,EAgEyB78D,YAAahL,EAAQ2rE,EAAkB3iE,KAhEhE8+D,EAAAjvE,OAAAm6C,EAAA,EAAAn6C,CAAAgvE,EAAA,GAgEiB5tE,GAhEjB6tE,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAkEC/mE,EAAS9G,EAAOA,EAAKyB,GAAK,EAC5BgY,EAAQpD,EAAE,eASd,OARIoW,aAAe1mB,EAAQ2rE,GACvBj4D,EAAQpD,EAAE,eACHwW,aAAmB9mB,EAAQ2rE,GAClCj4D,EAAQpD,EAAE,aACHqW,aAAgB3mB,EAAQ2rE,KAC/Bj4D,EAAQ,IAIR+E,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAW,eAAgByY,IACtC+7C,EACDx1D,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,4BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oCACfD,EAAAlf,EAAAmM,cAACwoE,GAAD,CAAmB/tC,UAAW6rC,EAAkBtB,UAAQ,EAAC9xD,QAAS7f,KAAK2yE,gBACnEjzD,EAAAlf,EAAAmM,cAACyoE,GAAA50E,EAAD,CAAoBshB,SAAS,QAAQlV,MAAO4lE,MAEhD9yD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,qCAGnBD,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,8BAA+B,CAAE20D,iBAAkBrC,IACzEnzD,QAAS7f,KAAK6+D,YACdn/C,EAAAlf,EAAAmM,cAAC2oE,GAAD,CACIn1C,IAAKngC,KAAK60E,WACV5tE,OAAQA,EACRC,UAAW0rE,EACX1mE,KAAM+D,IACN4P,QAAS7f,KAAK6+D,cAItBn/C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,6BACXD,EAAAlf,EAAAmM,cAACwoE,GAAD,CAAmBt1D,QAAS7f,KAAK6tC,aAC7BnuB,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,CAAWshB,SAAS,QAAQlV,MAAO4lE,MAEvC9yD,EAAAlf,EAAAmM,cAACwoE,GAAD,CAAmB/tC,UAAW4rC,EAAcrB,UAAQ,EAAC9xD,QAAS7f,KAAK6+D,YAC/Dn/C,EAAAlf,EAAAmM,cAAC4oE,GAAA/0E,EAAD,CAAkBshB,SAAS,QAAQlV,MAAO4lE,MAE9C9yD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sCAGvBD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAAC6oE,GAAD,CAAoBvuE,OAAQA,EAAQC,UAAW0rE,IAC/ClzD,EAAAlf,EAAAmM,cAAC8oE,GAAD,CACI96D,MAAOA,EACP+lC,SAAU+yB,GAAYjhE,GAAS,EAArB,GAAAvH,OAA4BwoE,EAAWjhE,EAAvC,QAAAvH,OAAmDwoE,GAAa,OAE7E7lD,aAAgB3mB,EAAQ2rE,IACrBlzD,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAACylE,GAAD,CACIz3D,MAAOpD,EAAE,eACTkL,QAASwtD,EAAQ,EACjBpwD,QAAS7f,KAAK40E,mBACdl1D,EAAAlf,EAAAmM,cAAC+oE,GAAAl1E,EAAD,CAAqBoM,MAAOolE,MAEhCtyD,EAAAlf,EAAAmM,cAACylE,GAAD,CACIz3D,MAAOpD,EAAE,yBACTsI,QAAS7f,KAAK00E,oBACdh1D,EAAAlf,EAAAmM,cAACgpE,GAAAn1E,EAAD,CAAkBoM,MAAOolE,OAIrCtyD,EAAAlf,EAAAmM,cAACipE,GAAD,CAA2Bj7D,MAAOpD,EAAE,QAASvP,OAAQA,EAAQ6X,QAAS7f,KAAKi0E,aAC3Ev0D,EAAAlf,EAAAmM,cAACylE,GAAD,CACIz3D,MAAOpD,EAAE,WACT6vB,UAAWgxB,EACXv4C,QAAS7f,KAAKm3D,eACdz3C,EAAAlf,EAAAmM,cAAC6iC,GAAAhvC,EAAD,CAAWoM,MAAO0lE,MAEtB5yD,EAAAlf,EAAAmM,cAACylE,GAAD,CAAyBz3D,MAAOpD,EAAE,UAAW6vB,UAAWwwB,EAAc/3C,QAAS7f,KAAKkpC,cAChFxpB,EAAAlf,EAAAmM,cAACkpE,GAAAr1E,EAAD,CAAYoM,MAAOolE,eAn5BjBlyD,IAAMC,WAg6BjBqH,iBAAkBqrD,IC73BlBqD,uBA9FX,SAAAA,EAAY12D,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA81E,IACfj2E,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAg2E,GAAA31E,KAAAH,KAAMof,KA0CVmb,uBAAyB,SAAA55B,GAAU,IAAAwe,EACLtf,EAAKuf,MAAvBnY,EADuBkY,EACvBlY,OAAQpC,EADesa,EACfta,MAEhB,GAAIoC,IAAWtG,EAAOsG,QAAUpC,EAAMqO,IAAIvQ,KAAOhC,EAAOqH,OAAQ,CAC5D,IAAM9G,EAAOtB,IAAUsD,IAAIvC,EAAOqH,SAAWnI,EAAKmkB,MAAM9iB,KACxDrB,EAAKykB,SAAS,CACVpjB,KAAMA,MAjDCrB,EAsDnBy6B,uBAAyB,SAAA35B,GAAU,IAAA2f,EACLzgB,EAAKuf,MAAvBnY,EADuBqZ,EACvBrZ,OAAQpC,EADeyb,EACfzb,MAGhB,GAFesO,YAAclM,KAEdtG,EAAOoL,QAAUlH,EAAMqO,IAAIvQ,KAAOhC,EAAOqH,OAAQ,CAC5D,IAAM9G,EAAOtB,IAAUsD,IAAIvC,EAAOqH,SAAWnI,EAAKmkB,MAAM9iB,KACxDrB,EAAKykB,SAAS,CACVpjB,KAAMA,MA7DCrB,EAkEnBkwE,mBAAqB,SAAAzkE,GACbA,GAAOA,EAAMma,kBAEjB5lB,EAAKuf,MAAMS,QAAQvU,IArEJ,IAAA6c,EAGWtoB,EAAKuf,MAAvBnY,EAHOkhB,EAGPlhB,OAAQpC,EAHDsjB,EAGCtjB,MAEL3D,EAAS2D,EAAdqO,IALS,OAMfhS,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EAEjCrB,EAAKmkB,MAAQ,CACT8hB,WAAY7+B,EACZ8uE,UAAWlxE,EACX4K,MAAOilB,IACP/kB,OAAQ+kB,IACRxzB,KAAMA,GAbKrB,mFAkCfD,IAAU0hB,GAAG,uBAAwBthB,KAAKu6B,wBAC1C36B,IAAU0hB,GAAG,uBAAwBthB,KAAKs6B,uEAI1C16B,IAAUoC,eAAe,uBAAwBhC,KAAKu6B,wBACtD36B,IAAUoC,eAAe,uBAAwBhC,KAAKs6B,yDAgCjD,IAAAvW,EAC2B/jB,KAAKgkB,MAAd9iB,GADlB6iB,EACGtU,MADHsU,EACUpU,OADVoU,EACkB7iB,MACvB,IAAKA,EAAM,OAAO,KAElB,IAAMkH,EAAOxI,IAAUqI,QAAQ/G,EAAKyB,KAAOzB,EAAKkH,KAC1CmZ,EAAM3hB,IAAU4I,WAAWJ,GAEjC,OACIsX,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,6BAA6B4B,IAAKA,EAAKK,IAAI,GAAG/B,QAAS7f,KAAK+vE,qBAE3ErwD,EAAAlf,EAAAmM,cAACwqB,GAAA,EAAD,CAAcj2B,KAAMA,wDAlEAke,EAAO4E,GAAO,IAClC/c,EAAkBmY,EAAlBnY,OAAQpC,EAAUua,EAAVva,MAEhB,OAAIoC,IAAW+c,EAAM8hB,YAAcjhC,IAAUmf,EAAM+xD,UACxC,CACHjwC,WAAY7+B,EACZ8uE,UAAWlxE,EACX4K,MAAOilB,IACP/kB,OAAQ+kB,IACRxzB,KAAM2D,EAAMqO,KAIb,YA/ByB4M,IAAMC,YCsC/Bi2D,eAhCX,SAAAA,EAAY52D,GAAQ,OAAAtf,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAg2E,GAAAl2E,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAk2E,GAAA71E,KAAAH,KACVof,0EAGD,IAAAD,EACoBnf,KAAKof,MAAtBnY,EADHkY,EACGlY,OAAQsR,EADX4G,EACW5G,KAEhB,OACImH,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gCACXD,EAAAlf,EAAAmM,cAAC+rC,EAAD,CAAiBzxC,OAAQA,EAAQsT,mBAAmB,IACpDmF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gCACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oBACXD,EAAAlf,EAAAmM,cAACovB,GAAA,EAAD,CAAe90B,OAAQA,KAE1BsR,GACGmH,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,iCACXD,EAAAlf,EAAAmM,cAAA,QAAMgT,UAAU,gBAAgBpH,cAlBxBuH,IAAMC,WCmBxCuyD,GAAmB,CACrBlvD,QAAS,GACTrB,MAAO,QACPwwD,UAAW,cAGT0D,GAAkB,CACpB7yD,QAAS,GACTrB,MAAO,SAGLywD,GAAsB,CACxBpvD,QAAS,GACTrB,MAAO,SAGLm0D,eACF,SAAAA,EAAY92D,GAAO,IAAAvf,EAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAAk2E,IACfr2E,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAAo2E,GAAA/1E,KAAAH,KAAMof,KA4EV8rB,UAAY,SAAA5/B,GACR,GAAsB,KAAlBA,EAAMu9B,QAAgB,CAEtB,GADqChpC,EAAKmkB,MAAlC0uD,yBACsB,OAE9B7yE,EAAKguC,mBACoB,KAAlBviC,EAAMu9B,QACbhpC,EAAK8yE,iBACoB,KAAlBrnE,EAAMu9B,SACbhpC,EAAKg/D,cAtFMh/D,EA0FnB0zE,YA1FmBzzE,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KA0FL,SAAAC,IAAA,IAAAuG,EAAAmD,EAAA,OAAA6kB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACFkG,EAAWpH,EAAKuf,MAAhBnY,OAEHwU,YAAcxU,GAHT,CAAApG,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAKWc,KAAgBiJ,KAAK,CACtC/B,QAAS,uBACTgG,QAASoE,YAAclM,GACvBikB,OAAQ,EACRmH,MAAO,MATD,OAKJjoB,EALIvJ,EAAAmK,KAYVnL,EAAK4S,QAAUrI,EAAO2I,OACtBlT,EAAKgzE,iBAA4C,IAAzBzoE,EAAO2I,OAAO9M,OAExB,EAEdpG,EAAKykB,SAAS,CACV6xD,aAHU,EAIVnD,aAAcnzE,EAAKmzE,aAJT,GAKVC,iBAAkBpzE,EAAKozE,iBALb,GAMV/gD,WAAY9nB,EAAO4nB,cAGvBze,YAAiCtM,EATnB,EASkCpH,EAAK4S,SAxB3C,yBAAA5R,EAAAU,SAAAb,MA1FKb,EAqHnBguC,YAAc,WACV11B,KAAiB6rC,6BAA6B,OAtH/BnkD,EAyHnBo0E,WAAa,WAAM,IACPhtE,EAAWpH,EAAKuf,MAAhBnY,OADO8c,EAEsBlkB,EAAKmkB,MAAlCmyD,EAFOpyD,EAEPoyD,aAAcjkD,EAFPnO,EAEOmO,WAEhBluB,EAAO6O,IAAU3P,IAAI+D,GAC3B,GAAKjD,EAAL,CAEA,IAAIwO,GAAS,EACT0f,IACA1f,EAAQ2jE,GAGZ,IAAMtxE,EACF2N,EAAQ,GAAKA,EAAQ3S,EAAK4S,QAAQxM,OAASoN,YAAgBxT,EAAK4S,QAAQD,IAAUkK,YAAiBzV,GACvG,GAAKpC,GACAA,EAAMqO,IAAX,CAEA,IAAMhS,EAAOtB,IAAUsD,IAAI2B,EAAMqO,IAAIvQ,KAAOkC,EAAMqO,IAC7ChS,GAELwQ,YAAexQ,EAAMA,EAAKyB,GAAK,OAAQqB,EAAM,kBAAMpE,IAAUsE,oBAAoB+C,EAAQ/F,EAAKyB,SA7I/E9C,EAgJnBs3D,cAAgB,WAAM,IACVlwD,EAAWpH,EAAKuf,MAAhBnY,OACR,GAAKwU,YAAcxU,GAAnB,CAFkB,IAAAu7B,EAImB3iC,EAAKmkB,MAAlCmyD,EAJU3zC,EAIV2zC,aAEJ3jE,GAAS,EAKb,GAXkBgwB,EAIItQ,aAIlB1f,EAAQ2jE,KAGR3jE,EAAQ,GAAKA,GAAS3S,EAAK4S,QAAQxM,QAAvC,CACA,IAAMpB,EAAQwO,YAAgBxT,EAAK4S,QAAQD,IAC3C,GAAK3N,EAAL,CAbkB,IAeP3D,EAAS2D,EAAdqO,IAEN,GADAhS,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACjC,CAEA,IAAMgF,EAAY,CACd6C,QAAS,YACT8I,KAAM,IACNhN,MAAO3D,EACPuO,MAAO,IACPE,OAAQ,KAGZ9N,KAAgBiH,aAAa,CACzBC,QAAS,sBACTuxC,KAAM,CAAEp0C,oBA7KGrG,EAiLnBqpC,aAAe,WAAM,IAAA/pB,EACatf,EAAKuf,MAA3BnY,EADSkY,EACTlY,OADSw7B,GAAAtjB,EACDjY,UACqBrH,EAAKmkB,OAAlCmyD,EAFS1zC,EAET0zC,aAEJ3jE,GAAS,EAJIiwB,EAEKvQ,aAIlB1f,EAAQ2jE,GAGZ,IAAMtxE,EACF2N,EAAQ,GAAKA,EAAQ3S,EAAK4S,QAAQxM,OAASoN,YAAgBxT,EAAK4S,QAAQD,IAAUkK,YAAiBzV,GAEvG,GAAIpC,EAAO,CACP,IAAI3D,EAAO2D,EAAMqO,IAEjB,GADAhS,EAAOtB,IAAUsD,IAAIhC,EAAKyB,KAAOzB,EACvB,CACN,IAAMvB,EAAQC,IAAUw2E,oBAExBx2E,IAAUmI,gBAAgBpI,EAAOuB,MAnM1BrB,EAwMnBmzE,aAAe,SAAAxgE,GACX,OAAe,IAAXA,GAEcA,EAAQ,EACP3S,EAAK4S,QAAQxM,QA5MjBpG,EA+MnBg/D,WAAa,SAAAvzD,GACLA,GACAA,EAAMma,kBAFQ,IAMZkM,EADmB9xB,EAAKmkB,MAAtBmyD,aACyB,EAEjC,OAAOt2E,EAAKs0E,UAAUxiD,EAAW,WACzBA,IAAc9xB,EAAK4S,QAAQxM,OAAS,GACpCpG,EAAKw0E,cAzNEx0E,EA8NnBu0E,aA9NmBt0E,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KA8NJ,SAAAyB,IAAA,OAAA+sB,EAAAzuB,EAAAI,KAAA,SAAAuB,GAAA,cAAAA,EAAArB,KAAAqB,EAAApB,MAAA,cAAAoB,EAAAd,OAAA,kCAAAc,EAAAZ,SAAAW,MA9NIrC,EAkOnBozE,iBAAmB,SAAAzgE,GACf,OAAe,IAAXA,GAEcA,EAAQ,GACN,GAtOL3S,EAyOnB8yE,eAAiB,SAAArnE,GACTA,GACAA,EAAMma,kBAFY,IAMhBkM,EADmB9xB,EAAKmkB,MAAtBmyD,aACyB,EAEjC,OAAOt2E,EAAKs0E,UAAUxiD,EAAW,WACX,IAAdA,GACA9xB,EAAKu0E,kBAnPEv0E,EAwPnBw0E,SAxPmBv0E,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAwPR,SAAAwqD,IAAA,OAAAh8B,EAAAzuB,EAAAI,KAAA,SAAAsqD,GAAA,cAAAA,EAAApqD,KAAAoqD,EAAAnqD,MAAA,cAAAmqD,EAAA7pD,OAAA,kCAAA6pD,EAAA3pD,SAAA0pD,MAxPQprD,EA4PnBs0E,UAAY,SAAC3hE,EAAOlJ,GAChB,GAAIkJ,EAAQ,EAAG,OAAO,EACtB,GAAIA,GAAS3S,EAAK4S,QAAQxM,OAAQ,OAAO,EAEzCpG,EAAKykB,SACD,CACI6xD,aAAc3jE,EACdwgE,aAAcnzE,EAAKmzE,aAAaxgE,GAChCygE,iBAAkBpzE,EAAKozE,iBAAiBzgE,IAE5ClJ,GAVyB,IAarBrC,EAAWpH,EAAKuf,MAAhBnY,OAGR,OADAsM,YAAiCtM,EAAQuL,EAAO3S,EAAK4S,UAC9C,GAzQP5S,EAAK4S,QAAU,GAHA,IAAA6N,EAKYzgB,EAAKuf,MAAxBnY,EALOqZ,EAKPrZ,OAAQe,EALDsY,EAKCtY,OALD,OAOfnI,EAAKmkB,MAAQ,CACT8hB,WAAY7+B,EACZovE,WAAYruE,EACZmuE,aAAc,EACdnD,cAAc,EACdC,kBAAkB,EAClBP,0BAA0B,GAbf7yE,qFAiBG8kB,EAAWC,GAAW,IAAAuD,EACVnoB,KAAKof,MAA3BnY,EADgCkhB,EAChClhB,OAAQC,EADwBihB,EACxBjhB,UADwB47B,EASpC9iC,KAAKgkB,MANLsyD,EAHoCxzC,EAGpCwzC,cACArD,EAJoCnwC,EAIpCmwC,iBACAD,EALoClwC,EAKpCkwC,aACAH,EANoC/vC,EAMpC+vC,iBACA3gD,EAPoC4Q,EAOpC5Q,WACAwgD,EARoC5vC,EAQpC4vC,yBAGJ,OAAI/tD,EAAU1d,SAAWA,IAIrB0d,EAAUzd,YAAcA,IAIxB0d,EAAU0xD,gBAAkBA,IAI5B1xD,EAAUmwD,kBAAoB9B,IAI9BruD,EAAUouD,eAAiBA,IAI3BpuD,EAAUiuD,mBAAqBA,IAI/BjuD,EAAUsN,aAAeA,GAIzBtN,EAAU8tD,2BAA6BA,oDAO3B,IACRzrE,EAAWjH,KAAKof,MAAhBnY,OACFpC,EAAQ6X,YAAiBzV,GAC/B6L,YAA8B7L,EAAQ,CAACpC,IAEvC7E,KAAKuzE,cAELxuE,SAAS6iE,iBAAiB,UAAW5nE,KAAKkrC,WAAW,kDAIrDnmC,SAAS+iE,oBAAoB,UAAW9nE,KAAKkrC,WAAW,2CAqM5C14B,GAEZ,GADkBA,GAAS,GAAKA,EAAQxS,KAAKyS,QAAQxM,OACrD,CAEA,IAAMswE,EAAeljE,YAAgBrT,KAAKyS,QAAQD,IAGlD,GADa5S,IAAUqI,QAAQsuE,EAAarjE,IAAIvQ,KAAO4zE,EAAarjE,IAAIvQ,GAAGyF,KAG3E,OAAOmuE,oCAGF,IAAA5tD,EACiB3oB,KAAKof,MAAnBnY,EADH0hB,EACG1hB,OAAQsQ,EADXoR,EACWpR,EADXwrB,EAUD/iC,KAAKgkB,MAPLmyD,EAHCpzC,EAGDozC,aACAnD,EAJCjwC,EAIDiwC,aACAC,EALClwC,EAKDkwC,iBAEA/gD,GAPC6Q,EAMD8vC,iBANC9vC,EAOD7Q,YAKA1f,GAZCuwB,EAQD2vC,yBARC3vC,EASDyxC,cAGS,GACTtiD,IACA1f,EAAQ2jE,GAGZ,IACMI,EAAev2E,KAAKw2E,gBAAgBhkE,GACpC3N,EAAQ0xE,GAAgB75D,YAAiBzV,GACzCqtB,EAAmBiiD,EAAev2E,KAAKyS,QAAQD,GAAS,KACjDtR,EAAS2D,EAAdqO,IAER,OACIwM,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,gBAPQ,KASnBD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,wBACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,4BACXD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,oCACfD,EAAAlf,EAAAmM,cAACwoE,GAAD,CAAmB/tC,UAAW6rC,EAAkBtB,UAAQ,EAAC9xD,QAAS7f,KAAK2yE,gBACnEjzD,EAAAlf,EAAAmM,cAACyoE,GAAA50E,EAAD,CAAoBshB,SAAS,QAAQlV,MAAO4lE,MAEhD9yD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,qCAGnBD,EAAAlf,EAAAmM,cAAA,OACIgT,UAAWe,IAAW,8BAA+B,CAAE20D,iBAAkBrC,IACzEnzD,QAAS7f,KAAK6+D,YACdn/C,EAAAlf,EAAAmM,cAAC8pE,GAAD,CAA2BxvE,OAAQA,EAAQpC,MAAOA,EAAOgb,QAAS7f,KAAK6+D,cAG3En/C,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,6BACXD,EAAAlf,EAAAmM,cAACwoE,GAAD,CAAmBt1D,QAAS7f,KAAK6tC,aAC7BnuB,EAAAlf,EAAAmM,cAACy+B,EAAA5qC,EAAD,CAAWshB,SAAS,QAAQlV,MAAO4lE,MAEvC9yD,EAAAlf,EAAAmM,cAACwoE,GAAD,CAAmB/tC,UAAW4rC,EAAcrB,UAAQ,EAAC9xD,QAAS7f,KAAK6+D,YAC/Dn/C,EAAAlf,EAAAmM,cAAC4oE,GAAA/0E,EAAD,CAAkBshB,SAAS,QAAQlV,MAAO4lE,MAE9C9yD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,sCAGvBD,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAU,uBACXD,EAAAlf,EAAAmM,cAAC+pE,GAAD,CAA2BzvE,OAAQA,EAAQsR,KAAM6a,YAAwBkB,KACzE5U,EAAAlf,EAAAmM,cAAC8oE,GAAD,CACI96D,MAAOpD,EAAE,eACTmpC,SAAUxuB,GAAc1f,GAAS,EAAvB,GAAAvH,OAA8BuH,EAAQ,EAAtC,QAAAvH,OAA8CinB,GAAe,OAE3ExS,EAAAlf,EAAAmM,cAACipE,GAAD,CAA2Bj7D,MAAOpD,EAAE,QAASvP,OAAQ9G,EAAKyB,GAAIkd,QAAS7f,KAAKi0E,aAC3Ex4D,YAAcxU,IACXyY,EAAAlf,EAAAmM,cAACylE,GAAD,CACIz3D,MAAOpD,EAAE,WACT6vB,UAAWmvC,EACX12D,QAAS7f,KAAKm3D,eACdz3C,EAAAlf,EAAAmM,cAAC6iC,GAAAhvC,EAAD,CAAWoM,MAAO0lE,MAG1B5yD,EAAAlf,EAAAmM,cAACylE,GAAD,CAAyBz3D,MAAOpD,EAAE,UAAW6vB,UAAQ,EAACvnB,QAAS7f,KAAKkpC,cAChExpB,EAAAlf,EAAAmM,cAACkpE,GAAAr1E,EAAD,CAAYoM,MAAOqpE,eA/VVn2D,IAAMC,WA2WxBqH,iBAAkB8uD,sBCvX3BS,eACF,SAAAA,EAAYv3D,GAAO,IAAAvf,EAAA,OAAAC,OAAAwjB,EAAA,EAAAxjB,CAAAE,KAAA22E,IACf92E,EAAAC,OAAAyjB,EAAA,EAAAzjB,CAAAE,KAAAF,OAAA0jB,EAAA,EAAA1jB,CAAA62E,GAAAx2E,KAAAH,KAAMof,KA2CVw3D,uBAAyB,SAAAj2E,GAAU,IACvBsG,EAA6BtG,EAA7BsG,OAAQC,EAAqBvG,EAArBuG,UAAW8rB,EAAUryB,EAAVqyB,MAE3BnzB,EAAKsjD,iBAAiBl8C,EAAQC,EAAW8rB,IA/C1BnzB,EAkDnBg3E,uBAAyB,SAAAl2E,GAAU,IACvBoL,EAAkBpL,EAAlBoL,OAAQinB,EAAUryB,EAAVqyB,MAEhBnzB,EAAKqkD,iBAAiBn4C,EAAQinB,IArDfnzB,EAwDnBu1D,oCAAsC,SAAAz0D,GAClCd,EAAKykB,SAAS,CACV+wC,qBAAsBl9C,KAAiBk9C,wBA1D5Bx1D,EA8DnB2/B,iCAAmC,SAAA7+B,GAC/Bd,EAAKykB,SAAS,CAAEmb,mBAAoBtnB,KAAiBsnB,sBA/DtC5/B,EAkEnBy/B,wCAA0C,SAAA3+B,GACtCd,EAAKykB,SAAS,CACVib,0BAA2BpnB,KAAiBonB,6BApEjC1/B,EAwEnBi3E,sBAAwB,SAAAn2E,GAAU,IACtB25C,EAAS35C,EAAT25C,KAERz6C,EAAKykB,SAAS,CAAEoI,YAAa4tB,KA3Edz6C,EA8EnBiuE,2BAA6B,WACzB,IAAMv7C,EAAU,IAAI5B,KACd1pB,EAAS8vE,SAASxkD,EAAQrvB,IAAI,eACTiV,KAAnB47C,gBAEc9sD,GAClBpH,EAAKsjD,iBAAiBl8C,IApFXpH,EAwFnBsjD,iBAAmB,SAACl8C,GAA4C,IAApCC,EAAoCxF,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,GAAAA,UAAA,GAAxB,KAAMsxB,EAAkBtxB,UAAAuE,OAAA,QAAAsI,IAAA7M,UAAA,IAAAA,UAAA,GACtDmvC,EAAgB14B,KAAiBs8B,YACjCuiC,EAAsB7+D,KAAiBivC,aACvCwrB,EAAmBz6D,KAAiBowC,eAE1C,GAAIv1B,EACIgkD,IAAwB/vE,GACxBpF,KAAgBiH,aAAa,CACzBC,QAAS,2BACT9B,gBAOZ,GAAI4pC,IAAkB5pC,GAAUC,GAAa0rE,IAAqB1rE,EAC9DrH,EAAKo3E,iBAAiB3pD,QAAQu9C,kBAC1B3jE,GACA2rB,aAAiB5rB,EAAQC,QAE1B,GAAI2pC,IAAkB5pC,GAAWC,EAQpCrF,KAAgBugD,UAAUn7C,EAAQC,OARa,CAC/C,IAAMlD,EAAO6O,IAAU3P,IAAI+D,GACvBjD,GAAQA,EAAK2T,aAAe,EAC5B9X,EAAKo3E,iBAAiB3pD,QAAQ29C,gBAE9BprE,EAAKo3E,iBAAiB3pD,QAAQs9C,mBAlHvB/qE,EAyHnBqkD,iBAzHmB,eAAA7jD,EAAAP,OAAA2zC,EAAA,EAAA3zC,CAAAmvB,EAAAzuB,EAAAC,KAyHA,SAAAC,EAAOqL,EAAQinB,GAAf,IAAAhvB,EAAA,OAAAirB,EAAAzuB,EAAAI,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACVgL,EADU,CAAAlL,EAAAE,KAAA,eAAAF,EAAAQ,OAAA,wBAAAR,EAAAE,KAAA,EAGIc,KAAgBiJ,KAAK,CACpC/B,QAAS,oBACTgG,QAAShD,EACTiuC,OAAO,IANI,OAGTh2C,EAHSnD,EAAAmK,KASfnL,EAAKsjD,iBAAiBn/C,EAAKrB,GAAI,KAAMqwB,GATtB,wBAAAnyB,EAAAU,SAAAb,MAzHA,gBAAAc,EAAAe,GAAA,OAAAlC,EAAAoB,MAAAzB,KAAA0B,YAAA,GAGf7B,EAAKo3E,iBAAmBn3D,IAAMggB,YAE9BjgC,EAAKmkB,MAAQ,CACTqxC,qBAAsBl9C,KAAiBk9C,qBACvC51B,mBAAoBtnB,KAAiBsnB,mBACrCF,0BAA2BpnB,KAAiBonB,0BAC5C7S,YAAa,MATF7sB,mFAoBfmP,IAAUsS,GAAG,uBAAwBthB,KAAK62E,wBAC1ChkE,IAAUyO,GAAG,uBAAwBthB,KAAK42E,wBAE1Cz+D,KAAiBmJ,GAAG,oCAAqCthB,KAAKo1D,qCAC9Dj9C,KAAiBmJ,GAAG,iCAAkCthB,KAAKw/B,kCAC3DrnB,KAAiBmJ,GAAG,wCAAyCthB,KAAKs/B,yCAClEnnB,KAAiBmJ,GAAG,sBAAuBthB,KAAK82E,uBAChD3+D,KAAiBmJ,GAAG,2BAA4BthB,KAAK8tE,2EAIrD9+D,IAAUhN,eAAe,uBAAwBhC,KAAK62E,wBACtDhkE,IAAU7Q,eAAe,uBAAwBhC,KAAK42E,wBAEtDz+D,KAAiBnW,eAAe,oCAAqChC,KAAKo1D,qCAC1Ej9C,KAAiBnW,eAAe,iCAAkChC,KAAKw/B,kCACvErnB,KAAiBnW,eACb,wCACAhC,KAAKs/B,yCAETnnB,KAAiBnW,eAAe,sBAAuBhC,KAAK82E,uBAC5D3+D,KAAiBnW,eAAe,2BAA4BhC,KAAK8tE,6DA4F5D,IACGvtD,EAAYvgB,KAAKof,MAAjBmB,QADHwD,EAEwF/jB,KAAKgkB,MAA1FqxC,EAFHtxC,EAEGsxC,qBAAsB51B,EAFzB1b,EAEyB0b,mBAAoBF,EAF7Cxb,EAE6Cwb,0BAA2B7S,EAFxE3I,EAEwE2I,YAE7E,OACIhN,EAAAlf,EAAAmM,cAAA+S,EAAAlf,EAAA2kB,SAAA,KACIzF,EAAAlf,EAAAmM,cAAA,OAAKgT,UAAWe,IAAWH,EAAQ22D,KAAM,OAAQ,CAAEC,oBAAqB9hB,KACpE31C,EAAAlf,EAAAmM,cAACyqE,GAAD,CAASzhB,aAAc31D,KAAKmjD,mBAC5BzjC,EAAAlf,EAAAmM,cAAC0qE,GAAD,CAAel3C,IAAKngC,KAAKi3E,mBACxB5hB,GAAwB31C,EAAAlf,EAAAmM,cAAC6pD,GAAD,OAE7B92C,EAAAlf,EAAAmM,cAAC2qE,GAAA,EAAD,MACC73C,GAAsB/f,EAAAlf,EAAAmM,cAAC4qE,GAAgB93C,GACvCF,GAA6B7f,EAAAlf,EAAAmM,cAAC6qE,GAAuBj4C,GACrD7S,GAAehN,EAAAlf,EAAAmM,cAAC8qE,GAAkB/qD,WApJ5B5M,IAAMC,WA4JvB4G,GAAUC,YACZ8wD,IACAvwD,IACApG,IAtKW,SAAAC,GAAK,MAAK,CACrBk2D,KAAM,CACF/9C,WAAmC,SAAvBnY,EAAM0d,QAAQ7sB,KAAkBmP,EAAM0d,QAAQvF,WAAW0e,QAAU,UAC/E91B,MAAOf,EAAM0d,QAAQjhB,KAAKkhB,YAoK9BkY,GAGWlwB,aAAQgwD","file":"static/js/3.bbf60a28.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset() {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateClosed') {\n            this.reset();\n        } else if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                console.log(`readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadReplies(store, chatId, [...replies.keys()]);\n\n    return loadUsersContent(store, [...users.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    return new Promise(resolve => {\n        FileStore.getLocalFile(\n            store,\n            file,\n            null,\n            () => {\n                FileStore.updateUserPhotoBlob(userId, id);\n                resolve();\n            },\n            () => {\n                FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user);\n                resolve();\n            }\n        );\n    });\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    return new Promise(resolve => {\n        FileStore.getLocalFile(\n            store,\n            file,\n            null,\n            () => {\n                FileStore.updateChatPhotoBlob(chatId, id);\n                resolve();\n            },\n            () => {\n                FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat);\n                resolve();\n            }\n        );\n    });\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    return loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    return Promise.all(ids.map(id => loadUserContent(store, id)));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    return loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    return Promise.all(ids.map(id => loadChatContent(store, id)));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickerThumbnailContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorMain)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getSendingState(message) {\n    if (!message) return;\n    if (!message.is_outgoing) return;\n    if (!message.sending_state) return 'succeeded';\n    return message.sending_state['@type'] === 'messageSendingStateFailed' ? 'failed' : 'pending';\n}\n\nfunction getOutgoingStatus(message) {\n    if (!message) return;\n    if (!message.is_outgoing) return;\n    if (!getUnread(message)) return 'read';\n    return getSendingState(message);\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getSendingState,\n    getOutgoingStatus\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openUser(userId, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenUser',\n        userId,\n        popup\n    });\n}\n\nexport function openChat(chatId, messageId = null, popup = false) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateOpenChat',\n        chatId,\n        messageId,\n        popup\n    });\n}\n\nexport function highlightMessage(chatId, messageId) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageHighlighted',\n        chatId,\n        messageId\n    });\n}\n\nexport function selectMessage(chatId, messageId, selected) {\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMessageSelected',\n        chatId,\n        messageId,\n        selected\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nfunction getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nfunction getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nexport { getAudioTitle, getNeighborStickersFromSets, getStickers, isBlurredThumbnail };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia, preview } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src && !preview ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <div className={className}>\n                    <a onClick={this.handleSelect}>{fullName}</a>\n                </div>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <div className={className}>\n                    <a onClick={this.handleSelect}>{fullName}</a>\n                </div>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton className={classes.iconButton} aria-label='Send' onClick={this.handleSubmit}>\n                                <SendIcon color='primary' />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTileControl chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from './UserTileControl';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTileControl userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { getChatTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitleControl.css';\n\nclass DialogTitleControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return <div className='dialog-title'>{title}</div>;\n    }\n}\n\nDialogTitleControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitleControl.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitleControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatusControl.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogStatusControl from './DialogStatusControl';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        onSelect(chat);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTileControl chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatusControl chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport CircularProgress from '../ColumnMiddle/MainMenuButton';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        console.log('chatDetailsListRef', this.chatDetailsListRef);\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        console.log(\n            `[ChatDetails] componentDidUpdate before chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        console.log(\n            `[ChatDetails] componentDidUpdate after chatId=${chatId} list.scrollTop=${\n                list.scrollTop\n            } list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight}`\n        );\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        ApplicationStore.setProfileMediaViewerContent({ chatId: chatId });\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleSelectUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {popup && !isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    <Divider />\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chat => {\n        const { popup } = this.props;\n\n        openChat(chat.id);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTileControl chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: '0px'\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTileControl chatId={chatId} showSavedMessages />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitleControl chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTileControl from './ChatTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    listItemSelected: {\n        backgroundColor: theme.palette.primary.main + '!important'\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.listItemSelected]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTileControl chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTileControl from './ChatTileControl';\nimport UserTileControl from './UserTileControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    accentBackground: {\n        background: theme.palette.primary.main + '!important'\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.secondary : '#70777b'\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTileControl userId={sender_user_id} />\n            ) : (\n                <ChatTileControl chatId={chatId} />\n            );\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.accentBackground]: chatId === selectedChatId && messageId === selectedMessageId },\n                        { 'accent-background': chatId === selectedChatId && messageId === selectedMessageId }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitleControl chatId={chatId} />\n                            )}\n                            <div className={classNames('dialog-meta-date', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local,\n                global: null,\n                messages: null\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            if (text.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: text\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    const globalLatinPromise = TdLibController.send({\n                        '@type': 'searchPublicChats',\n                        query: latinText\n                    });\n                    globalPromises.push(globalLatinPromise);\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global: global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContentControl.css';\n\nclass DialogContentControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContentControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatUnreadCount, getChatUnreadMentionCount, isChatMuted } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogBadgeControl.css';\n\nconst styles = theme => ({\n    dialogBadge: {\n        background: theme.palette.primary.main\n    },\n    dialogBadgeMuted: {\n        background: theme.palette.type === 'dark' ? theme.palette.text.disabled : '#d8d8d8'\n    }\n});\n\nclass DialogBadgeControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { classes, chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const unreadCount = getChatUnreadCount(chat);\n        const unreadMentionCount = getChatUnreadMentionCount(chat);\n        const showUnreadCount = unreadCount > 1 || (unreadCount === 1 && unreadMentionCount < 1);\n\n        return (\n            <>\n                {unreadMentionCount && (\n                    <div className={classNames('dialog-badge', classes.dialogBadge)}>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount ? (\n                    <div\n                        className={classNames(\n                            { [classes.dialogBadgeMuted]: isChatMuted(chat) },\n                            'dialog-badge',\n                            classes.dialogBadge\n                        )}>\n                        <span className='dialog-badge-text'>{unreadCount}</span>\n                    </div>\n                ) : chat.is_pinned ? (\n                    <i className='dialog-badge-pinned' />\n                ) : null}\n            </>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogBadgeControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getLastMessageDate, showChatDraft } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMetaControl.css';\nimport { getOutgoingStatus } from '../../Utils/Message';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\n\nclass DialogMetaControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.removeListener('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatReadInbox', this.onUpdate);\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdate);\n        ChatStore.removeListener('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.removeListener('updateMessageMentionRead', this.onUpdate);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        const date = getLastMessageDate(chat);\n        const showDraftChat = showChatDraft(chat.id);\n        const status = !showDraftChat && getOutgoingStatus(chat.last_message);\n        const currentChatId = ApplicationStore.getChatId();\n        const isDialogSelected = currentChatId === chatId;\n\n        let statusIcon = null;\n        if (status) {\n            switch (status) {\n                case 'failed':\n                    statusIcon = <ErrorOutlineIcon fontSize='inherit' color={isDialogSelected ? 'inherit' : 'error'} />;\n                    break;\n                case 'pending':\n                    statusIcon = <ScheduleIcon fontSize='inherit' color={isDialogSelected ? 'inherit' : 'disabled'} />;\n                    break;\n                case 'succeeded':\n                    statusIcon = <DoneIcon fontSize='inherit' color={isDialogSelected ? 'inherit' : 'primary'} />;\n                    break;\n                case 'read':\n                    statusIcon = <DoneAllIcon fontSize='inherit' color={isDialogSelected ? 'inherit' : 'primary'} />;\n                    break;\n            }\n        }\n\n        return (\n            <>\n                {status && <div className='dialog-meta-status'>{statusIcon}</div>}\n                {date && <div className='dialog-meta-date'>{date}</div>}\n            </>\n        );\n    }\n}\n\nexport default DialogMetaControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTileControl from './ChatTileControl';\nimport DialogContentControl from './DialogContentControl';\nimport DialogBadgeControl from './DialogBadgeControl';\nimport DialogTitleControl from './DialogTitleControl';\nimport DialogMetaControl from './DialogMetaControl';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogControl.css';\n\nconst styles = theme => ({\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {},\n    dialogActive: {\n        color: '#fff', //theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '& $statusRoot': {\n            background: theme.palette.primary.main\n        }\n    },\n    dialog: {\n        borderRadius: 8,\n        cursor: 'pointer',\n        margin: '0 12px',\n        '&:hover': {\n            backgroundColor: theme.palette.primary.main + '22',\n            '& $statusRoot': {\n                background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n            },\n            '& $statusIcon': {\n                background: theme.palette.primary.main + '22'\n            }\n        }\n    }\n});\n\nclass DialogControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat: chat\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.hidden !== this.props.hidden) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = () => {\n        openChat(this.props.chatId);\n    };\n\n    render() {\n        const { classes, chatId, showSavedMessages, hidden } = this.props;\n\n        if (hidden) return null;\n\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(\n                    isSelected ? classes.dialogActive : classes.dialog,\n                    isSelected ? 'dialog-active' : 'dialog'\n                )}\n                onMouseDown={this.handleSelect}>\n                <div className='dialog-wrapper'>\n                    <ChatTileControl\n                        chatId={chatId}\n                        showSavedMessages={showSavedMessages}\n                        showOnline\n                        classes={{ statusRoot: classes.statusRoot, statusIcon: classes.statusIcon }}\n                    />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitleControl chatId={chatId} />\n                            <DialogMetaControl chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContentControl chatId={chatId} />\n                            <DialogBadgeControl chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogControl.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withStyles(styles, { withTheme: true })(DialogControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { Fade } from '@material-ui/core';\nimport DialogControl from '../Tile/DialogControl';\nimport DialogControlPlaceholder from '../Tile/DialogControlPlaceholder';\nimport { CHAT_SLICE_LIMIT, CONTENTS_PRELOAD_DELAY } from '../../Constants';\nimport { loadChatsContent } from '../../Utils/File';\nimport { orderCompare, waitSomeTime } from '../../Utils/Common';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            chats: [],\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chats !== this.state.chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        const { scrollTop } = snapshot;\n\n        list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        // ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.removeListener('updateChatDraftMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatIsPinned', this.onUpdate);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdate);\n        ChatStore.removeListener('updateChatOrder', this.onUpdateChatOrder);\n        ChatStore.removeListener('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        if (update.inProgress) {\n            this.hiddenChats.set(update.chatId, update.chatId);\n        } else {\n            this.hiddenChats.delete(update.chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state } = update;\n\n        this.setState({ authorizationState: authorization_state }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    onUpdateConnectionState = update => {\n        const newConnectionState = update.state;\n        const { connectionState } = this.state;\n\n        this.setState({ connectionState: newConnectionState });\n\n        const updatingCompleted =\n            connectionState &&\n            connectionState['@type'] === 'connectionStateUpdating' &&\n            newConnectionState['@type'] !== 'connectionStateUpdating';\n        if (!updatingCompleted) return;\n\n        const hasSkippedUpdates = ChatStore.skippedUpdates.length > 0;\n        if (!hasSkippedUpdates) return;\n\n        ChatStore.skippedUpdates = [];\n        this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (authorizationState && authorizationState['@type'] === 'authorizationStateReady') {\n            await FileStore.initDB(() => this.onLoadNext());\n        }\n    };\n\n    onUpdateChatOrder = update => {\n        // NOTE: updateChatOrder is primary used to delete chats with order=0\n        // In all other cases use updateChatLastMessage\n\n        if (update.order !== '0') return;\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) {\n            return;\n        }\n\n        // unselect deleted chat\n        if (update.chat_id === ApplicationStore.getChatId()) {\n            TdLibController.setChatId(0);\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n\n        let chatIds = [];\n        for (let i = 0; i < this.state.chats.length; i++) {\n            let chat = ChatStore.get(this.state.chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds);\n    };\n\n    onUpdate = update => {\n        const { chat_id, order } = update;\n        if (order === '0') return;\n        const chat = ChatStore.get(chat_id);\n        if (!chat || chat.order === '0') {\n            return;\n        }\n\n        const { chats } = this.state;\n\n        let newChatIds = [];\n        if (chats.length > 0) {\n            const existingChat = chats.find(x => x === chat_id);\n            if (!existingChat) {\n                const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                if (orderCompare(minChatOrder, chat.order) === 1) {\n                    return;\n                }\n                newChatIds.push(chat.id);\n            }\n        }\n\n        // get last chat.order values\n        let chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list && list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            this.onLoadNext();\n        }\n    };\n\n    onLoadNext = async (replace = false) => {\n        const { chats } = this.state;\n\n        if (this.loading) return;\n\n        let offsetOrder = '9223372036854775807'; // 2^63\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        //TODO: replace result with one-way data flow\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        await waitSomeTime(this.loadChatContents(result.chat_ids), CONTENTS_PRELOAD_DELAY);\n\n        if (!ApplicationStore.isDialogsReady) {\n            ApplicationStore.setDialogsReady(true);\n            this.forceUpdate();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids);\n        } else {\n            this.appendChats(result.chat_ids);\n        }\n    };\n\n    loadChatContents(chats) {\n        const store = FileStore.getStore();\n        return loadChatsContent(store, chats);\n    }\n\n    appendChats(chats, callback) {\n        if (chats.length === 0) return;\n\n        this.setState({ chats: this.state.chats.concat(chats) }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats: chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current;\n        list.scrollTop = 0;\n    }\n\n    render() {\n        const { chats } = this.state;\n        const { isDialogsReady } = ApplicationStore;\n        const dialogs = chats.map(x => <DialogControl key={x} chatId={x} hidden={this.hiddenChats.has(x)} />);\n\n        /*<Scrollbars*/\n        /*ref={this.listRef}*/\n        /*onScroll={this.handleScroll}*/\n        /*autoHide*/\n        /*autoHideTimeout={500}*/\n        /*autoHideDuration={300}>*/\n        /*{chats}*/\n        /*</Scrollbars>*/\n\n        return (\n            <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n                <Fade in={isDialogsReady}>\n                    <div>{dialogs}</div>\n                </Fade>\n\n                {!isDialogsReady && Array.from(Array(10), (_, i) => <DialogControlPlaceholder index={i} key={i} />)}\n            </div>\n        );\n    }\n}\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case 'authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && (\n                        <>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                            <span className='header-progress'>.</span>\n                        </>\n                    )}\n                    <span\n                        className={classNames('header-status-title', {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const title = getMediaTitle(message);\n        const dateHint = getDateHint(message);\n        const date = getDate(message);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHint}>\n                                        &nbsp;\n                                        {date}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id, true);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport { getOutgoingStatus } from '../../Utils/Message';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport DoneIcon from '@material-ui/icons/Done';\nimport DoneAllIcon from '@material-ui/icons/DoneAll';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend = payload => {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.forceUpdate();\n        }\n    };\n\n    handleUpdateChatReadOutbox = payload => {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        const status = getOutgoingStatus(message);\n\n        if (!status) return null;\n\n        let statusIcon = null;\n        switch (status) {\n            case 'failed':\n                statusIcon = <ErrorOutlineIcon fontSize='inherit' color='error' />;\n                break;\n            case 'pending':\n                statusIcon = <ScheduleIcon fontSize='inherit' color='disabled' />;\n                break;\n            case 'succeeded':\n                statusIcon = <DoneIcon fontSize='inherit' color='primary' />;\n                break;\n            case 'read':\n                statusIcon = <DoneAllIcon fontSize='inherit' color='primary' />;\n                break;\n        }\n\n        return <div className='message-status'>{statusIcon}</div>;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTileControl from '../Tile/UserTileControl';\nimport ChatTileControl from '../Tile/ChatTileControl';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getDate,\n    getDateHint,\n    getText,\n    getMedia,\n    getUnread,\n    getSenderUserId,\n    getWebPage,\n    openMedia\n} from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { contextMenu, selected, highlighted } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messagePoll': {\n                this.forceUpdate();\n                break;\n            }\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { contextMenu, left, top, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { views, edit_date, reply_to_message_id, forward_info } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const date = getDate(message);\n        const dateHint = getDateHint(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n        const senderUserId = getSenderUserId(message);\n\n        const tile = senderUserId ? (\n            <UserTileControl userId={senderUserId} onSelect={this.handleSelectUser} />\n        ) : (\n            <ChatTileControl chatId={chatId} onSelect={this.handleSelectChat} />\n        );\n\n        const messageClassName = classNames(\n            'message',\n            classes.message,\n            { 'message-selected': selected },\n            { [classes.messageSelected]: selected },\n            // { 'message-highlighted': highlighted && !selected },\n            { [classes.messageHighlighted]: highlighted && !selected }\n        );\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {!forward_info && <MessageAuthor chatId={chatId} openChat userId={senderUserId} openUser />}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            <div className='message-meta'>\n                                <span>&nbsp;</span>\n                                {views > 0 && (\n                                    <>\n                                        <i className='message-views-icon' />\n                                        <span className='message-views'>\n                                            &nbsp;\n                                            {views}\n                                            &nbsp; &nbsp;\n                                        </span>\n                                    </>\n                                )}\n                                {edit_date > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                                <MessageStatus chatId={chatId} messageId={messageId} />\n                                <a className='message-date' onClick={this.handleDateClick}>\n                                    <span title={dateHint}>{date}</span>\n                                </a>\n                            </div>\n                        </div>\n                        {Boolean(reply_to_message_id) && <Reply chatId={chatId} messageId={reply_to_message_id} />}\n                        {media}\n                        <div className='message-text'>{text}</div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Alexander Zinchuk\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MessagePlaceholder.css';\n\nconst MessagePlaceholder = ({ index }) => {\n    const titleWidth = `${70 + Math.sin(index) * 10}%`;\n    const textWidth = `${90 + Math.cos(index) * 10}%`;\n\n    return (\n        <div className='message-placeholder'>\n            <div className='message-placeholder-wrapper'>\n                <div className='message-placeholder-tile-photo' />\n                <div className='message-placeholder-content'>\n                    <div className='message-placeholder-title' style={{ width: titleWidth }} />\n                    <div className='message-placeholder-text' style={{ width: textWidth }} />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nMessagePlaceholder.propTypes = {\n    index: PropTypes.number.isRequired\n};\n\nexport default MessagePlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            //console.log('PinnedMessage.getDerivedStateFromProps', chat, chat.pinned_message_id);\n            return {\n                prevPropsChatId: chatId,\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ messageId: null });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        //console.log('PinnedMessage.message', chatId, messageId, message);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div\n                className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                onClick={this.handleClick}>\n                <div className='pinned-message-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='pinned-message-content'>\n                        <div className={classNames('reply-content-title', classes.accentColorMain)}>\n                            {t('PinnedMessage')}\n                        </div>\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                    <div className='pinned-message-delete-button'>\n                        <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                            <CloseIcon />\n                        </IconButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className='service-message-content'>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport MessagePlaceholder from '../Message/MessagePlaceholder';\nimport PinnedMessage from './PinnedMessage';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, waitSomeTime } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { highlightMessage } from '../../Actions/Client';\nimport { CONTENTS_PRELOAD_DELAY, MESSAGE_SLICE_LIMIT, MESSAGES_PLACEHOLDER_DELAY } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0,\n            firstSliceLoading: false\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, firstSliceLoading } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoading !== firstSliceLoading) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        this.insertAfter(this.filterMessages(history), scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const message = this.messages[items[i]];\n            if (message) {\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            // load files\n            const store = FileStore.getStore();\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n            await waitSomeTime(loadMessageContents(store, result.messages), CONTENTS_PRELOAD_DELAY);\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            MessagesList.viewMessages(result.messages);\n\n            // load full info\n            getChatFullInfo(chat.id);\n\n            const placeholdersTimeout = setTimeout(() => {\n                this.setState({ firstSliceLoading: true });\n            }, MESSAGES_PLACEHOLDER_DELAY);\n            await this.loadIncompleteHistory(result);\n            clearTimeout(placeholdersTimeout);\n            this.setState({ firstSliceLoading: false });\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChat.id\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n\n        let result;\n        try {\n            result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset: 0,\n                limit: MESSAGE_SLICE_LIMIT\n            });\n\n            const store = FileStore.getStore();\n            await waitSomeTime(loadMessageContents(store, result.messages), CONTENTS_PRELOAD_DELAY);\n        } finally {\n            this.loading = false;\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n\n        let result;\n        try {\n            result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: basicGroupChat.id,\n                from_message_id: fromMessageId,\n                offset: 0,\n                limit: MESSAGE_SLICE_LIMIT\n            });\n\n            const store = FileStore.getStore();\n            await waitSomeTime(loadMessageContents(store, result.messages), CONTENTS_PRELOAD_DELAY);\n        } finally {\n            this.loading = false;\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n\n        let result;\n        try {\n            result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chatId,\n                from_message_id: fromMessageId,\n                offset: -MESSAGE_SLICE_LIMIT - 1,\n                limit: MESSAGE_SLICE_LIMIT + 1\n            });\n\n            const store = FileStore.getStore();\n            await waitSomeTime(loadMessageContents(store, result.messages), CONTENTS_PRELOAD_DELAY);\n        } finally {\n            this.loading = false;\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), ScrollBehaviorEnum.NONE);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, scrollBehavior, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), scrollBehavior: scrollBehavior }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        this.updateItemsInView();\n\n        const list = this.listRef.current;\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScroll');\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            console.log('SCROLL HANDLESCROLL suppressHandleScrollOnSelectChat');\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n\n        let result;\n        try {\n            result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            const store = FileStore.getStore();\n            loadChatsContent(store, [chatId]);\n            await waitSomeTime(loadMessageContents(store, result.messages), CONTENTS_PRELOAD_DELAY);\n        } finally {\n            this.loading = false;\n        }\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, firstSliceLoading } = this.state;\n\n        console.log(`MessagesList.render clearHistory=${clearHistory}`, history);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) =>\n                  isServiceMessage(x) ? (\n                      <ServiceMessage\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  ) : (\n                      <Message\n                          key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                          ref={el => this.itemsMap.set(i, el)}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          showTitle\n                          sendingState={x.sending_state}\n                          showUnreadSeparator={separatorMessageId === x.id}\n                      />\n                  )\n              );\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {firstSliceLoading && Array.from(Array(10), (_, i) => <MessagePlaceholder index={i} key={i} />)}\n                        {this.messages}\n                    </div>\n                </div>\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('Remove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { Fade } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport ChatInfoDialog from '../Dialog/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Dialog/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onUpdateChatDetailsVisibility = () => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateDialogsReady = () => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { t } = this.props;\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible, isDialogsReady } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                {!chatId && <>\n                    <Fade in={!isDialogsReady}>\n                        <div className='dialog-details-spinner-canvas'>\n                            <div className='dialog-details-spinner dialog-details-spinner-spin'>\n                                <SendIcon color='primary' fontSize='large' />\n                            </div>\n                        </div>\n                    </Fade>\n                    <Fade in={isDialogsReady}>\n                        <div className='dialog-details-select-chat-tip'>\n                            <div>{t('SelectChatTip')}</div>\n                        </div>\n                    </Fade>\n                </>}\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(DialogDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTileControl from './UserTileControl';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(message);\n\n        const tileControl = userId ? (\n            <UserTileControl userId={userId} />\n        ) : (\n            <ChatTileControl chatId={chatId} />\n        );\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row message-meta'>\n                            <span className='message-date'>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        //console.log('mediaViewer file', file);\n        //console.log('mediaViewer thumbnail', thumbnail);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, extended, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { 'media-viewer-button-extended': extended }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    extended: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            ApplicationStore.setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        ApplicationStore.setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} extended onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <div className='media-viewer-button-placeholder' />\n                    </div>\n\n                    <div\n                        className={classNames('media-viewer-content-column', { 'cursor-pointer': hasNextMedia })}\n                        onClick={this.handleNext}>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handleNext}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} extended onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <div className='media-viewer-button-placeholder' />\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTileControl from './ChatTileControl';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTileControl chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row message-meta'>\n                                <span className='message-date'>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport classNames from 'classnames';\n\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        ApplicationStore.setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    getHistoryPhoto(index) {\n        const inHistory = index >= 0 && index < this.history.length;\n        if (!inHistory) return;\n\n        const historyPhoto = getProfilePhoto(this.history[index]);\n\n        const blob = FileStore.getBlob(historyPhoto.big.id) || historyPhoto.big.id.blob;\n        if (!blob) return;\n\n        return historyPhoto;\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const historyPhoto = this.getHistoryPhoto(index);\n        const photo = historyPhoto || getPhotoFromChat(chatId);\n        const userProfilePhoto = historyPhoto ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} extended onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <div className='media-viewer-button-placeholder' />\n                    </div>\n\n                    <div\n                        className={classNames('media-viewer-content-column', { 'cursor-pointer': hasNextMedia })}\n                        onClick={this.handleNext}>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handleNext} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} extended onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <div className='media-viewer-button-placeholder' />\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!historyPhoto}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Dialog/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Cookies from 'universal-cookie';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    onClientUpdateDialogsReady = () => {\n        const cookies = new Cookies();\n        const chatId = parseInt(cookies.get('lastChatId'));\n        const { isDialogsReady } = ApplicationStore;\n\n        if (isDialogsReady && chatId) {\n            this.handleSelectChat(chatId);\n        }\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.unread_count > 0) {\n                this.dialogDetailsRef.current.scrollToStart();\n            } else {\n                this.dialogDetailsRef.current.scrollToBottom();\n            }\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}